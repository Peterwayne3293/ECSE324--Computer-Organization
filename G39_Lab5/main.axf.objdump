
C:/Users/ifaruk/Downloads/ECSE 324/G39_Lab5/main.axf:     file format elf32-littlearm


Disassembly of section .vectors:

00000000 <__cs3_interrupt_vector>:
   0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  20:	d8 14 00 00 e4 14 00 00 f0 14 00 00 fc 14 00 00     ................
  30:	08 15 00 00 ac 37 00 00 80 13 00 00 14 15 00 00     .....7..........

Disassembly of section .text:

00000040 <__cs3_reset_generic>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_start_c+0x94>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_start_c+0x90>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_start_c+0x98>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_start_c+0x60>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_start_c+0x60>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_start_c+0x48>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_start_c+0x80>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_start_c+0x70>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_start_c+0x20>
      d4:	eb000d7f 	bl	36d8 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	000038b0 	.word	0x000038b0

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <ICDISER+0x18>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <ICDISER+0x1c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <ICDISER+0x20>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffff8 	.word	0x3ffffff8
     120:	00032f70 	.word	0x00032f70

00000124 <__cs3_heap_start_ptr>:
     124:	001a9fd0 	.word	0x001a9fd0

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffff8 	.word	0x3ffffff8

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	00032f78 	.word	0x00032f78
     170:	00032f7b 	.word	0x00032f7b
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <ICDICER+0x38>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <ICDICER+0x3c>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <ICDICER+0x20>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <ICDICER+0x40>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <ICDICER+0x18>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <ICDICER+0x18>
     1b8:	00032f78 	.word	0x00032f78
     1bc:	00032f78 	.word	0x00032f78
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	00032f78 	.word	0x00032f78
     200:	00000000 	.word	0x00000000
     204:	00003848 	.word	0x00003848

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	00003848 	.word	0x00003848
     250:	00032f7c 	.word	0x00032f7c
     254:	000038b0 	.word	0x000038b0
     258:	00000000 	.word	0x00000000

0000025c <signal>:

int sampling_frequency = 48000;
static int amplitude = 5;

//function for extracting signal values from the wave table
int signal(double frequency, int t){
     25c:	e92d4830 	push	{r4, r5, r11, lr}
     260:	e28db00c 	add	r11, sp, #12
     264:	e24dd028 	sub	sp, sp, #40	; 0x28
     268:	e14b02fc 	strd	r0, [r11, #-44]	; 0xffffffd4
     26c:	e50b2030 	str	r2, [r11, #-48]	; 0xffffffd0
	int pre_index = (int)(frequency * t);
     270:	e51b0030 	ldr	r0, [r11, #-48]	; 0xffffffd0
     274:	eb0007ad 	bl	2130 <__aeabi_i2d>
     278:	e1a02000 	mov	r2, r0
     27c:	e1a03001 	mov	r3, r1
     280:	e1a00002 	mov	r0, r2
     284:	e1a01003 	mov	r1, r3
     288:	e14b22dc 	ldrd	r2, [r11, #-44]	; 0xffffffd4
     28c:	eb0007de 	bl	220c <__aeabi_dmul>
     290:	e1a02000 	mov	r2, r0
     294:	e1a03001 	mov	r3, r1
     298:	e1a00002 	mov	r0, r2
     29c:	e1a01003 	mov	r1, r3
     2a0:	eb000900 	bl	26a8 <__aeabi_d2iz>
     2a4:	e1a03000 	mov	r3, r0
     2a8:	e50b3010 	str	r3, [r11, #-16]
	int index_int =  pre_index % sampling_frequency;	// find the integer remainder
     2ac:	e3033924 	movw	r3, #14628	; 0x3924
     2b0:	e3403000 	movt	r3, #0
     2b4:	e5933000 	ldr	r3, [r3]
     2b8:	e51b2010 	ldr	r2, [r11, #-16]
     2bc:	e1a00002 	mov	r0, r2
     2c0:	e1a01003 	mov	r1, r3
     2c4:	eb0006c0 	bl	1dcc <__aeabi_idivmod>
     2c8:	e1a03001 	mov	r3, r1
     2cc:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	double remainder = (frequency * t) - pre_index;		// find the decimal remainder
     2d0:	e51b0030 	ldr	r0, [r11, #-48]	; 0xffffffd0
     2d4:	eb000795 	bl	2130 <__aeabi_i2d>
     2d8:	e1a02000 	mov	r2, r0
     2dc:	e1a03001 	mov	r3, r1
     2e0:	e1a00002 	mov	r0, r2
     2e4:	e1a01003 	mov	r1, r3
     2e8:	e14b22dc 	ldrd	r2, [r11, #-44]	; 0xffffffd4
     2ec:	eb0007c6 	bl	220c <__aeabi_dmul>
     2f0:	e1a02000 	mov	r2, r0
     2f4:	e1a03001 	mov	r3, r1
     2f8:	e1a04002 	mov	r4, r2
     2fc:	e1a05003 	mov	r5, r3
     300:	e51b0010 	ldr	r0, [r11, #-16]
     304:	eb000789 	bl	2130 <__aeabi_i2d>
     308:	e1a02000 	mov	r2, r0
     30c:	e1a03001 	mov	r3, r1
     310:	e1a00004 	mov	r0, r4
     314:	e1a01005 	mov	r1, r5
     318:	eb0006b6 	bl	1df8 <__aeabi_dsub>
     31c:	e1a02000 	mov	r2, r0
     320:	e1a03001 	mov	r3, r1
     324:	e14b21fc 	strd	r2, [r11, #-28]	; 0xffffffe4
	int result = (1-remainder)*sine[index_int] + remainder * sine[index_int + 1];
     328:	e3a00000 	mov	r0, #0
     32c:	e3a01000 	mov	r1, #0
     330:	e3431ff0 	movt	r1, #16368	; 0x3ff0
     334:	e14b21dc 	ldrd	r2, [r11, #-28]	; 0xffffffe4
     338:	eb0006ae 	bl	1df8 <__aeabi_dsub>
     33c:	e1a02000 	mov	r2, r0
     340:	e1a03001 	mov	r3, r1
     344:	e1a04002 	mov	r4, r2
     348:	e1a05003 	mov	r5, r3
     34c:	e3033930 	movw	r3, #14640	; 0x3930
     350:	e3403000 	movt	r3, #0
     354:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
     358:	e7933102 	ldr	r3, [r3, r2, lsl #2]
     35c:	e1a00003 	mov	r0, r3
     360:	eb000772 	bl	2130 <__aeabi_i2d>
     364:	e1a02000 	mov	r2, r0
     368:	e1a03001 	mov	r3, r1
     36c:	e1a00004 	mov	r0, r4
     370:	e1a01005 	mov	r1, r5
     374:	eb0007a4 	bl	220c <__aeabi_dmul>
     378:	e1a02000 	mov	r2, r0
     37c:	e1a03001 	mov	r3, r1
     380:	e1a04002 	mov	r4, r2
     384:	e1a05003 	mov	r5, r3
     388:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     38c:	e2832001 	add	r2, r3, #1
     390:	e3033930 	movw	r3, #14640	; 0x3930
     394:	e3403000 	movt	r3, #0
     398:	e7933102 	ldr	r3, [r3, r2, lsl #2]
     39c:	e1a00003 	mov	r0, r3
     3a0:	eb000762 	bl	2130 <__aeabi_i2d>
     3a4:	e1a02000 	mov	r2, r0
     3a8:	e1a03001 	mov	r3, r1
     3ac:	e1a00002 	mov	r0, r2
     3b0:	e1a01003 	mov	r1, r3
     3b4:	e14b21dc 	ldrd	r2, [r11, #-28]	; 0xffffffe4
     3b8:	eb000793 	bl	220c <__aeabi_dmul>
     3bc:	e1a02000 	mov	r2, r0
     3c0:	e1a03001 	mov	r3, r1
     3c4:	e1a00004 	mov	r0, r4
     3c8:	e1a01005 	mov	r1, r5
     3cc:	eb00068a 	bl	1dfc <__adddf3>
     3d0:	e1a02000 	mov	r2, r0
     3d4:	e1a03001 	mov	r3, r1
     3d8:	e1a00002 	mov	r0, r2
     3dc:	e1a01003 	mov	r1, r3
     3e0:	eb0008b0 	bl	26a8 <__aeabi_d2iz>
     3e4:	e1a03000 	mov	r3, r0
     3e8:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
	return result;
     3ec:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
}
     3f0:	e1a00003 	mov	r0, r3
     3f4:	e24bd00c 	sub	sp, r11, #12
     3f8:	e8bd8830 	pop	{r4, r5, r11, pc}

000003fc <wave_generator>:
int note6[48000];		//note A key K
int note7[48000];		//note B key L
int note8[48000];		//note C key ;

//function to generate signals and store to array
void wave_generator(){
     3fc:	e92d4800 	push	{r11, lr}
     400:	e28db004 	add	r11, sp, #4
     404:	e24dd008 	sub	sp, sp, #8
	int t;
	for(t = 0; t < sampling_frequency; t++){
     408:	e3a03000 	mov	r3, #0
     40c:	e50b3008 	str	r3, [r11, #-8]
     410:	ea000062 	b	5a0 <wave_generator+0x1a4>
		note1[t] = signal(C_FREQUENCY,t);
     414:	e30338b8 	movw	r3, #14520	; 0x38b8
     418:	e3403000 	movt	r3, #0
     41c:	e1c320d0 	ldrd	r2, [r3]
     420:	e1a00002 	mov	r0, r2
     424:	e1a01003 	mov	r1, r3
     428:	e51b2008 	ldr	r2, [r11, #-8]
     42c:	ebffff8a 	bl	25c <signal>
     430:	e1a01000 	mov	r1, r0
     434:	e3023f94 	movw	r3, #12180	; 0x2f94
     438:	e3403003 	movt	r3, #3
     43c:	e51b2008 	ldr	r2, [r11, #-8]
     440:	e7831102 	str	r1, [r3, r2, lsl #2]
		note2[t] = signal(D_FREQUENCY,t);
     444:	e30338c0 	movw	r3, #14528	; 0x38c0
     448:	e3403000 	movt	r3, #0
     44c:	e1c320d0 	ldrd	r2, [r3]
     450:	e1a00002 	mov	r0, r2
     454:	e1a01003 	mov	r1, r3
     458:	e51b2008 	ldr	r2, [r11, #-8]
     45c:	ebffff7e 	bl	25c <signal>
     460:	e1a01000 	mov	r1, r0
     464:	e3013d94 	movw	r3, #7572	; 0x1d94
     468:	e3403006 	movt	r3, #6
     46c:	e51b2008 	ldr	r2, [r11, #-8]
     470:	e7831102 	str	r1, [r3, r2, lsl #2]
		note3[t] = signal(E_FREQUENCY,t);
     474:	e30338c8 	movw	r3, #14536	; 0x38c8
     478:	e3403000 	movt	r3, #0
     47c:	e1c320d0 	ldrd	r2, [r3]
     480:	e1a00002 	mov	r0, r2
     484:	e1a01003 	mov	r1, r3
     488:	e51b2008 	ldr	r2, [r11, #-8]
     48c:	ebffff72 	bl	25c <signal>
     490:	e1a01000 	mov	r1, r0
     494:	e3003b94 	movw	r3, #2964	; 0xb94
     498:	e3403009 	movt	r3, #9
     49c:	e51b2008 	ldr	r2, [r11, #-8]
     4a0:	e7831102 	str	r1, [r3, r2, lsl #2]
		note4[t] = signal(F_FREQUENCY,t);
     4a4:	e30338d0 	movw	r3, #14544	; 0x38d0
     4a8:	e3403000 	movt	r3, #0
     4ac:	e1c320d0 	ldrd	r2, [r3]
     4b0:	e1a00002 	mov	r0, r2
     4b4:	e1a01003 	mov	r1, r3
     4b8:	e51b2008 	ldr	r2, [r11, #-8]
     4bc:	ebffff66 	bl	25c <signal>
     4c0:	e1a01000 	mov	r1, r0
     4c4:	e30f3994 	movw	r3, #63892	; 0xf994
     4c8:	e340300b 	movt	r3, #11
     4cc:	e51b2008 	ldr	r2, [r11, #-8]
     4d0:	e7831102 	str	r1, [r3, r2, lsl #2]
		note5[t] = signal(G_FREQUENCY,t);
     4d4:	e30338d8 	movw	r3, #14552	; 0x38d8
     4d8:	e3403000 	movt	r3, #0
     4dc:	e1c320d0 	ldrd	r2, [r3]
     4e0:	e1a00002 	mov	r0, r2
     4e4:	e1a01003 	mov	r1, r3
     4e8:	e51b2008 	ldr	r2, [r11, #-8]
     4ec:	ebffff5a 	bl	25c <signal>
     4f0:	e1a01000 	mov	r1, r0
     4f4:	e30e3794 	movw	r3, #59284	; 0xe794
     4f8:	e340300e 	movt	r3, #14
     4fc:	e51b2008 	ldr	r2, [r11, #-8]
     500:	e7831102 	str	r1, [r3, r2, lsl #2]
		note6[t] = signal(A_FREQUENCY,t);
     504:	e30338e0 	movw	r3, #14560	; 0x38e0
     508:	e3403000 	movt	r3, #0
     50c:	e1c320d0 	ldrd	r2, [r3]
     510:	e1a00002 	mov	r0, r2
     514:	e1a01003 	mov	r1, r3
     518:	e51b2008 	ldr	r2, [r11, #-8]
     51c:	ebffff4e 	bl	25c <signal>
     520:	e1a01000 	mov	r1, r0
     524:	e30d3594 	movw	r3, #54676	; 0xd594
     528:	e3403011 	movt	r3, #17
     52c:	e51b2008 	ldr	r2, [r11, #-8]
     530:	e7831102 	str	r1, [r3, r2, lsl #2]
		note7[t] = signal(B_FREQUENCY,t);
     534:	e30338e8 	movw	r3, #14568	; 0x38e8
     538:	e3403000 	movt	r3, #0
     53c:	e1c320d0 	ldrd	r2, [r3]
     540:	e1a00002 	mov	r0, r2
     544:	e1a01003 	mov	r1, r3
     548:	e51b2008 	ldr	r2, [r11, #-8]
     54c:	ebffff42 	bl	25c <signal>
     550:	e1a01000 	mov	r1, r0
     554:	e30c3394 	movw	r3, #50068	; 0xc394
     558:	e3403014 	movt	r3, #20
     55c:	e51b2008 	ldr	r2, [r11, #-8]
     560:	e7831102 	str	r1, [r3, r2, lsl #2]
		note8[t] = signal(C2_FREQUENCY,t);
     564:	e30338f0 	movw	r3, #14576	; 0x38f0
     568:	e3403000 	movt	r3, #0
     56c:	e1c320d0 	ldrd	r2, [r3]
     570:	e1a00002 	mov	r0, r2
     574:	e1a01003 	mov	r1, r3
     578:	e51b2008 	ldr	r2, [r11, #-8]
     57c:	ebffff36 	bl	25c <signal>
     580:	e1a01000 	mov	r1, r0
     584:	e30b3194 	movw	r3, #45460	; 0xb194
     588:	e3403017 	movt	r3, #23
     58c:	e51b2008 	ldr	r2, [r11, #-8]
     590:	e7831102 	str	r1, [r3, r2, lsl #2]
int note8[48000];		//note C key ;

//function to generate signals and store to array
void wave_generator(){
	int t;
	for(t = 0; t < sampling_frequency; t++){
     594:	e51b3008 	ldr	r3, [r11, #-8]
     598:	e2833001 	add	r3, r3, #1
     59c:	e50b3008 	str	r3, [r11, #-8]
     5a0:	e3033924 	movw	r3, #14628	; 0x3924
     5a4:	e3403000 	movt	r3, #0
     5a8:	e5933000 	ldr	r3, [r3]
     5ac:	e51b2008 	ldr	r2, [r11, #-8]
     5b0:	e1520003 	cmp	r2, r3
     5b4:	baffff96 	blt	414 <wave_generator+0x18>
		note5[t] = signal(G_FREQUENCY,t);
		note6[t] = signal(A_FREQUENCY,t);
		note7[t] = signal(B_FREQUENCY,t);
		note8[t] = signal(C2_FREQUENCY,t);
	}
}
     5b8:	e24bd004 	sub	sp, r11, #4
     5bc:	e8bd8800 	pop	{r11, pc}

000005c0 <main>:


int main() {
     5c0:	e92d4800 	push	{r11, lr}
     5c4:	e28db004 	add	r11, sp, #4
     5c8:	e24ddeab 	sub	sp, sp, #2736	; 0xab0
	//declare and define varialbes
	int_setup(3, (int []) {199, 200, 201});		//turning on interrupts for HPS Timer 1, 2, 3
     5cc:	e303384c 	movw	r3, #14412	; 0x384c
     5d0:	e3403000 	movt	r3, #0
     5d4:	e24bc06c 	sub	r12, r11, #108	; 0x6c
     5d8:	e8930007 	ldm	r3, {r0, r1, r2}
     5dc:	e88c0007 	stm	r12, {r0, r1, r2}
     5e0:	e24b306c 	sub	r3, r11, #108	; 0x6c
     5e4:	e3a00003 	mov	r0, #3
     5e8:	e1a01003 	mov	r1, r3
     5ec:	eb0003d7 	bl	1550 <int_setup>
	int t_note1 = 0;
     5f0:	e3a03000 	mov	r3, #0
     5f4:	e50b3008 	str	r3, [r11, #-8]
	int t_note2 = 0;
     5f8:	e3a03000 	mov	r3, #0
     5fc:	e50b300c 	str	r3, [r11, #-12]
	int t_note3 = 0;
     600:	e3a03000 	mov	r3, #0
     604:	e50b3010 	str	r3, [r11, #-16]
	int t_note4 = 0;
     608:	e3a03000 	mov	r3, #0
     60c:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	int t_note5 = 0;
     610:	e3a03000 	mov	r3, #0
     614:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
	int t_note6 = 0;
     618:	e3a03000 	mov	r3, #0
     61c:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
	int t_note7 = 0;
     620:	e3a03000 	mov	r3, #0
     624:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
	int t_note8 = 0;
     628:	e3a03000 	mov	r3, #0
     62c:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc

	int total_sample = 0;
     630:	e3a03000 	mov	r3, #0
     634:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8

	char* data = (char*) malloc(sizeof(char));
     638:	e3a00001 	mov	r0, #1
     63c:	eb000845 	bl	2758 <malloc>
     640:	e1a03000 	mov	r3, r0
     644:	e50b305c 	str	r3, [r11, #-92]	; 0xffffffa4
 
	int input_key;	//int variable for keyboard input
	
	//define flags for notes
	int note1_flag = 0;
     648:	e3a03000 	mov	r3, #0
     64c:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0
	int note2_flag = 0;
     650:	e3a03000 	mov	r3, #0
     654:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
	int note3_flag = 0;
     658:	e3a03000 	mov	r3, #0
     65c:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
	int note4_flag = 0;
     660:	e3a03000 	mov	r3, #0
     664:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4
	int note5_flag = 0;
     668:	e3a03000 	mov	r3, #0
     66c:	e50b3040 	str	r3, [r11, #-64]	; 0xffffffc0
	int note6_flag = 0;
     670:	e3a03000 	mov	r3, #0
     674:	e50b3044 	str	r3, [r11, #-68]	; 0xffffffbc
	int note7_flag = 0;
     678:	e3a03000 	mov	r3, #0
     67c:	e50b3048 	str	r3, [r11, #-72]	; 0xffffffb8
	int note8_flag = 0;
     680:	e3a03000 	mov	r3, #0
     684:	e50b304c 	str	r3, [r11, #-76]	; 0xffffffb4

	//VGA variables
	int VGA_X = 0;
     688:	e3a03000 	mov	r3, #0
     68c:	e50b3050 	str	r3, [r11, #-80]	; 0xffffffb0
	int VGA_Base_Y = 120;
     690:	e3a03078 	mov	r3, #120	; 0x78
     694:	e50b3060 	str	r3, [r11, #-96]	; 0xffffffa0
	int VGA_Y[320];
	int VGA_prev[320];
	int array_full;
	int Y_count = 0;
     698:	e3a03000 	mov	r3, #0
     69c:	e50b3058 	str	r3, [r11, #-88]	; 0xffffffa8

	//audio timer
	HPS_TIM_config_t hps_tim0;

    hps_tim0.tim = TIM0;
     6a0:	e3a03001 	mov	r3, #1
     6a4:	e54b3a84 	strb	r3, [r11, #-2692]	; 0xfffff57c
    hps_tim0.timeout = 20;	//21	//microseconds, calculated from (1/48000) to feed the codec each sample at the rate each sample is processed 
     6a8:	e3a03014 	mov	r3, #20
     6ac:	e50b3a80 	str	r3, [r11, #-2688]	; 0xfffff580
    hps_tim0.LD_en = 1;
     6b0:	e3a03001 	mov	r3, #1
     6b4:	e50b3a7c 	str	r3, [r11, #-2684]	; 0xfffff584
    hps_tim0.INT_en = 1;
     6b8:	e3a03001 	mov	r3, #1
     6bc:	e50b3a78 	str	r3, [r11, #-2680]	; 0xfffff588
    hps_tim0.enable = 1;
     6c0:	e3a03001 	mov	r3, #1
     6c4:	e50b3a74 	str	r3, [r11, #-2676]	; 0xfffff58c

	HPS_TIM_config_ASM(&hps_tim0);		//Configure timer
     6c8:	e24b3d2a 	sub	r3, r11, #2688	; 0xa80
     6cc:	e2433004 	sub	r3, r3, #4
     6d0:	e1a00003 	mov	r0, r3
     6d4:	eb0003ab 	bl	1588 <HPS_TIM_config_ASM>

	//keyboard timer
    HPS_TIM_config_t hps_tim1;

    hps_tim1.tim = TIM1;
     6d8:	e3a03002 	mov	r3, #2
     6dc:	e54b3a9c 	strb	r3, [r11, #-2716]	; 0xfffff564
    hps_tim1.timeout = 50;	//10000	//microseconds
     6e0:	e3a03032 	mov	r3, #50	; 0x32
     6e4:	e50b3a98 	str	r3, [r11, #-2712]	; 0xfffff568
    hps_tim1.LD_en = 1;
     6e8:	e3a03001 	mov	r3, #1
     6ec:	e50b3a94 	str	r3, [r11, #-2708]	; 0xfffff56c
    hps_tim1.INT_en = 1;
     6f0:	e3a03001 	mov	r3, #1
     6f4:	e50b3a90 	str	r3, [r11, #-2704]	; 0xfffff570
    hps_tim1.enable = 1;
     6f8:	e3a03001 	mov	r3, #1
     6fc:	e50b3a8c 	str	r3, [r11, #-2700]	; 0xfffff574

	HPS_TIM_config_ASM(&hps_tim1);		//Configure timer
     700:	e24b3ea9 	sub	r3, r11, #2704	; 0xa90
     704:	e2433004 	sub	r3, r3, #4
     708:	e2433008 	sub	r3, r3, #8
     70c:	e1a00003 	mov	r0, r3
     710:	eb00039c 	bl	1588 <HPS_TIM_config_ASM>


	//VGA timer
    HPS_TIM_config_t hps_tim2;

    hps_tim2.tim = TIM2;
     714:	e3a03004 	mov	r3, #4
     718:	e54b3ab4 	strb	r3, [r11, #-2740]	; 0xfffff54c
    hps_tim2.timeout = 100000;	//100000	//microseconds
     71c:	e30836a0 	movw	r3, #34464	; 0x86a0
     720:	e3403001 	movt	r3, #1
     724:	e50b3ab0 	str	r3, [r11, #-2736]	; 0xfffff550
    hps_tim2.LD_en = 1;
     728:	e3a03001 	mov	r3, #1
     72c:	e50b3aac 	str	r3, [r11, #-2732]	; 0xfffff554
    hps_tim2.INT_en = 1;
     730:	e3a03001 	mov	r3, #1
     734:	e50b3aa8 	str	r3, [r11, #-2728]	; 0xfffff558
    hps_tim2.enable = 1;
     738:	e3a03001 	mov	r3, #1
     73c:	e50b3aa4 	str	r3, [r11, #-2724]	; 0xfffff55c

    HPS_TIM_config_ASM(&hps_tim2);      //Configure timer
     740:	e24b3eab 	sub	r3, r11, #2736	; 0xab0
     744:	e2433004 	sub	r3, r3, #4
     748:	e1a00003 	mov	r0, r3
     74c:	eb00038d 	bl	1588 <HPS_TIM_config_ASM>

	VGA_clear_pixelbuff_ASM();		//clear the screen at first
     750:	eb00050b 	bl	1b84 <VGA_clear_pixelbuff_ASM>

 	wave_generator();		//generated wave and store into array
     754:	ebffff28 	bl	3fc <wave_generator>
     758:	ea000000 	b	760 <main+0x1a0>
					VGA_prev[VGA_X] = VGA_Y[VGA_X];	
				}
				array_full = 0;
			}	
		}
	}
     75c:	e1a00000 	nop			; (mov r0, r0)
	VGA_clear_pixelbuff_ASM();		//clear the screen at first

 	wave_generator();		//generated wave and store into array

	while(1) {
		total_sample = 0;
     760:	e3a03000 	mov	r3, #0
     764:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
		//KEYBOARD FUNCTION USING TIMER INTERRUPT
		if(hps_tim1_int_flag){
     768:	e30136b4 	movw	r3, #5812	; 0x16b4
     76c:	e3403000 	movt	r3, #0
     770:	e5933000 	ldr	r3, [r3]
     774:	e3530000 	cmp	r3, #0
     778:	0a0000db 	beq	aec <ICDIPTR+0x2ec>
			hps_tim1_int_flag = 0;
     77c:	e30136b4 	movw	r3, #5812	; 0x16b4
     780:	e3403000 	movt	r3, #0
     784:	e3a02000 	mov	r2, #0
     788:	e5832000 	str	r2, [r3]
			input_key = *data; 
     78c:	e51b305c 	ldr	r3, [r11, #-92]	; 0xffffffa4
     790:	e5d33000 	ldrb	r3, [r3]
     794:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
			if (read_ps2_data_ASM(data)){
     798:	e51b005c 	ldr	r0, [r11, #-92]	; 0xffffffa4
     79c:	eb000491 	bl	19e8 <read_ps2_data_ASM>
     7a0:	e1a03000 	mov	r3, r0
     7a4:	e3530000 	cmp	r3, #0
     7a8:	0a0000cf 	beq	aec <ICDIPTR+0x2ec>
				if (input_key != break_code){
     7ac:	e3033918 	movw	r3, #14616	; 0x3918
     7b0:	e3403000 	movt	r3, #0
     7b4:	e5933000 	ldr	r3, [r3]
     7b8:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     7bc:	e1520003 	cmp	r2, r3
     7c0:	0a00006e 	beq	980 <ICDIPTR+0x180>

					if(amplitude >= 12){					//setting the volume boundries
     7c4:	e3033928 	movw	r3, #14632	; 0x3928
     7c8:	e3403000 	movt	r3, #0
     7cc:	e5933000 	ldr	r3, [r3]
     7d0:	e353000b 	cmp	r3, #11
     7d4:	da000003 	ble	7e8 <main+0x228>
						amplitude = 12;
     7d8:	e3033928 	movw	r3, #14632	; 0x3928
     7dc:	e3403000 	movt	r3, #0
     7e0:	e3a0200c 	mov	r2, #12
     7e4:	e5832000 	str	r2, [r3]
					}
					if(amplitude <= 0){
     7e8:	e3033928 	movw	r3, #14632	; 0x3928
     7ec:	e3403000 	movt	r3, #0
     7f0:	e5933000 	ldr	r3, [r3]
     7f4:	e3530000 	cmp	r3, #0
     7f8:	ca000003 	bgt	80c <ICDIPTR+0xc>
						amplitude = 0;
     7fc:	e3033928 	movw	r3, #14632	; 0x3928
     800:	e3403000 	movt	r3, #0
     804:	e3a02000 	mov	r2, #0
     808:	e5832000 	str	r2, [r3]
					}

					input_key = *data;
     80c:	e51b305c 	ldr	r3, [r11, #-92]	; 0xffffffa4
     810:	e5d33000 	ldrb	r3, [r3]
     814:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
					//identifying which key was pressed
					if (input_key == C_NOTE_KEY){note1_flag = 1;}
     818:	e30338f8 	movw	r3, #14584	; 0x38f8
     81c:	e3403000 	movt	r3, #0
     820:	e5933000 	ldr	r3, [r3]
     824:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     828:	e1520003 	cmp	r2, r3
     82c:	1a000001 	bne	838 <ICDIPTR+0x38>
     830:	e3a03001 	mov	r3, #1
     834:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0
					if (input_key == D_NOTE_KEY){note2_flag = 1;}
     838:	e30338fc 	movw	r3, #14588	; 0x38fc
     83c:	e3403000 	movt	r3, #0
     840:	e5933000 	ldr	r3, [r3]
     844:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     848:	e1520003 	cmp	r2, r3
     84c:	1a000001 	bne	858 <ICDIPTR+0x58>
     850:	e3a03001 	mov	r3, #1
     854:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
					if (input_key == E_NOTE_KEY){note3_flag = 1;}
     858:	e3033900 	movw	r3, #14592	; 0x3900
     85c:	e3403000 	movt	r3, #0
     860:	e5933000 	ldr	r3, [r3]
     864:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     868:	e1520003 	cmp	r2, r3
     86c:	1a000001 	bne	878 <ICDIPTR+0x78>
     870:	e3a03001 	mov	r3, #1
     874:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
					if (input_key == F_NOTE_KEY){note4_flag = 1;}
     878:	e3033904 	movw	r3, #14596	; 0x3904
     87c:	e3403000 	movt	r3, #0
     880:	e5933000 	ldr	r3, [r3]
     884:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     888:	e1520003 	cmp	r2, r3
     88c:	1a000001 	bne	898 <ICDIPTR+0x98>
     890:	e3a03001 	mov	r3, #1
     894:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4
					if (input_key == G_NOTE_KEY){note5_flag = 1;}
     898:	e3033908 	movw	r3, #14600	; 0x3908
     89c:	e3403000 	movt	r3, #0
     8a0:	e5933000 	ldr	r3, [r3]
     8a4:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     8a8:	e1520003 	cmp	r2, r3
     8ac:	1a000001 	bne	8b8 <ICDIPTR+0xb8>
     8b0:	e3a03001 	mov	r3, #1
     8b4:	e50b3040 	str	r3, [r11, #-64]	; 0xffffffc0
					if (input_key == A_NOTE_KEY){note6_flag = 1;}
     8b8:	e303390c 	movw	r3, #14604	; 0x390c
     8bc:	e3403000 	movt	r3, #0
     8c0:	e5933000 	ldr	r3, [r3]
     8c4:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     8c8:	e1520003 	cmp	r2, r3
     8cc:	1a000001 	bne	8d8 <ICDIPTR+0xd8>
     8d0:	e3a03001 	mov	r3, #1
     8d4:	e50b3044 	str	r3, [r11, #-68]	; 0xffffffbc
					if (input_key == B_NOTE_KEY){note7_flag = 1;}
     8d8:	e3033910 	movw	r3, #14608	; 0x3910
     8dc:	e3403000 	movt	r3, #0
     8e0:	e5933000 	ldr	r3, [r3]
     8e4:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     8e8:	e1520003 	cmp	r2, r3
     8ec:	1a000001 	bne	8f8 <ICDIPTR+0xf8>
     8f0:	e3a03001 	mov	r3, #1
     8f4:	e50b3048 	str	r3, [r11, #-72]	; 0xffffffb8
					if (input_key == C2_NOTE_KEY){note8_flag = 1;}
     8f8:	e3033914 	movw	r3, #14612	; 0x3914
     8fc:	e3403000 	movt	r3, #0
     900:	e5933000 	ldr	r3, [r3]
     904:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     908:	e1520003 	cmp	r2, r3
     90c:	1a000001 	bne	918 <ICDIPTR+0x118>
     910:	e3a03001 	mov	r3, #1
     914:	e50b304c 	str	r3, [r11, #-76]	; 0xffffffb4
					if (input_key == Volume_UP_KEY){amplitude+= 2;}
     918:	e303391c 	movw	r3, #14620	; 0x391c
     91c:	e3403000 	movt	r3, #0
     920:	e5933000 	ldr	r3, [r3]
     924:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     928:	e1520003 	cmp	r2, r3
     92c:	1a000006 	bne	94c <ICDIPTR+0x14c>
     930:	e3033928 	movw	r3, #14632	; 0x3928
     934:	e3403000 	movt	r3, #0
     938:	e5933000 	ldr	r3, [r3]
     93c:	e2832002 	add	r2, r3, #2
     940:	e3033928 	movw	r3, #14632	; 0x3928
     944:	e3403000 	movt	r3, #0
     948:	e5832000 	str	r2, [r3]
					if (input_key == Volume_DOWN_KEY){amplitude-= 2;}
     94c:	e3033920 	movw	r3, #14624	; 0x3920
     950:	e3403000 	movt	r3, #0
     954:	e5933000 	ldr	r3, [r3]
     958:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     95c:	e1520003 	cmp	r2, r3
     960:	1a000006 	bne	980 <ICDIPTR+0x180>
     964:	e3033928 	movw	r3, #14632	; 0x3928
     968:	e3403000 	movt	r3, #0
     96c:	e5933000 	ldr	r3, [r3]
     970:	e2432002 	sub	r2, r3, #2
     974:	e3033928 	movw	r3, #14632	; 0x3928
     978:	e3403000 	movt	r3, #0
     97c:	e5832000 	str	r2, [r3]
				}

					if (input_key == break_code){
     980:	e3033918 	movw	r3, #14616	; 0x3918
     984:	e3403000 	movt	r3, #0
     988:	e5933000 	ldr	r3, [r3]
     98c:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     990:	e1520003 	cmp	r2, r3
     994:	1a000054 	bne	aec <ICDIPTR+0x2ec>
					read_ps2_data_ASM(data);
     998:	e51b005c 	ldr	r0, [r11, #-92]	; 0xffffffa4
     99c:	eb000411 	bl	19e8 <read_ps2_data_ASM>
					input_key = *data;
     9a0:	e51b305c 	ldr	r3, [r11, #-92]	; 0xffffffa4
     9a4:	e5d33000 	ldrb	r3, [r3]
     9a8:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
					//identifying which key was released
					if (input_key == C_NOTE_KEY){
     9ac:	e30338f8 	movw	r3, #14584	; 0x38f8
     9b0:	e3403000 	movt	r3, #0
     9b4:	e5933000 	ldr	r3, [r3]
     9b8:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     9bc:	e1520003 	cmp	r2, r3
     9c0:	1a000003 	bne	9d4 <ICDIPTR+0x1d4>
						note1_flag = 0;
     9c4:	e3a03000 	mov	r3, #0
     9c8:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0
						t_note1 = 0;
     9cc:	e3a03000 	mov	r3, #0
     9d0:	e50b3008 	str	r3, [r11, #-8]
					}		
					if (input_key == D_NOTE_KEY){
     9d4:	e30338fc 	movw	r3, #14588	; 0x38fc
     9d8:	e3403000 	movt	r3, #0
     9dc:	e5933000 	ldr	r3, [r3]
     9e0:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     9e4:	e1520003 	cmp	r2, r3
     9e8:	1a000003 	bne	9fc <ICDIPTR+0x1fc>
						note2_flag = 0;
     9ec:	e3a03000 	mov	r3, #0
     9f0:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
						t_note2 = 0;
     9f4:	e3a03000 	mov	r3, #0
     9f8:	e50b300c 	str	r3, [r11, #-12]
					}
					if (input_key == E_NOTE_KEY){
     9fc:	e3033900 	movw	r3, #14592	; 0x3900
     a00:	e3403000 	movt	r3, #0
     a04:	e5933000 	ldr	r3, [r3]
     a08:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     a0c:	e1520003 	cmp	r2, r3
     a10:	1a000003 	bne	a24 <ICDIPTR+0x224>
						note3_flag = 0;
     a14:	e3a03000 	mov	r3, #0
     a18:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
						t_note3 = 0;
     a1c:	e3a03000 	mov	r3, #0
     a20:	e50b3010 	str	r3, [r11, #-16]
					}
					if (input_key == F_NOTE_KEY){
     a24:	e3033904 	movw	r3, #14596	; 0x3904
     a28:	e3403000 	movt	r3, #0
     a2c:	e5933000 	ldr	r3, [r3]
     a30:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     a34:	e1520003 	cmp	r2, r3
     a38:	1a000003 	bne	a4c <ICDIPTR+0x24c>
						note4_flag = 0;
     a3c:	e3a03000 	mov	r3, #0
     a40:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4
						t_note4 = 0;
     a44:	e3a03000 	mov	r3, #0
     a48:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
					}
					if (input_key == G_NOTE_KEY){
     a4c:	e3033908 	movw	r3, #14600	; 0x3908
     a50:	e3403000 	movt	r3, #0
     a54:	e5933000 	ldr	r3, [r3]
     a58:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     a5c:	e1520003 	cmp	r2, r3
     a60:	1a000003 	bne	a74 <ICDIPTR+0x274>
						note5_flag = 0;
     a64:	e3a03000 	mov	r3, #0
     a68:	e50b3040 	str	r3, [r11, #-64]	; 0xffffffc0
						t_note5 = 0;
     a6c:	e3a03000 	mov	r3, #0
     a70:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
					}
					if (input_key == A_NOTE_KEY){
     a74:	e303390c 	movw	r3, #14604	; 0x390c
     a78:	e3403000 	movt	r3, #0
     a7c:	e5933000 	ldr	r3, [r3]
     a80:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     a84:	e1520003 	cmp	r2, r3
     a88:	1a000003 	bne	a9c <ICDIPTR+0x29c>
						note6_flag = 0;
     a8c:	e3a03000 	mov	r3, #0
     a90:	e50b3044 	str	r3, [r11, #-68]	; 0xffffffbc
						t_note6 = 0;
     a94:	e3a03000 	mov	r3, #0
     a98:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
					}
					if (input_key == B_NOTE_KEY){
     a9c:	e3033910 	movw	r3, #14608	; 0x3910
     aa0:	e3403000 	movt	r3, #0
     aa4:	e5933000 	ldr	r3, [r3]
     aa8:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     aac:	e1520003 	cmp	r2, r3
     ab0:	1a000003 	bne	ac4 <ICDIPTR+0x2c4>
						note7_flag = 0;
     ab4:	e3a03000 	mov	r3, #0
     ab8:	e50b3048 	str	r3, [r11, #-72]	; 0xffffffb8
						t_note7 = 0;
     abc:	e3a03000 	mov	r3, #0
     ac0:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
					}
					if (input_key == C2_NOTE_KEY){
     ac4:	e3033914 	movw	r3, #14612	; 0x3914
     ac8:	e3403000 	movt	r3, #0
     acc:	e5933000 	ldr	r3, [r3]
     ad0:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
     ad4:	e1520003 	cmp	r2, r3
     ad8:	1a000003 	bne	aec <ICDIPTR+0x2ec>
						note8_flag = 0;
     adc:	e3a03000 	mov	r3, #0
     ae0:	e50b304c 	str	r3, [r11, #-76]	; 0xffffffb4
						t_note8 = 0;
     ae4:	e3a03000 	mov	r3, #0
     ae8:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
				}
			}
		}
		
		//AUDIO USING TIMER INTERRUPT
		if(hps_tim0_int_flag){
     aec:	e30136b0 	movw	r3, #5808	; 0x16b0
     af0:	e3403000 	movt	r3, #0
     af4:	e5933000 	ldr	r3, [r3]
     af8:	e3530000 	cmp	r3, #0
     afc:	0a000167 	beq	10a0 <ICDICFR+0x4a0>
			hps_tim0_int_flag = 0;
     b00:	e30136b0 	movw	r3, #5808	; 0x16b0
     b04:	e3403000 	movt	r3, #0
     b08:	e3a02000 	mov	r2, #0
     b0c:	e5832000 	str	r2, [r3]
			if(note1_flag){total_sample += amplitude * note1[t_note1 % (int)(sampling_frequency/C_FREQUENCY)];}
     b10:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
     b14:	e3530000 	cmp	r3, #0
     b18:	0a00001e 	beq	b98 <ICDIPTR+0x398>
     b1c:	e3033924 	movw	r3, #14628	; 0x3924
     b20:	e3403000 	movt	r3, #0
     b24:	e5933000 	ldr	r3, [r3]
     b28:	e1a00003 	mov	r0, r3
     b2c:	eb00057f 	bl	2130 <__aeabi_i2d>
     b30:	e30338b8 	movw	r3, #14520	; 0x38b8
     b34:	e3403000 	movt	r3, #0
     b38:	e1c320d0 	ldrd	r2, [r3]
     b3c:	eb000656 	bl	249c <__aeabi_ddiv>
     b40:	e1a02000 	mov	r2, r0
     b44:	e1a03001 	mov	r3, r1
     b48:	e1a00002 	mov	r0, r2
     b4c:	e1a01003 	mov	r1, r3
     b50:	eb0006d4 	bl	26a8 <__aeabi_d2iz>
     b54:	e1a03000 	mov	r3, r0
     b58:	e51b2008 	ldr	r2, [r11, #-8]
     b5c:	e1a00002 	mov	r0, r2
     b60:	e1a01003 	mov	r1, r3
     b64:	eb000498 	bl	1dcc <__aeabi_idivmod>
     b68:	e1a03001 	mov	r3, r1
     b6c:	e1a02003 	mov	r2, r3
     b70:	e3023f94 	movw	r3, #12180	; 0x2f94
     b74:	e3403003 	movt	r3, #3
     b78:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     b7c:	e3033928 	movw	r3, #14632	; 0x3928
     b80:	e3403000 	movt	r3, #0
     b84:	e5933000 	ldr	r3, [r3]
     b88:	e0030293 	mul	r3, r3, r2
     b8c:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     b90:	e0823003 	add	r3, r2, r3
     b94:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note2_flag){total_sample += amplitude * note2[t_note2 % (int)(sampling_frequency/D_FREQUENCY)];}
     b98:	e51b3034 	ldr	r3, [r11, #-52]	; 0xffffffcc
     b9c:	e3530000 	cmp	r3, #0
     ba0:	0a00001e 	beq	c20 <ICDICFR+0x20>
     ba4:	e3033924 	movw	r3, #14628	; 0x3924
     ba8:	e3403000 	movt	r3, #0
     bac:	e5933000 	ldr	r3, [r3]
     bb0:	e1a00003 	mov	r0, r3
     bb4:	eb00055d 	bl	2130 <__aeabi_i2d>
     bb8:	e30338c0 	movw	r3, #14528	; 0x38c0
     bbc:	e3403000 	movt	r3, #0
     bc0:	e1c320d0 	ldrd	r2, [r3]
     bc4:	eb000634 	bl	249c <__aeabi_ddiv>
     bc8:	e1a02000 	mov	r2, r0
     bcc:	e1a03001 	mov	r3, r1
     bd0:	e1a00002 	mov	r0, r2
     bd4:	e1a01003 	mov	r1, r3
     bd8:	eb0006b2 	bl	26a8 <__aeabi_d2iz>
     bdc:	e1a03000 	mov	r3, r0
     be0:	e51b200c 	ldr	r2, [r11, #-12]
     be4:	e1a00002 	mov	r0, r2
     be8:	e1a01003 	mov	r1, r3
     bec:	eb000476 	bl	1dcc <__aeabi_idivmod>
     bf0:	e1a03001 	mov	r3, r1
     bf4:	e1a02003 	mov	r2, r3
     bf8:	e3013d94 	movw	r3, #7572	; 0x1d94
     bfc:	e3403006 	movt	r3, #6
     c00:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     c04:	e3033928 	movw	r3, #14632	; 0x3928
     c08:	e3403000 	movt	r3, #0
     c0c:	e5933000 	ldr	r3, [r3]
     c10:	e0030293 	mul	r3, r3, r2
     c14:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     c18:	e0823003 	add	r3, r2, r3
     c1c:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note3_flag){total_sample += amplitude * note3[t_note3 % (int)(sampling_frequency/E_FREQUENCY)];}
     c20:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
     c24:	e3530000 	cmp	r3, #0
     c28:	0a00001e 	beq	ca8 <ICDICFR+0xa8>
     c2c:	e3033924 	movw	r3, #14628	; 0x3924
     c30:	e3403000 	movt	r3, #0
     c34:	e5933000 	ldr	r3, [r3]
     c38:	e1a00003 	mov	r0, r3
     c3c:	eb00053b 	bl	2130 <__aeabi_i2d>
     c40:	e30338c8 	movw	r3, #14536	; 0x38c8
     c44:	e3403000 	movt	r3, #0
     c48:	e1c320d0 	ldrd	r2, [r3]
     c4c:	eb000612 	bl	249c <__aeabi_ddiv>
     c50:	e1a02000 	mov	r2, r0
     c54:	e1a03001 	mov	r3, r1
     c58:	e1a00002 	mov	r0, r2
     c5c:	e1a01003 	mov	r1, r3
     c60:	eb000690 	bl	26a8 <__aeabi_d2iz>
     c64:	e1a03000 	mov	r3, r0
     c68:	e51b2010 	ldr	r2, [r11, #-16]
     c6c:	e1a00002 	mov	r0, r2
     c70:	e1a01003 	mov	r1, r3
     c74:	eb000454 	bl	1dcc <__aeabi_idivmod>
     c78:	e1a03001 	mov	r3, r1
     c7c:	e1a02003 	mov	r2, r3
     c80:	e3003b94 	movw	r3, #2964	; 0xb94
     c84:	e3403009 	movt	r3, #9
     c88:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     c8c:	e3033928 	movw	r3, #14632	; 0x3928
     c90:	e3403000 	movt	r3, #0
     c94:	e5933000 	ldr	r3, [r3]
     c98:	e0030293 	mul	r3, r3, r2
     c9c:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     ca0:	e0823003 	add	r3, r2, r3
     ca4:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note4_flag){total_sample += amplitude * note4[t_note4 % (int)(sampling_frequency/F_FREQUENCY)];}
     ca8:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
     cac:	e3530000 	cmp	r3, #0
     cb0:	0a00001e 	beq	d30 <ICDICFR+0x130>
     cb4:	e3033924 	movw	r3, #14628	; 0x3924
     cb8:	e3403000 	movt	r3, #0
     cbc:	e5933000 	ldr	r3, [r3]
     cc0:	e1a00003 	mov	r0, r3
     cc4:	eb000519 	bl	2130 <__aeabi_i2d>
     cc8:	e30338d0 	movw	r3, #14544	; 0x38d0
     ccc:	e3403000 	movt	r3, #0
     cd0:	e1c320d0 	ldrd	r2, [r3]
     cd4:	eb0005f0 	bl	249c <__aeabi_ddiv>
     cd8:	e1a02000 	mov	r2, r0
     cdc:	e1a03001 	mov	r3, r1
     ce0:	e1a00002 	mov	r0, r2
     ce4:	e1a01003 	mov	r1, r3
     ce8:	eb00066e 	bl	26a8 <__aeabi_d2iz>
     cec:	e1a03000 	mov	r3, r0
     cf0:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
     cf4:	e1a00002 	mov	r0, r2
     cf8:	e1a01003 	mov	r1, r3
     cfc:	eb000432 	bl	1dcc <__aeabi_idivmod>
     d00:	e1a03001 	mov	r3, r1
     d04:	e1a02003 	mov	r2, r3
     d08:	e30f3994 	movw	r3, #63892	; 0xf994
     d0c:	e340300b 	movt	r3, #11
     d10:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     d14:	e3033928 	movw	r3, #14632	; 0x3928
     d18:	e3403000 	movt	r3, #0
     d1c:	e5933000 	ldr	r3, [r3]
     d20:	e0030293 	mul	r3, r3, r2
     d24:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     d28:	e0823003 	add	r3, r2, r3
     d2c:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note5_flag){total_sample += amplitude * note5[t_note5 % (int)(sampling_frequency/G_FREQUENCY)];}
     d30:	e51b3040 	ldr	r3, [r11, #-64]	; 0xffffffc0
     d34:	e3530000 	cmp	r3, #0
     d38:	0a00001e 	beq	db8 <ICDICFR+0x1b8>
     d3c:	e3033924 	movw	r3, #14628	; 0x3924
     d40:	e3403000 	movt	r3, #0
     d44:	e5933000 	ldr	r3, [r3]
     d48:	e1a00003 	mov	r0, r3
     d4c:	eb0004f7 	bl	2130 <__aeabi_i2d>
     d50:	e30338d8 	movw	r3, #14552	; 0x38d8
     d54:	e3403000 	movt	r3, #0
     d58:	e1c320d0 	ldrd	r2, [r3]
     d5c:	eb0005ce 	bl	249c <__aeabi_ddiv>
     d60:	e1a02000 	mov	r2, r0
     d64:	e1a03001 	mov	r3, r1
     d68:	e1a00002 	mov	r0, r2
     d6c:	e1a01003 	mov	r1, r3
     d70:	eb00064c 	bl	26a8 <__aeabi_d2iz>
     d74:	e1a03000 	mov	r3, r0
     d78:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
     d7c:	e1a00002 	mov	r0, r2
     d80:	e1a01003 	mov	r1, r3
     d84:	eb000410 	bl	1dcc <__aeabi_idivmod>
     d88:	e1a03001 	mov	r3, r1
     d8c:	e1a02003 	mov	r2, r3
     d90:	e30e3794 	movw	r3, #59284	; 0xe794
     d94:	e340300e 	movt	r3, #14
     d98:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     d9c:	e3033928 	movw	r3, #14632	; 0x3928
     da0:	e3403000 	movt	r3, #0
     da4:	e5933000 	ldr	r3, [r3]
     da8:	e0030293 	mul	r3, r3, r2
     dac:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     db0:	e0823003 	add	r3, r2, r3
     db4:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note6_flag){total_sample += amplitude * note6[t_note6 % (int)(sampling_frequency/A_FREQUENCY)];}
     db8:	e51b3044 	ldr	r3, [r11, #-68]	; 0xffffffbc
     dbc:	e3530000 	cmp	r3, #0
     dc0:	0a00001e 	beq	e40 <ICDICFR+0x240>
     dc4:	e3033924 	movw	r3, #14628	; 0x3924
     dc8:	e3403000 	movt	r3, #0
     dcc:	e5933000 	ldr	r3, [r3]
     dd0:	e1a00003 	mov	r0, r3
     dd4:	eb0004d5 	bl	2130 <__aeabi_i2d>
     dd8:	e30338e0 	movw	r3, #14560	; 0x38e0
     ddc:	e3403000 	movt	r3, #0
     de0:	e1c320d0 	ldrd	r2, [r3]
     de4:	eb0005ac 	bl	249c <__aeabi_ddiv>
     de8:	e1a02000 	mov	r2, r0
     dec:	e1a03001 	mov	r3, r1
     df0:	e1a00002 	mov	r0, r2
     df4:	e1a01003 	mov	r1, r3
     df8:	eb00062a 	bl	26a8 <__aeabi_d2iz>
     dfc:	e1a03000 	mov	r3, r0
     e00:	e51b201c 	ldr	r2, [r11, #-28]	; 0xffffffe4
     e04:	e1a00002 	mov	r0, r2
     e08:	e1a01003 	mov	r1, r3
     e0c:	eb0003ee 	bl	1dcc <__aeabi_idivmod>
     e10:	e1a03001 	mov	r3, r1
     e14:	e1a02003 	mov	r2, r3
     e18:	e30d3594 	movw	r3, #54676	; 0xd594
     e1c:	e3403011 	movt	r3, #17
     e20:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     e24:	e3033928 	movw	r3, #14632	; 0x3928
     e28:	e3403000 	movt	r3, #0
     e2c:	e5933000 	ldr	r3, [r3]
     e30:	e0030293 	mul	r3, r3, r2
     e34:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     e38:	e0823003 	add	r3, r2, r3
     e3c:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note7_flag){total_sample += amplitude * note7[t_note7 % (int)(sampling_frequency/B_FREQUENCY)];}
     e40:	e51b3048 	ldr	r3, [r11, #-72]	; 0xffffffb8
     e44:	e3530000 	cmp	r3, #0
     e48:	0a00001e 	beq	ec8 <ICDICFR+0x2c8>
     e4c:	e3033924 	movw	r3, #14628	; 0x3924
     e50:	e3403000 	movt	r3, #0
     e54:	e5933000 	ldr	r3, [r3]
     e58:	e1a00003 	mov	r0, r3
     e5c:	eb0004b3 	bl	2130 <__aeabi_i2d>
     e60:	e30338e8 	movw	r3, #14568	; 0x38e8
     e64:	e3403000 	movt	r3, #0
     e68:	e1c320d0 	ldrd	r2, [r3]
     e6c:	eb00058a 	bl	249c <__aeabi_ddiv>
     e70:	e1a02000 	mov	r2, r0
     e74:	e1a03001 	mov	r3, r1
     e78:	e1a00002 	mov	r0, r2
     e7c:	e1a01003 	mov	r1, r3
     e80:	eb000608 	bl	26a8 <__aeabi_d2iz>
     e84:	e1a03000 	mov	r3, r0
     e88:	e51b2020 	ldr	r2, [r11, #-32]	; 0xffffffe0
     e8c:	e1a00002 	mov	r0, r2
     e90:	e1a01003 	mov	r1, r3
     e94:	eb0003cc 	bl	1dcc <__aeabi_idivmod>
     e98:	e1a03001 	mov	r3, r1
     e9c:	e1a02003 	mov	r2, r3
     ea0:	e30c3394 	movw	r3, #50068	; 0xc394
     ea4:	e3403014 	movt	r3, #20
     ea8:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     eac:	e3033928 	movw	r3, #14632	; 0x3928
     eb0:	e3403000 	movt	r3, #0
     eb4:	e5933000 	ldr	r3, [r3]
     eb8:	e0030293 	mul	r3, r3, r2
     ebc:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     ec0:	e0823003 	add	r3, r2, r3
     ec4:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(note8_flag){total_sample += amplitude * note8[t_note8 % (int)(sampling_frequency/C2_FREQUENCY)];}
     ec8:	e51b304c 	ldr	r3, [r11, #-76]	; 0xffffffb4
     ecc:	e3530000 	cmp	r3, #0
     ed0:	0a00001e 	beq	f50 <ICDICFR+0x350>
     ed4:	e3033924 	movw	r3, #14628	; 0x3924
     ed8:	e3403000 	movt	r3, #0
     edc:	e5933000 	ldr	r3, [r3]
     ee0:	e1a00003 	mov	r0, r3
     ee4:	eb000491 	bl	2130 <__aeabi_i2d>
     ee8:	e30338f0 	movw	r3, #14576	; 0x38f0
     eec:	e3403000 	movt	r3, #0
     ef0:	e1c320d0 	ldrd	r2, [r3]
     ef4:	eb000568 	bl	249c <__aeabi_ddiv>
     ef8:	e1a02000 	mov	r2, r0
     efc:	e1a03001 	mov	r3, r1
     f00:	e1a00002 	mov	r0, r2
     f04:	e1a01003 	mov	r1, r3
     f08:	eb0005e6 	bl	26a8 <__aeabi_d2iz>
     f0c:	e1a03000 	mov	r3, r0
     f10:	e51b2024 	ldr	r2, [r11, #-36]	; 0xffffffdc
     f14:	e1a00002 	mov	r0, r2
     f18:	e1a01003 	mov	r1, r3
     f1c:	eb0003aa 	bl	1dcc <__aeabi_idivmod>
     f20:	e1a03001 	mov	r3, r1
     f24:	e1a02003 	mov	r2, r3
     f28:	e30b3194 	movw	r3, #45460	; 0xb194
     f2c:	e3403017 	movt	r3, #23
     f30:	e7932102 	ldr	r2, [r3, r2, lsl #2]
     f34:	e3033928 	movw	r3, #14632	; 0x3928
     f38:	e3403000 	movt	r3, #0
     f3c:	e5933000 	ldr	r3, [r3]
     f40:	e0030293 	mul	r3, r3, r2
     f44:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
     f48:	e0823003 	add	r3, r2, r3
     f4c:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if(audio_write_data_ASM(total_sample, total_sample)){
     f50:	e51b0028 	ldr	r0, [r11, #-40]	; 0xffffffd8
     f54:	e51b1028 	ldr	r1, [r11, #-40]	; 0xffffffd8
     f58:	eb000231 	bl	1824 <audio_write_data_ASM>
     f5c:	e1a03000 	mov	r3, r0
     f60:	e3530000 	cmp	r3, #0
     f64:	0a00004d 	beq	10a0 <ICDICFR+0x4a0>
				if(note1_flag){t_note1++;}
     f68:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
     f6c:	e3530000 	cmp	r3, #0
     f70:	0a000002 	beq	f80 <ICDICFR+0x380>
     f74:	e51b3008 	ldr	r3, [r11, #-8]
     f78:	e2833001 	add	r3, r3, #1
     f7c:	e50b3008 	str	r3, [r11, #-8]
				if(note2_flag){t_note2++;}
     f80:	e51b3034 	ldr	r3, [r11, #-52]	; 0xffffffcc
     f84:	e3530000 	cmp	r3, #0
     f88:	0a000002 	beq	f98 <ICDICFR+0x398>
     f8c:	e51b300c 	ldr	r3, [r11, #-12]
     f90:	e2833001 	add	r3, r3, #1
     f94:	e50b300c 	str	r3, [r11, #-12]
				if(note3_flag){t_note3++;}
     f98:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
     f9c:	e3530000 	cmp	r3, #0
     fa0:	0a000002 	beq	fb0 <ICDICFR+0x3b0>
     fa4:	e51b3010 	ldr	r3, [r11, #-16]
     fa8:	e2833001 	add	r3, r3, #1
     fac:	e50b3010 	str	r3, [r11, #-16]
				if(note4_flag){t_note4++;}
     fb0:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
     fb4:	e3530000 	cmp	r3, #0
     fb8:	0a000002 	beq	fc8 <ICDICFR+0x3c8>
     fbc:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     fc0:	e2833001 	add	r3, r3, #1
     fc4:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
				if(note5_flag){t_note5++;}
     fc8:	e51b3040 	ldr	r3, [r11, #-64]	; 0xffffffc0
     fcc:	e3530000 	cmp	r3, #0
     fd0:	0a000002 	beq	fe0 <ICDICFR+0x3e0>
     fd4:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
     fd8:	e2833001 	add	r3, r3, #1
     fdc:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
				if(note6_flag){t_note6++;}
     fe0:	e51b3044 	ldr	r3, [r11, #-68]	; 0xffffffbc
     fe4:	e3530000 	cmp	r3, #0
     fe8:	0a000002 	beq	ff8 <ICDICFR+0x3f8>
     fec:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
     ff0:	e2833001 	add	r3, r3, #1
     ff4:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
				if(note7_flag){t_note7++;}
     ff8:	e51b3048 	ldr	r3, [r11, #-72]	; 0xffffffb8
     ffc:	e3530000 	cmp	r3, #0
    1000:	0a000002 	beq	1010 <ICDICFR+0x410>
    1004:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1008:	e2833001 	add	r3, r3, #1
    100c:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
				if(note8_flag){t_note8++;}
    1010:	e51b304c 	ldr	r3, [r11, #-76]	; 0xffffffb4
    1014:	e3530000 	cmp	r3, #0
    1018:	0a000002 	beq	1028 <ICDICFR+0x428>
    101c:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    1020:	e2833001 	add	r3, r3, #1
    1024:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
				
				if (!array_full){
    1028:	e51b3054 	ldr	r3, [r11, #-84]	; 0xffffffac
    102c:	e3530000 	cmp	r3, #0
    1030:	1a000013 	bne	1084 <ICDICFR+0x484>
					VGA_Y[Y_count] = VGA_Base_Y + (total_sample/800000);
    1034:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    1038:	e30b3589 	movw	r3, #46473	; 0xb589
    103c:	e34134f8 	movt	r3, #5368	; 0x14f8
    1040:	e0c30293 	smull	r0, r3, r3, r2
    1044:	e1a01843 	asr	r1, r3, #16
    1048:	e1a03fc2 	asr	r3, r2, #31
    104c:	e0632001 	rsb	r2, r3, r1
    1050:	e51b3060 	ldr	r3, [r11, #-96]	; 0xffffffa0
    1054:	e0822003 	add	r2, r2, r3
    1058:	e51b1058 	ldr	r1, [r11, #-88]	; 0xffffffa8
    105c:	e30f3a98 	movw	r3, #64152	; 0xfa98
    1060:	e34f3fff 	movt	r3, #65535	; 0xffff
    1064:	e1a01101 	lsl	r1, r1, #2
    1068:	e24b0004 	sub	r0, r11, #4
    106c:	e0801001 	add	r1, r0, r1
    1070:	e0813003 	add	r3, r1, r3
    1074:	e5832000 	str	r2, [r3]
					Y_count++;
    1078:	e51b3058 	ldr	r3, [r11, #-88]	; 0xffffffa8
    107c:	e2833001 	add	r3, r3, #1
    1080:	e50b3058 	str	r3, [r11, #-88]	; 0xffffffa8
				}
				if (Y_count == 320){
    1084:	e51b3058 	ldr	r3, [r11, #-88]	; 0xffffffa8
    1088:	e3530d05 	cmp	r3, #320	; 0x140
    108c:	1a000003 	bne	10a0 <ICDICFR+0x4a0>
					array_full = 1;
    1090:	e3a03001 	mov	r3, #1
    1094:	e50b3054 	str	r3, [r11, #-84]	; 0xffffffac
					Y_count = 0;
    1098:	e3a03000 	mov	r3, #0
    109c:	e50b3058 	str	r3, [r11, #-88]	; 0xffffffa8
				}
			}
		}

		//VGA USING TIMER INTERRUPT
		if(hps_tim2_int_flag){
    10a0:	e30136b8 	movw	r3, #5816	; 0x16b8
    10a4:	e3403000 	movt	r3, #0
    10a8:	e5933000 	ldr	r3, [r3]
    10ac:	e3530000 	cmp	r3, #0
    10b0:	0afffda9 	beq	75c <main+0x19c>
			hps_tim2_int_flag = 0;
    10b4:	e30136b8 	movw	r3, #5816	; 0x16b8
    10b8:	e3403000 	movt	r3, #0
    10bc:	e3a02000 	mov	r2, #0
    10c0:	e5832000 	str	r2, [r3]
			if (array_full){
    10c4:	e51b3054 	ldr	r3, [r11, #-84]	; 0xffffffac
    10c8:	e3530000 	cmp	r3, #0
    10cc:	0afffda2 	beq	75c <main+0x19c>
				for(VGA_X = 0; VGA_X < 320; VGA_X++){	
    10d0:	e3a03000 	mov	r3, #0
    10d4:	e50b3050 	str	r3, [r11, #-80]	; 0xffffffb0
    10d8:	ea00002a 	b	1188 <ICDICFR+0x588>
					VGA_draw_point_ASM(VGA_X,VGA_prev[VGA_X],0x0);			
    10dc:	e51b2050 	ldr	r2, [r11, #-80]	; 0xffffffb0
    10e0:	e30f3598 	movw	r3, #62872	; 0xf598
    10e4:	e34f3fff 	movt	r3, #65535	; 0xffff
    10e8:	e1a02102 	lsl	r2, r2, #2
    10ec:	e24b1004 	sub	r1, r11, #4
    10f0:	e0812002 	add	r2, r1, r2
    10f4:	e0823003 	add	r3, r2, r3
    10f8:	e5933000 	ldr	r3, [r3]
    10fc:	e51b0050 	ldr	r0, [r11, #-80]	; 0xffffffb0
    1100:	e1a01003 	mov	r1, r3
    1104:	e3a02000 	mov	r2, #0
    1108:	eb0002d1 	bl	1c54 <VGA_draw_point_ASM>
					VGA_draw_point_ASM(VGA_X,VGA_Y[VGA_X],0xFFFF);
    110c:	e51b2050 	ldr	r2, [r11, #-80]	; 0xffffffb0
    1110:	e30f3a98 	movw	r3, #64152	; 0xfa98
    1114:	e34f3fff 	movt	r3, #65535	; 0xffff
    1118:	e1a02102 	lsl	r2, r2, #2
    111c:	e24b0004 	sub	r0, r11, #4
    1120:	e0802002 	add	r2, r0, r2
    1124:	e0823003 	add	r3, r2, r3
    1128:	e5933000 	ldr	r3, [r3]
    112c:	e51b0050 	ldr	r0, [r11, #-80]	; 0xffffffb0
    1130:	e1a01003 	mov	r1, r3
    1134:	e3e02000 	mvn	r2, #0
    1138:	eb0002c5 	bl	1c54 <VGA_draw_point_ASM>
					VGA_prev[VGA_X] = VGA_Y[VGA_X];	
    113c:	e51b2050 	ldr	r2, [r11, #-80]	; 0xffffffb0
    1140:	e30f3a98 	movw	r3, #64152	; 0xfa98
    1144:	e34f3fff 	movt	r3, #65535	; 0xffff
    1148:	e1a02102 	lsl	r2, r2, #2
    114c:	e24b1004 	sub	r1, r11, #4
    1150:	e0812002 	add	r2, r1, r2
    1154:	e0823003 	add	r3, r2, r3
    1158:	e5932000 	ldr	r2, [r3]
    115c:	e51b1050 	ldr	r1, [r11, #-80]	; 0xffffffb0
    1160:	e30f3598 	movw	r3, #62872	; 0xf598
    1164:	e34f3fff 	movt	r3, #65535	; 0xffff
    1168:	e1a01101 	lsl	r1, r1, #2
    116c:	e24b0004 	sub	r0, r11, #4
    1170:	e0801001 	add	r1, r0, r1
    1174:	e0813003 	add	r3, r1, r3
    1178:	e5832000 	str	r2, [r3]

		//VGA USING TIMER INTERRUPT
		if(hps_tim2_int_flag){
			hps_tim2_int_flag = 0;
			if (array_full){
				for(VGA_X = 0; VGA_X < 320; VGA_X++){	
    117c:	e51b3050 	ldr	r3, [r11, #-80]	; 0xffffffb0
    1180:	e2833001 	add	r3, r3, #1
    1184:	e50b3050 	str	r3, [r11, #-80]	; 0xffffffb0
    1188:	e51b2050 	ldr	r2, [r11, #-80]	; 0xffffffb0
    118c:	e300313f 	movw	r3, #319	; 0x13f
    1190:	e1520003 	cmp	r2, r3
    1194:	daffffd0 	ble	10dc <ICDICFR+0x4dc>
					VGA_draw_point_ASM(VGA_X,VGA_prev[VGA_X],0x0);			
					VGA_draw_point_ASM(VGA_X,VGA_Y[VGA_X],0xFFFF);
					VGA_prev[VGA_X] = VGA_Y[VGA_X];	
				}
				array_full = 0;
    1198:	e3a03000 	mov	r3, #0
    119c:	e50b3054 	str	r3, [r11, #-84]	; 0xffffffac
			}	
		}
	}
    11a0:	eafffd6d 	b	75c <main+0x19c>

000011a4 <disable_A9_interrupts>:
#include "../inc/int_setup.h"

void disable_A9_interrupts() {
    11a4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    11a8:	e28db000 	add	r11, sp, #0
    11ac:	e24dd00c 	sub	sp, sp, #12
	int status = 0b11010011;
    11b0:	e3a030d3 	mov	r3, #211	; 0xd3
    11b4:	e50b3008 	str	r3, [r11, #-8]
	asm("msr cpsr, %[ps]" : : [ps]"r"(status));
    11b8:	e51b3008 	ldr	r3, [r11, #-8]
    11bc:	e129f003 	msr	CPSR_fc, r3
}
    11c0:	e28bd000 	add	sp, r11, #0
    11c4:	e8bd0800 	ldmfd	sp!, {r11}
    11c8:	e12fff1e 	bx	lr

000011cc <enable_A9_interrupts>:

void enable_A9_interrupts() {
    11cc:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    11d0:	e28db000 	add	r11, sp, #0
    11d4:	e24dd00c 	sub	sp, sp, #12
	int status = 0b01010011;
    11d8:	e3a03053 	mov	r3, #83	; 0x53
    11dc:	e50b3008 	str	r3, [r11, #-8]
	asm("msr cpsr, %[ps]" : : [ps]"r"(status));
    11e0:	e51b3008 	ldr	r3, [r11, #-8]
    11e4:	e129f003 	msr	CPSR_fc, r3
}
    11e8:	e28bd000 	add	sp, r11, #0
    11ec:	e8bd0800 	ldmfd	sp!, {r11}
    11f0:	e12fff1e 	bx	lr

000011f4 <set_A9_IRQ_stack>:

void set_A9_IRQ_stack() {
    11f4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    11f8:	e28db000 	add	r11, sp, #0
    11fc:	e24dd00c 	sub	sp, sp, #12
	int stack, mode;
	stack = 0xFFFFFFFF - 7;
    1200:	e3e03007 	mvn	r3, #7
    1204:	e50b3008 	str	r3, [r11, #-8]
	mode = 0b11010010;
    1208:	e3a030d2 	mov	r3, #210	; 0xd2
    120c:	e50b300c 	str	r3, [r11, #-12]
	asm("msr cpsr, %[ps]" : : [ps] "r" (mode));
    1210:	e51b300c 	ldr	r3, [r11, #-12]
    1214:	e129f003 	msr	CPSR_fc, r3
	asm("mov sp, %[ps]" : : [ps] "r" (stack));
    1218:	e51b3008 	ldr	r3, [r11, #-8]
    121c:	e1a0d003 	mov	sp, r3
	
	mode = 0b11010011;
    1220:	e3a030d3 	mov	r3, #211	; 0xd3
    1224:	e50b300c 	str	r3, [r11, #-12]
	asm("msr cpsr, %[ps]" : : [ps] "r" (mode));
    1228:	e51b300c 	ldr	r3, [r11, #-12]
    122c:	e129f003 	msr	CPSR_fc, r3
}
    1230:	e28bd000 	add	sp, r11, #0
    1234:	e8bd0800 	ldmfd	sp!, {r11}
    1238:	e12fff1e 	bx	lr

0000123c <config_interrupt>:

void config_interrupt(int ID, int CPU) {
    123c:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    1240:	e28db000 	add	r11, sp, #0
    1244:	e24dd01c 	sub	sp, sp, #28
    1248:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    124c:	e50b101c 	str	r1, [r11, #-28]	; 0xffffffe4
	int reg_offset;
	int index;
	int value;
	int address;
	
	reg_offset = (ID>>3) & 0xFFFFFFFC;
    1250:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    1254:	e1a031c3 	asr	r3, r3, #3
    1258:	e3c33003 	bic	r3, r3, #3
    125c:	e50b3008 	str	r3, [r11, #-8]
	index = ID & 0x1F;
    1260:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    1264:	e203301f 	and	r3, r3, #31
    1268:	e50b300c 	str	r3, [r11, #-12]
	value = 1<<index;
    126c:	e3a02001 	mov	r2, #1
    1270:	e51b300c 	ldr	r3, [r11, #-12]
    1274:	e1a03312 	lsl	r3, r2, r3
    1278:	e50b3010 	str	r3, [r11, #-16]
	address = MPCORE_GIC_DIST + ICDISER + reg_offset;
    127c:	e51b3008 	ldr	r3, [r11, #-8]
    1280:	e2433b4b 	sub	r3, r3, #76800	; 0x12c00
    1284:	e2433c03 	sub	r3, r3, #768	; 0x300
    1288:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	*(int *)address |= value;
    128c:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    1290:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    1294:	e5921000 	ldr	r1, [r2]
    1298:	e51b2010 	ldr	r2, [r11, #-16]
    129c:	e1812002 	orr	r2, r1, r2
    12a0:	e5832000 	str	r2, [r3]
	
	reg_offset = (ID & 0xFFFFFFFC);
    12a4:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    12a8:	e3c33003 	bic	r3, r3, #3
    12ac:	e50b3008 	str	r3, [r11, #-8]
	index = ID & 3;
    12b0:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    12b4:	e2033003 	and	r3, r3, #3
    12b8:	e50b300c 	str	r3, [r11, #-12]
	address = MPCORE_GIC_DIST + ICDIPTR + reg_offset + index;
    12bc:	e51b2008 	ldr	r2, [r11, #-8]
    12c0:	e51b300c 	ldr	r3, [r11, #-12]
    12c4:	e0823003 	add	r3, r2, r3
    12c8:	e2433b4a 	sub	r3, r3, #75776	; 0x12800
    12cc:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	*(char *)address = (char)CPU;
    12d0:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    12d4:	e51b201c 	ldr	r2, [r11, #-28]	; 0xffffffe4
    12d8:	e6ef2072 	uxtb	r2, r2
    12dc:	e5c32000 	strb	r2, [r3]
}
    12e0:	e28bd000 	add	sp, r11, #0
    12e4:	e8bd0800 	ldmfd	sp!, {r11}
    12e8:	e12fff1e 	bx	lr

000012ec <config_GIC>:

void config_GIC(int len, int* IDs) {
    12ec:	e92d4800 	push	{r11, lr}
    12f0:	e28db004 	add	r11, sp, #4
    12f4:	e24dd010 	sub	sp, sp, #16
    12f8:	e50b0010 	str	r0, [r11, #-16]
    12fc:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
	int i;
	for(i=0 ; i<len ; i++)
    1300:	e3a03000 	mov	r3, #0
    1304:	e50b3008 	str	r3, [r11, #-8]
    1308:	ea00000a 	b	1338 <config_GIC+0x4c>
		config_interrupt(IDs[i],1);
    130c:	e51b3008 	ldr	r3, [r11, #-8]
    1310:	e1a03103 	lsl	r3, r3, #2
    1314:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    1318:	e0823003 	add	r3, r2, r3
    131c:	e5933000 	ldr	r3, [r3]
    1320:	e1a00003 	mov	r0, r3
    1324:	e3a01001 	mov	r1, #1
    1328:	ebffffc3 	bl	123c <config_interrupt>
	*(char *)address = (char)CPU;
}

void config_GIC(int len, int* IDs) {
	int i;
	for(i=0 ; i<len ; i++)
    132c:	e51b3008 	ldr	r3, [r11, #-8]
    1330:	e2833001 	add	r3, r3, #1
    1334:	e50b3008 	str	r3, [r11, #-8]
    1338:	e51b2008 	ldr	r2, [r11, #-8]
    133c:	e51b3010 	ldr	r3, [r11, #-16]
    1340:	e1520003 	cmp	r2, r3
    1344:	bafffff0 	blt	130c <config_GIC+0x20>
		config_interrupt(IDs[i],1);
	*((int *) (MPCORE_GIC_CPUIF + ICCPMR)) = 0xFFFF;
    1348:	e30c3104 	movw	r3, #49412	; 0xc104
    134c:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    1350:	e30f2fff 	movw	r2, #65535	; 0xffff
    1354:	e5832000 	str	r2, [r3]
	*((int *) (MPCORE_GIC_CPUIF)) = 1;
    1358:	e3a03cc1 	mov	r3, #49408	; 0xc100
    135c:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    1360:	e3a02001 	mov	r2, #1
    1364:	e5832000 	str	r2, [r3]
	*((int *) (MPCORE_GIC_DIST)) = 1;
    1368:	e3a03a0d 	mov	r3, #53248	; 0xd000
    136c:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    1370:	e3a02001 	mov	r2, #1
    1374:	e5832000 	str	r2, [r3]
}
    1378:	e24bd004 	sub	sp, r11, #4
    137c:	e8bd8800 	pop	{r11, pc}

00001380 <__cs3_isr_irq>:

void __attribute__ ((interrupt)) __cs3_isr_irq() {
    1380:	e24ee004 	sub	lr, lr, #4
    1384:	e92d580f 	push	{r0, r1, r2, r3, r11, r12, lr}
    1388:	e28db018 	add	r11, sp, #24
    138c:	e24dd00c 	sub	sp, sp, #12
	int interrupt_ID = *((int *) (MPCORE_GIC_CPUIF + ICCIAR));
    1390:	e30c310c 	movw	r3, #49420	; 0xc10c
    1394:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    1398:	e5933000 	ldr	r3, [r3]
    139c:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
	
	switch(interrupt_ID) {
    13a0:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    13a4:	e3530053 	cmp	r3, #83	; 0x53
    13a8:	0a00003d 	beq	14a4 <__cs3_isr_irq+0x124>
    13ac:	e3530053 	cmp	r3, #83	; 0x53
    13b0:	ca000011 	bgt	13fc <__cs3_isr_irq+0x7c>
    13b4:	e353004e 	cmp	r3, #78	; 0x4e
    13b8:	0a000031 	beq	1484 <__cs3_isr_irq+0x104>
    13bc:	e353004e 	cmp	r3, #78	; 0x4e
    13c0:	ca000006 	bgt	13e0 <__cs3_isr_irq+0x60>
    13c4:	e3530048 	cmp	r3, #72	; 0x48
    13c8:	0a000029 	beq	1474 <__cs3_isr_irq+0xf4>
    13cc:	e3530049 	cmp	r3, #73	; 0x49
    13d0:	0a000029 	beq	147c <__cs3_isr_irq+0xfc>
    13d4:	e353001d 	cmp	r3, #29
    13d8:	0a000019 	beq	1444 <__cs3_isr_irq+0xc4>
    13dc:	ea000036 	b	14bc <__cs3_isr_irq+0x13c>
    13e0:	e3530050 	cmp	r3, #80	; 0x50
    13e4:	0a00002a 	beq	1494 <__cs3_isr_irq+0x114>
    13e8:	e3530050 	cmp	r3, #80	; 0x50
    13ec:	ba000026 	blt	148c <__cs3_isr_irq+0x10c>
    13f0:	e3530051 	cmp	r3, #81	; 0x51
    13f4:	0a000028 	beq	149c <__cs3_isr_irq+0x11c>
    13f8:	ea00002f 	b	14bc <__cs3_isr_irq+0x13c>
    13fc:	e35300c7 	cmp	r3, #199	; 0xc7
    1400:	0a000013 	beq	1454 <__cs3_isr_irq+0xd4>
    1404:	e35300c7 	cmp	r3, #199	; 0xc7
    1408:	ca000006 	bgt	1428 <__cs3_isr_irq+0xa8>
    140c:	e3530059 	cmp	r3, #89	; 0x59
    1410:	0a000027 	beq	14b4 <__cs3_isr_irq+0x134>
    1414:	e35300c5 	cmp	r3, #197	; 0xc5
    1418:	0a00000b 	beq	144c <__cs3_isr_irq+0xcc>
    141c:	e3530054 	cmp	r3, #84	; 0x54
    1420:	0a000021 	beq	14ac <__cs3_isr_irq+0x12c>
    1424:	ea000024 	b	14bc <__cs3_isr_irq+0x13c>
    1428:	e35300c9 	cmp	r3, #201	; 0xc9
    142c:	0a00000c 	beq	1464 <__cs3_isr_irq+0xe4>
    1430:	e35300c9 	cmp	r3, #201	; 0xc9
    1434:	ba000008 	blt	145c <__cs3_isr_irq+0xdc>
    1438:	e35300ca 	cmp	r3, #202	; 0xca
    143c:	0a00000a 	beq	146c <__cs3_isr_irq+0xec>
    1440:	ea00001d 	b	14bc <__cs3_isr_irq+0x13c>
		
		case 29:  A9_PRIV_TIM_ISR(); break;
    1444:	eb00009c 	bl	16bc <A9_PRIV_TIM_ISR>
    1448:	ea00001c 	b	14c0 <__cs3_isr_irq+0x140>
		case 197: HPS_GPIO1_ISR(); break;
    144c:	eb00009b 	bl	16c0 <HPS_GPIO1_ISR>
    1450:	ea00001a 	b	14c0 <__cs3_isr_irq+0x140>
		case 199: HPS_TIM0_ISR(); break;
    1454:	eb00009a 	bl	16c4 <HPS_TIM0_ISR>
    1458:	ea000018 	b	14c0 <__cs3_isr_irq+0x140>
		case 200: HPS_TIM1_ISR(); break;
    145c:	eb0000a0 	bl	16e4 <HPS_TIM1_ISR>
    1460:	ea000016 	b	14c0 <__cs3_isr_irq+0x140>
		case 201: HPS_TIM2_ISR(); break;
    1464:	eb0000a6 	bl	1704 <HPS_TIM2_ISR>
    1468:	ea000014 	b	14c0 <__cs3_isr_irq+0x140>
		case 202: HPS_TIM3_ISR(); break;
    146c:	eb0000ac 	bl	1724 <HPS_TIM3_ISR>
    1470:	ea000012 	b	14c0 <__cs3_isr_irq+0x140>
		case 72:  FPGA_INTERVAL_TIM_ISR(); break;
    1474:	eb0000ab 	bl	1728 <FPGA_INTERVAL_TIM_ISR>
    1478:	ea000010 	b	14c0 <__cs3_isr_irq+0x140>
		case 73:  FPGA_PB_KEYS_ISR(); break;
    147c:	eb0000aa 	bl	172c <FPGA_PB_KEYS_ISR>
    1480:	ea00000e 	b	14c0 <__cs3_isr_irq+0x140>
		case 78:  FPGA_Audio_ISR(); break;
    1484:	eb0000a9 	bl	1730 <FPGA_Audio_ISR>
    1488:	ea00000c 	b	14c0 <__cs3_isr_irq+0x140>
		case 79:  FPGA_PS2_ISR(); break;
    148c:	eb0000a8 	bl	1734 <FPGA_PS2_ISR>
    1490:	ea00000a 	b	14c0 <__cs3_isr_irq+0x140>
		case 80:  FPGA_JTAG_ISR(); break;
    1494:	eb0000a7 	bl	1738 <FPGA_JTAG_ISR>
    1498:	ea000008 	b	14c0 <__cs3_isr_irq+0x140>
		case 81:  FPGA_IrDA_ISR(); break;
    149c:	eb0000a6 	bl	173c <FPGA_IrDA_ISR>
    14a0:	ea000006 	b	14c0 <__cs3_isr_irq+0x140>
		case 83:  FPGA_JP1_ISR(); break;
    14a4:	eb0000a5 	bl	1740 <FPGA_JP1_ISR>
    14a8:	ea000004 	b	14c0 <__cs3_isr_irq+0x140>
		case 84:  FPGA_JP2_ISR(); break;
    14ac:	eb0000a4 	bl	1744 <FPGA_JP2_ISR>
    14b0:	ea000002 	b	14c0 <__cs3_isr_irq+0x140>
		case 89:  FPGA_PS2_DUAL_ISR(); break;
    14b4:	eb0000a3 	bl	1748 <FPGA_PS2_DUAL_ISR>
    14b8:	ea000000 	b	14c0 <__cs3_isr_irq+0x140>
	
		default: while(1); break;
    14bc:	eafffffe 	b	14bc <__cs3_isr_irq+0x13c>
	}
	
	*((int *) (MPCORE_GIC_CPUIF + ICCEOIR)) = interrupt_ID;
    14c0:	e30c3110 	movw	r3, #49424	; 0xc110
    14c4:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    14c8:	e51b2020 	ldr	r2, [r11, #-32]	; 0xffffffe0
    14cc:	e5832000 	str	r2, [r3]
}
    14d0:	e24bd018 	sub	sp, r11, #24
    14d4:	e8fd980f 	ldm	sp!, {r0, r1, r2, r3, r11, r12, pc}^

000014d8 <__cs3_reset>:

void __attribute__ ((interrupt)) __cs3_reset (void) {
    14d8:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    14dc:	e28db000 	add	r11, sp, #0
	while(1);
    14e0:	eafffffe 	b	14e0 <__cs3_reset+0x8>

000014e4 <__cs3_isr_undef>:
}

void __attribute__ ((interrupt)) __cs3_isr_undef (void) {
    14e4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    14e8:	e28db000 	add	r11, sp, #0
	while(1);
    14ec:	eafffffe 	b	14ec <__cs3_isr_undef+0x8>

000014f0 <__cs3_isr_swi>:
}

void __attribute__ ((interrupt)) __cs3_isr_swi (void) {
    14f0:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    14f4:	e28db000 	add	r11, sp, #0
	while(1);
    14f8:	eafffffe 	b	14f8 <__cs3_isr_swi+0x8>

000014fc <__cs3_isr_pabort>:
}

void __attribute__ ((interrupt)) __cs3_isr_pabort (void) {
    14fc:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    1500:	e28db000 	add	r11, sp, #0
	while(1);
    1504:	eafffffe 	b	1504 <__cs3_isr_pabort+0x8>

00001508 <__cs3_isr_dabort>:
}

void __attribute__ ((interrupt)) __cs3_isr_dabort (void) {
    1508:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    150c:	e28db000 	add	r11, sp, #0
	while(1);
    1510:	eafffffe 	b	1510 <__cs3_isr_dabort+0x8>

00001514 <__cs3_isr_fiq>:
}

void __attribute__ ((interrupt)) __cs3_isr_fiq (void) {
    1514:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    1518:	e28db000 	add	r11, sp, #0
	while(1);
    151c:	eafffffe 	b	151c <__cs3_isr_fiq+0x8>

00001520 <fix_bug>:
}

void fix_bug() {
    1520:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    1524:	e28db000 	add	r11, sp, #0
    1528:	e24dd00c 	sub	sp, sp, #12
	volatile int * addr = (int *)0xFFFED198;
    152c:	e30d3198 	movw	r3, #53656	; 0xd198
    1530:	e34f3ffe 	movt	r3, #65534	; 0xfffe
    1534:	e50b3008 	str	r3, [r11, #-8]
	*addr = 0x000C0000;
    1538:	e51b3008 	ldr	r3, [r11, #-8]
    153c:	e3a02703 	mov	r2, #786432	; 0xc0000
    1540:	e5832000 	str	r2, [r3]
}
    1544:	e28bd000 	add	sp, r11, #0
    1548:	e8bd0800 	ldmfd	sp!, {r11}
    154c:	e12fff1e 	bx	lr

00001550 <int_setup>:

void int_setup(int len, int* IDs) {
    1550:	e92d4800 	push	{r11, lr}
    1554:	e28db004 	add	r11, sp, #4
    1558:	e24dd008 	sub	sp, sp, #8
    155c:	e50b0008 	str	r0, [r11, #-8]
    1560:	e50b100c 	str	r1, [r11, #-12]
	disable_A9_interrupts();
    1564:	ebffff0e 	bl	11a4 <disable_A9_interrupts>
	set_A9_IRQ_stack();
    1568:	ebffff21 	bl	11f4 <set_A9_IRQ_stack>
	fix_bug();
    156c:	ebffffeb 	bl	1520 <fix_bug>
	config_GIC(len, IDs);
    1570:	e51b0008 	ldr	r0, [r11, #-8]
    1574:	e51b100c 	ldr	r1, [r11, #-12]
    1578:	ebffff5b 	bl	12ec <config_GIC>
	enable_A9_interrupts();
    157c:	ebffff12 	bl	11cc <enable_A9_interrupts>
}
    1580:	e24bd004 	sub	sp, r11, #4
    1584:	e8bd8800 	pop	{r11, pc}

00001588 <HPS_TIM_config_ASM>:
    1588:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    158c:	e3a01000 	mov	r1, #0
    1590:	e3a02001 	mov	r2, #1
    1594:	e5907000 	ldr	r7, [r0]
    1598:	eaffffff 	b	159c <LOOP>

0000159c <LOOP>:
    159c:	e1170112 	tst	r7, r2, lsl r1
    15a0:	0a000000 	beq	15a8 <CONTINUE>
    15a4:	eb000004 	bl	15bc <CONFIG>

000015a8 <CONTINUE>:
    15a8:	e2811001 	add	r1, r1, #1
    15ac:	e3510004 	cmp	r1, #4
    15b0:	bafffff9 	blt	159c <LOOP>

000015b4 <DONE>:
    15b4:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
    15b8:	e12fff1e 	bx	lr

000015bc <CONFIG>:
    15bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    15c0:	e59f30e4 	ldr	r3, [pc, #228]	; 16ac <HPS_TIM_BASE+0x10>
    15c4:	e7934101 	ldr	r4, [r3, r1, lsl #2]
    15c8:	eb000005 	bl	15e4 <DISABLE>
    15cc:	eb000008 	bl	15f4 <SET_LOAD_VAL>
    15d0:	eb00000e 	bl	1610 <SET_LOAD_BIT>
    15d4:	eb000013 	bl	1628 <SET_INT_BIT>
    15d8:	eb000019 	bl	1644 <SET_EN_BIT>
    15dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    15e0:	e12fff1e 	bx	lr

000015e4 <DISABLE>:
    15e4:	e5945008 	ldr	r5, [r4, #8]
    15e8:	e3c55001 	bic	r5, r5, #1
    15ec:	e5845008 	str	r5, [r4, #8]
    15f0:	e12fff1e 	bx	lr

000015f4 <SET_LOAD_VAL>:
    15f4:	e5905004 	ldr	r5, [r0, #4]
    15f8:	e3a06019 	mov	r6, #25
    15fc:	e0050695 	mul	r5, r5, r6
    1600:	e3510002 	cmp	r1, #2
    1604:	b1a05105 	lsllt	r5, r5, #2
    1608:	e5845000 	str	r5, [r4]
    160c:	e12fff1e 	bx	lr

00001610 <SET_LOAD_BIT>:
    1610:	e5945008 	ldr	r5, [r4, #8]
    1614:	e5906008 	ldr	r6, [r0, #8]
    1618:	e3c55002 	bic	r5, r5, #2
    161c:	e1855086 	orr	r5, r5, r6, lsl #1
    1620:	e5845008 	str	r5, [r4, #8]
    1624:	e12fff1e 	bx	lr

00001628 <SET_INT_BIT>:
    1628:	e5945008 	ldr	r5, [r4, #8]
    162c:	e590600c 	ldr	r6, [r0, #12]
    1630:	e2266001 	eor	r6, r6, #1
    1634:	e3c55004 	bic	r5, r5, #4
    1638:	e1855106 	orr	r5, r5, r6, lsl #2
    163c:	e5845008 	str	r5, [r4, #8]
    1640:	e12fff1e 	bx	lr

00001644 <SET_EN_BIT>:
    1644:	e5945008 	ldr	r5, [r4, #8]
    1648:	e5906010 	ldr	r6, [r0, #16]
    164c:	e3c55001 	bic	r5, r5, #1
    1650:	e1855006 	orr	r5, r5, r6
    1654:	e5845008 	str	r5, [r4, #8]
    1658:	e12fff1e 	bx	lr

0000165c <HPS_TIM_clear_INT_ASM>:
    165c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    1660:	e3a01000 	mov	r1, #0
    1664:	e3a02001 	mov	r2, #1
    1668:	eaffffff 	b	166c <INT_LOOP>

0000166c <INT_LOOP>:
    166c:	e1100112 	tst	r0, r2, lsl r1
    1670:	0a000000 	beq	1678 <INT_CONTINUE>
    1674:	eb000004 	bl	168c <CLEAR_IT>

00001678 <INT_CONTINUE>:
    1678:	e2811001 	add	r1, r1, #1
    167c:	e3510004 	cmp	r1, #4
    1680:	bafffff9 	blt	166c <INT_LOOP>

00001684 <INT_DONE>:
    1684:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    1688:	e12fff1e 	bx	lr

0000168c <CLEAR_IT>:
    168c:	e59f3018 	ldr	r3, [pc, #24]	; 16ac <HPS_TIM_BASE+0x10>
    1690:	e7933101 	ldr	r3, [r3, r1, lsl #2]
    1694:	e593300c 	ldr	r3, [r3, #12]
    1698:	e12fff1e 	bx	lr

0000169c <HPS_TIM_BASE>:
    169c:	ffc08000 	.word	0xffc08000
    16a0:	ffc09000 	.word	0xffc09000
    16a4:	ffd00000 	.word	0xffd00000
    16a8:	ffd01000 	.word	0xffd01000
    16ac:	0000169c 	.word	0x0000169c

000016b0 <hps_tim0_int_flag>:
    16b0:	00000000 	.word	0x00000000

000016b4 <hps_tim1_int_flag>:
    16b4:	00000000 	.word	0x00000000

000016b8 <hps_tim2_int_flag>:
    16b8:	00000000 	.word	0x00000000

000016bc <A9_PRIV_TIM_ISR>:

hps_tim2_int_flag:
	.word 0x0

A9_PRIV_TIM_ISR:
	BX LR
    16bc:	e12fff1e 	bx	lr

000016c0 <HPS_GPIO1_ISR>:
	
HPS_GPIO1_ISR:
	BX LR
    16c0:	e12fff1e 	bx	lr

000016c4 <HPS_TIM0_ISR>:
	
HPS_TIM0_ISR:
	PUSH {LR}
    16c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

	MOV R0, #0x1
    16c8:	e3a00001 	mov	r0, #1
	BL HPS_TIM_clear_INT_ASM
    16cc:	ebffffe2 	bl	165c <HPS_TIM_clear_INT_ASM>
	
	LDR R0, =hps_tim0_int_flag
    16d0:	e59f0074 	ldr	r0, [pc, #116]	; 174c <FPGA_PS2_DUAL_ISR+0x4>
	MOV R1, #1
    16d4:	e3a01001 	mov	r1, #1
	STR R1, [R0]
    16d8:	e5801000 	str	r1, [r0]
	
	POP {LR}
    16dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
	BX LR
    16e0:	e12fff1e 	bx	lr

000016e4 <HPS_TIM1_ISR>:
	
HPS_TIM1_ISR:
	PUSH {LR}
    16e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

	MOV R0, #0x2
    16e8:	e3a00002 	mov	r0, #2
	BL HPS_TIM_clear_INT_ASM
    16ec:	ebffffda 	bl	165c <HPS_TIM_clear_INT_ASM>
	
	LDR R0, =hps_tim1_int_flag
    16f0:	e59f0058 	ldr	r0, [pc, #88]	; 1750 <FPGA_PS2_DUAL_ISR+0x8>
	MOV R1, #1
    16f4:	e3a01001 	mov	r1, #1
	STR R1, [R0]
    16f8:	e5801000 	str	r1, [r0]
	
	POP {LR}
    16fc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
	BX LR
    1700:	e12fff1e 	bx	lr

00001704 <HPS_TIM2_ISR>:
	
HPS_TIM2_ISR:
	PUSH {LR}
    1704:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

	MOV R0, #0x4
    1708:	e3a00004 	mov	r0, #4
	BL HPS_TIM_clear_INT_ASM
    170c:	ebffffd2 	bl	165c <HPS_TIM_clear_INT_ASM>
	
	LDR R0, =hps_tim2_int_flag
    1710:	e59f003c 	ldr	r0, [pc, #60]	; 1754 <FPGA_PS2_DUAL_ISR+0xc>
	MOV R1, #1
    1714:	e3a01001 	mov	r1, #1
	STR R1, [R0]
    1718:	e5801000 	str	r1, [r0]
	
	POP {LR}
    171c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
	BX LR
    1720:	e12fff1e 	bx	lr

00001724 <HPS_TIM3_ISR>:
	
HPS_TIM3_ISR:
	BX LR
    1724:	e12fff1e 	bx	lr

00001728 <FPGA_INTERVAL_TIM_ISR>:
	
FPGA_INTERVAL_TIM_ISR:
	BX LR
    1728:	e12fff1e 	bx	lr

0000172c <FPGA_PB_KEYS_ISR>:
	
FPGA_PB_KEYS_ISR:
	BX LR
    172c:	e12fff1e 	bx	lr

00001730 <FPGA_Audio_ISR>:
	
FPGA_Audio_ISR:
	BX LR
    1730:	e12fff1e 	bx	lr

00001734 <FPGA_PS2_ISR>:
	
FPGA_PS2_ISR:
	BX LR
    1734:	e12fff1e 	bx	lr

00001738 <FPGA_JTAG_ISR>:
	
FPGA_JTAG_ISR:
	BX LR
    1738:	e12fff1e 	bx	lr

0000173c <FPGA_IrDA_ISR>:
	
FPGA_IrDA_ISR:
	BX LR
    173c:	e12fff1e 	bx	lr

00001740 <FPGA_JP1_ISR>:
	
FPGA_JP1_ISR:
	BX LR
    1740:	e12fff1e 	bx	lr

00001744 <FPGA_JP2_ISR>:
	
FPGA_JP2_ISR:
	BX LR
    1744:	e12fff1e 	bx	lr

00001748 <FPGA_PS2_DUAL_ISR>:
	
FPGA_PS2_DUAL_ISR:
	BX LR
    1748:	e12fff1e 	bx	lr
	PUSH {LR}

	MOV R0, #0x1
	BL HPS_TIM_clear_INT_ASM
	
	LDR R0, =hps_tim0_int_flag
    174c:	000016b0 	.word	0x000016b0
	PUSH {LR}

	MOV R0, #0x2
	BL HPS_TIM_clear_INT_ASM
	
	LDR R0, =hps_tim1_int_flag
    1750:	000016b4 	.word	0x000016b4
	PUSH {LR}

	MOV R0, #0x4
	BL HPS_TIM_clear_INT_ASM
	
	LDR R0, =hps_tim2_int_flag
    1754:	000016b8 	.word	0x000016b8

00001758 <audio_read_data_ASM>:
    1758:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    175c:	e92d0003 	push	{r0, r1}
    1760:	eb000093 	bl	19b4 <audio_read_ralc_ASM>
    1764:	e3500000 	cmp	r0, #0
    1768:	08bd0003 	popeq	{r0, r1}
    176c:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    1770:	03a00000 	moveq	r0, #0
    1774:	012fff1e 	bxeq	lr
    1778:	eb000092 	bl	19c8 <audio_read_rarc_ASM>
    177c:	e3500000 	cmp	r0, #0
    1780:	08bd0003 	popeq	{r0, r1}
    1784:	03a00000 	moveq	r0, #0
    1788:	012fff1e 	bxeq	lr
    178c:	e8bd0003 	pop	{r0, r1}
    1790:	e59f2240 	ldr	r2, [pc, #576]	; 19d8 <audio_read_rarc_ASM+0x10>
    1794:	e5922000 	ldr	r2, [r2]
    1798:	e5802000 	str	r2, [r0]
    179c:	e59f3238 	ldr	r3, [pc, #568]	; 19dc <audio_read_rarc_ASM+0x14>
    17a0:	e5933000 	ldr	r3, [r3]
    17a4:	e5813000 	str	r3, [r1]
    17a8:	e3a00001 	mov	r0, #1

000017ac <audio_read_leftdata_ASM>:
    17ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    17b0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    17b4:	eb00007e 	bl	19b4 <audio_read_ralc_ASM>
    17b8:	e3500000 	cmp	r0, #0
    17bc:	049d0004 	popeq	{r0}		; (ldreq r0, [sp], #4)
    17c0:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    17c4:	03a00000 	moveq	r0, #0
    17c8:	012fff1e 	bxeq	lr
    17cc:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    17d0:	e59f2200 	ldr	r2, [pc, #512]	; 19d8 <audio_read_rarc_ASM+0x10>
    17d4:	e5922000 	ldr	r2, [r2]
    17d8:	e5802000 	str	r2, [r0]
    17dc:	e3a00001 	mov	r0, #1
    17e0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    17e4:	e12fff1e 	bx	lr

000017e8 <audio_read_rightdata_ASM>:
    17e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    17ec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    17f0:	eb000074 	bl	19c8 <audio_read_rarc_ASM>
    17f4:	e3500000 	cmp	r0, #0
    17f8:	049d0004 	popeq	{r0}		; (ldreq r0, [sp], #4)
    17fc:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    1800:	03a00000 	moveq	r0, #0
    1804:	012fff1e 	bxeq	lr
    1808:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    180c:	e59f21c8 	ldr	r2, [pc, #456]	; 19dc <audio_read_rarc_ASM+0x14>
    1810:	e5922000 	ldr	r2, [r2]
    1814:	e5802000 	str	r2, [r0]
    1818:	e3a00001 	mov	r0, #1
    181c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    1820:	e12fff1e 	bx	lr

00001824 <audio_write_data_ASM>:
    1824:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    1828:	e92d0003 	push	{r0, r1}
    182c:	eb000056 	bl	198c <audio_read_wslc_ASM>
    1830:	e3500000 	cmp	r0, #0
    1834:	08bd0003 	popeq	{r0, r1}
    1838:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    183c:	03a00000 	moveq	r0, #0
    1840:	012fff1e 	bxeq	lr
    1844:	eb000055 	bl	19a0 <audio_read_wsrc_ASM>
    1848:	e3500000 	cmp	r0, #0
    184c:	08bd0003 	popeq	{r0, r1}
    1850:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    1854:	03a00000 	moveq	r0, #0
    1858:	012fff1e 	bxeq	lr
    185c:	e8bd0003 	pop	{r0, r1}
    1860:	e59f2170 	ldr	r2, [pc, #368]	; 19d8 <audio_read_rarc_ASM+0x10>
    1864:	e5820000 	str	r0, [r2]
    1868:	e59f316c 	ldr	r3, [pc, #364]	; 19dc <audio_read_rarc_ASM+0x14>
    186c:	e5831000 	str	r1, [r3]
    1870:	e3a00001 	mov	r0, #1
    1874:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    1878:	e12fff1e 	bx	lr

0000187c <audio_write_leftdata_ASM>:
    187c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    1880:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    1884:	eb000040 	bl	198c <audio_read_wslc_ASM>
    1888:	e3500000 	cmp	r0, #0
    188c:	049d0004 	popeq	{r0}		; (ldreq r0, [sp], #4)
    1890:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    1894:	03a00000 	moveq	r0, #0
    1898:	012fff1e 	bxeq	lr
    189c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    18a0:	e59f2130 	ldr	r2, [pc, #304]	; 19d8 <audio_read_rarc_ASM+0x10>
    18a4:	e5820000 	str	r0, [r2]
    18a8:	e3a00001 	mov	r0, #1
    18ac:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    18b0:	e12fff1e 	bx	lr

000018b4 <audio_write_rightdata_ASM>:
    18b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    18b8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    18bc:	eb000037 	bl	19a0 <audio_read_wsrc_ASM>
    18c0:	e3500000 	cmp	r0, #0
    18c4:	049d0004 	popeq	{r0}		; (ldreq r0, [sp], #4)
    18c8:	049de004 	popeq	{lr}		; (ldreq lr, [sp], #4)
    18cc:	03a00000 	moveq	r0, #0
    18d0:	012fff1e 	bxeq	lr
    18d4:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    18d8:	e59f20fc 	ldr	r2, [pc, #252]	; 19dc <audio_read_rarc_ASM+0x14>
    18dc:	e5820000 	str	r0, [r2]
    18e0:	e3a00001 	mov	r0, #1
    18e4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    18e8:	e12fff1e 	bx	lr

000018ec <audio_enable_read_fifo_clear_ASM>:
    18ec:	e59f00ec 	ldr	r0, [pc, #236]	; 19e0 <audio_read_rarc_ASM+0x18>
    18f0:	e5901000 	ldr	r1, [r0]
    18f4:	e3811004 	orr	r1, r1, #4
    18f8:	e5801000 	str	r1, [r0]
    18fc:	e12fff1e 	bx	lr

00001900 <audio_enable_write_fifo_clear_ASM>:
    1900:	e59f00d8 	ldr	r0, [pc, #216]	; 19e0 <audio_read_rarc_ASM+0x18>
    1904:	e5901000 	ldr	r1, [r0]
    1908:	e3811008 	orr	r1, r1, #8
    190c:	e5801000 	str	r1, [r0]
    1910:	e12fff1e 	bx	lr

00001914 <audio_disable_read_fifo_clear_ASM>:
    1914:	e59f00c4 	ldr	r0, [pc, #196]	; 19e0 <audio_read_rarc_ASM+0x18>
    1918:	e5901000 	ldr	r1, [r0]
    191c:	e3c11004 	bic	r1, r1, #4
    1920:	e5801000 	str	r1, [r0]
    1924:	e12fff1e 	bx	lr

00001928 <audio_disable_write_fifo_clear_ASM>:
    1928:	e59f00b0 	ldr	r0, [pc, #176]	; 19e0 <audio_read_rarc_ASM+0x18>
    192c:	e5901000 	ldr	r1, [r0]
    1930:	e3c11008 	bic	r1, r1, #8
    1934:	e5801000 	str	r1, [r0]
    1938:	e12fff1e 	bx	lr

0000193c <audio_enable_read_int_ASM>:
    193c:	e59f009c 	ldr	r0, [pc, #156]	; 19e0 <audio_read_rarc_ASM+0x18>
    1940:	e5901000 	ldr	r1, [r0]
    1944:	e3811001 	orr	r1, r1, #1
    1948:	e5801000 	str	r1, [r0]
    194c:	e12fff1e 	bx	lr

00001950 <audio_enable_write_int_ASM>:
    1950:	e59f0088 	ldr	r0, [pc, #136]	; 19e0 <audio_read_rarc_ASM+0x18>
    1954:	e5901000 	ldr	r1, [r0]
    1958:	e3811002 	orr	r1, r1, #2
    195c:	e5801000 	str	r1, [r0]
    1960:	e12fff1e 	bx	lr

00001964 <audio_disable_read_int_ASM>:
    1964:	e59f0074 	ldr	r0, [pc, #116]	; 19e0 <audio_read_rarc_ASM+0x18>
    1968:	e5901000 	ldr	r1, [r0]
    196c:	e3c11001 	bic	r1, r1, #1
    1970:	e5801000 	str	r1, [r0]
    1974:	e12fff1e 	bx	lr

00001978 <audio_disable_write_int_ASM>:
    1978:	e59f0060 	ldr	r0, [pc, #96]	; 19e0 <audio_read_rarc_ASM+0x18>
    197c:	e5901000 	ldr	r1, [r0]
    1980:	e3c11002 	bic	r1, r1, #2
    1984:	e5801000 	str	r1, [r0]
    1988:	e12fff1e 	bx	lr

0000198c <audio_read_wslc_ASM>:
    198c:	e59f0050 	ldr	r0, [pc, #80]	; 19e4 <audio_read_rarc_ASM+0x1c>
    1990:	e5900000 	ldr	r0, [r0]
    1994:	e1a00c20 	lsr	r0, r0, #24
    1998:	e20000ff 	and	r0, r0, #255	; 0xff
    199c:	e12fff1e 	bx	lr

000019a0 <audio_read_wsrc_ASM>:
    19a0:	e59f003c 	ldr	r0, [pc, #60]	; 19e4 <audio_read_rarc_ASM+0x1c>
    19a4:	e5900000 	ldr	r0, [r0]
    19a8:	e1a00820 	lsr	r0, r0, #16
    19ac:	e20000ff 	and	r0, r0, #255	; 0xff
    19b0:	e12fff1e 	bx	lr

000019b4 <audio_read_ralc_ASM>:
    19b4:	e59f0028 	ldr	r0, [pc, #40]	; 19e4 <audio_read_rarc_ASM+0x1c>
    19b8:	e5900000 	ldr	r0, [r0]
    19bc:	e1a00420 	lsr	r0, r0, #8
    19c0:	e20000ff 	and	r0, r0, #255	; 0xff
    19c4:	e12fff1e 	bx	lr

000019c8 <audio_read_rarc_ASM>:
    19c8:	e59f0014 	ldr	r0, [pc, #20]	; 19e4 <audio_read_rarc_ASM+0x1c>
    19cc:	e5900000 	ldr	r0, [r0]
    19d0:	e20000ff 	and	r0, r0, #255	; 0xff
    19d4:	e12fff1e 	bx	lr
    19d8:	ff203048 	.word	0xff203048
    19dc:	ff20304c 	.word	0xff20304c
    19e0:	ff203040 	.word	0xff203040
    19e4:	ff203044 	.word	0xff203044

000019e8 <read_ps2_data_ASM>:
    19e8:	e59f114c 	ldr	r1, [pc, #332]	; 1b3c <ps2_fifo_ravail+0x4>
    19ec:	e5911000 	ldr	r1, [r1]
    19f0:	e3a02902 	mov	r2, #32768	; 0x8000
    19f4:	e1110002 	tst	r1, r2
    19f8:	03a00000 	moveq	r0, #0
    19fc:	012fff1e 	bxeq	lr
    1a00:	e20120ff 	and	r2, r1, #255	; 0xff
    1a04:	e5c02000 	strb	r2, [r0]
    1a08:	e59f2130 	ldr	r2, [pc, #304]	; 1b40 <ps2_fifo_ravail+0x8>
    1a0c:	e0010002 	and	r0, r1, r2
    1a10:	e1a00820 	lsr	r0, r0, #16
    1a14:	e12fff1e 	bx	lr

00001a18 <enable_ps2_int_ASM>:
    1a18:	e59f011c 	ldr	r0, [pc, #284]	; 1b3c <ps2_fifo_ravail+0x4>
    1a1c:	e3a01001 	mov	r1, #1
    1a20:	e5c01004 	strb	r1, [r0, #4]
    1a24:	e12fff1e 	bx	lr

00001a28 <disable_ps2_int_ASM>:
    1a28:	e59f010c 	ldr	r0, [pc, #268]	; 1b3c <ps2_fifo_ravail+0x4>
    1a2c:	e3a01000 	mov	r1, #0
    1a30:	e5c01004 	strb	r1, [r0, #4]
    1a34:	e12fff1e 	bx	lr

00001a38 <ps2_fifo_data>:
	...

00001b38 <ps2_fifo_ravail>:
    1b38:	00000000 	.word	0x00000000
    1b3c:	ff200100 	.word	0xff200100
    1b40:	ffff0000 	.word	0xffff0000

00001b44 <VGA_clear_charbuff_ASM>:
    1b44:	e92d0030 	push	{r4, r5}
    1b48:	e3a02000 	mov	r2, #0
    1b4c:	e3a034c9 	mov	r3, #-922746880	; 0xc9000000
    1b50:	e3a00000 	mov	r0, #0

00001b54 <CHAR_LOOPX>:
    1b54:	e3a01000 	mov	r1, #0
    1b58:	e0834000 	add	r4, r3, r0

00001b5c <CHAR_LOOPY>:
    1b5c:	e0845381 	add	r5, r4, r1, lsl #7
    1b60:	e5c52000 	strb	r2, [r5]
    1b64:	e2811001 	add	r1, r1, #1
    1b68:	e351003c 	cmp	r1, #60	; 0x3c
    1b6c:	bafffffa 	blt	1b5c <CHAR_LOOPY>
    1b70:	e2800001 	add	r0, r0, #1
    1b74:	e3500050 	cmp	r0, #80	; 0x50
    1b78:	bafffff5 	blt	1b54 <CHAR_LOOPX>
    1b7c:	e8bd0030 	pop	{r4, r5}
    1b80:	e12fff1e 	bx	lr

00001b84 <VGA_clear_pixelbuff_ASM>:
    1b84:	e92d0030 	push	{r4, r5}
    1b88:	e3a02000 	mov	r2, #0
    1b8c:	e3a03332 	mov	r3, #-939524096	; 0xc8000000
    1b90:	e3a00000 	mov	r0, #0

00001b94 <PIXEL_LOOPX>:
    1b94:	e3a01000 	mov	r1, #0
    1b98:	e0834080 	add	r4, r3, r0, lsl #1

00001b9c <PIXEL_LOOPY>:
    1b9c:	e0845501 	add	r5, r4, r1, lsl #10
    1ba0:	e1c520b0 	strh	r2, [r5]
    1ba4:	e2811001 	add	r1, r1, #1
    1ba8:	e35100f0 	cmp	r1, #240	; 0xf0
    1bac:	bafffffa 	blt	1b9c <PIXEL_LOOPY>
    1bb0:	e2800001 	add	r0, r0, #1
    1bb4:	e3500d05 	cmp	r0, #320	; 0x140
    1bb8:	bafffff5 	blt	1b94 <PIXEL_LOOPX>
    1bbc:	e8bd0030 	pop	{r4, r5}
    1bc0:	e12fff1e 	bx	lr

00001bc4 <VGA_write_char_ASM>:
    1bc4:	e3500000 	cmp	r0, #0
    1bc8:	b12fff1e 	bxlt	lr
    1bcc:	e3510000 	cmp	r1, #0
    1bd0:	b12fff1e 	bxlt	lr
    1bd4:	e350004f 	cmp	r0, #79	; 0x4f
    1bd8:	c12fff1e 	bxgt	lr
    1bdc:	e351003b 	cmp	r1, #59	; 0x3b
    1be0:	c12fff1e 	bxgt	lr
    1be4:	e3a034c9 	mov	r3, #-922746880	; 0xc9000000
    1be8:	e0833000 	add	r3, r3, r0
    1bec:	e0833381 	add	r3, r3, r1, lsl #7
    1bf0:	e5c32000 	strb	r2, [r3]
    1bf4:	e12fff1e 	bx	lr

00001bf8 <VGA_write_byte_ASM>:
    1bf8:	e3500000 	cmp	r0, #0
    1bfc:	b12fff1e 	bxlt	lr
    1c00:	e3510000 	cmp	r1, #0
    1c04:	b12fff1e 	bxlt	lr
    1c08:	e350004e 	cmp	r0, #78	; 0x4e
    1c0c:	c12fff1e 	bxgt	lr
    1c10:	e351003b 	cmp	r1, #59	; 0x3b
    1c14:	c12fff1e 	bxgt	lr
    1c18:	e92d0030 	push	{r4, r5}
    1c1c:	e3a034c9 	mov	r3, #-922746880	; 0xc9000000
    1c20:	e20250f0 	and	r5, r2, #240	; 0xf0
    1c24:	e1a05225 	lsr	r5, r5, #4
    1c28:	e202400f 	and	r4, r2, #15
    1c2c:	e59f2068 	ldr	r2, [pc, #104]	; 1c9c <HEX_ASCII+0x10>
    1c30:	e7d25005 	ldrb	r5, [r2, r5]
    1c34:	e7d24004 	ldrb	r4, [r2, r4]
    1c38:	e0833000 	add	r3, r3, r0
    1c3c:	e0833381 	add	r3, r3, r1, lsl #7
    1c40:	e5c35000 	strb	r5, [r3]
    1c44:	e2833001 	add	r3, r3, #1
    1c48:	e5c34000 	strb	r4, [r3]
    1c4c:	e8bd0030 	pop	{r4, r5}
    1c50:	e12fff1e 	bx	lr

00001c54 <VGA_draw_point_ASM>:
    1c54:	e59f3044 	ldr	r3, [pc, #68]	; 1ca0 <HEX_ASCII+0x14>
    1c58:	e3500000 	cmp	r0, #0
    1c5c:	b12fff1e 	bxlt	lr
    1c60:	e3510000 	cmp	r1, #0
    1c64:	b12fff1e 	bxlt	lr
    1c68:	e1500003 	cmp	r0, r3
    1c6c:	c12fff1e 	bxgt	lr
    1c70:	e35100ef 	cmp	r1, #239	; 0xef
    1c74:	c12fff1e 	bxgt	lr
    1c78:	e3a03332 	mov	r3, #-939524096	; 0xc8000000
    1c7c:	e0833080 	add	r3, r3, r0, lsl #1
    1c80:	e0833501 	add	r3, r3, r1, lsl #10
    1c84:	e1c320b0 	strh	r2, [r3]
    1c88:	e12fff1e 	bx	lr

00001c8c <HEX_ASCII>:
    1c8c:	33323130 	.word	0x33323130
    1c90:	37363534 	.word	0x37363534
    1c94:	42413938 	.word	0x42413938
    1c98:	46454443 	.word	0x46454443
    1c9c:	00001c8c 	.word	0x00001c8c
    1ca0:	0000013f 	.word	0x0000013f

00001ca4 <__aeabi_idiv>:
    1ca4:	e3510000 	cmp	r1, #0
    1ca8:	0a000043 	beq	1dbc <.divsi3_skip_div0_test+0x110>

00001cac <.divsi3_skip_div0_test>:
    1cac:	e020c001 	eor	r12, r0, r1
    1cb0:	42611000 	rsbmi	r1, r1, #0
    1cb4:	e2512001 	subs	r2, r1, #1
    1cb8:	0a000027 	beq	1d5c <.divsi3_skip_div0_test+0xb0>
    1cbc:	e1b03000 	movs	r3, r0
    1cc0:	42603000 	rsbmi	r3, r0, #0
    1cc4:	e1530001 	cmp	r3, r1
    1cc8:	9a000026 	bls	1d68 <.divsi3_skip_div0_test+0xbc>
    1ccc:	e1110002 	tst	r1, r2
    1cd0:	0a000028 	beq	1d78 <.divsi3_skip_div0_test+0xcc>
    1cd4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    1cd8:	01a01181 	lsleq	r1, r1, #3
    1cdc:	03a02008 	moveq	r2, #8
    1ce0:	13a02001 	movne	r2, #1
    1ce4:	e3510201 	cmp	r1, #268435456	; 0x10000000
    1ce8:	31510003 	cmpcc	r1, r3
    1cec:	31a01201 	lslcc	r1, r1, #4
    1cf0:	31a02202 	lslcc	r2, r2, #4
    1cf4:	3afffffa 	bcc	1ce4 <.divsi3_skip_div0_test+0x38>
    1cf8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    1cfc:	31510003 	cmpcc	r1, r3
    1d00:	31a01081 	lslcc	r1, r1, #1
    1d04:	31a02082 	lslcc	r2, r2, #1
    1d08:	3afffffa 	bcc	1cf8 <.divsi3_skip_div0_test+0x4c>
    1d0c:	e3a00000 	mov	r0, #0
    1d10:	e1530001 	cmp	r3, r1
    1d14:	20433001 	subcs	r3, r3, r1
    1d18:	21800002 	orrcs	r0, r0, r2
    1d1c:	e15300a1 	cmp	r3, r1, lsr #1
    1d20:	204330a1 	subcs	r3, r3, r1, lsr #1
    1d24:	218000a2 	orrcs	r0, r0, r2, lsr #1
    1d28:	e1530121 	cmp	r3, r1, lsr #2
    1d2c:	20433121 	subcs	r3, r3, r1, lsr #2
    1d30:	21800122 	orrcs	r0, r0, r2, lsr #2
    1d34:	e15301a1 	cmp	r3, r1, lsr #3
    1d38:	204331a1 	subcs	r3, r3, r1, lsr #3
    1d3c:	218001a2 	orrcs	r0, r0, r2, lsr #3
    1d40:	e3530000 	cmp	r3, #0
    1d44:	11b02222 	lsrsne	r2, r2, #4
    1d48:	11a01221 	lsrne	r1, r1, #4
    1d4c:	1affffef 	bne	1d10 <.divsi3_skip_div0_test+0x64>
    1d50:	e35c0000 	cmp	r12, #0
    1d54:	42600000 	rsbmi	r0, r0, #0
    1d58:	e12fff1e 	bx	lr
    1d5c:	e13c0000 	teq	r12, r0
    1d60:	42600000 	rsbmi	r0, r0, #0
    1d64:	e12fff1e 	bx	lr
    1d68:	33a00000 	movcc	r0, #0
    1d6c:	01a00fcc 	asreq	r0, r12, #31
    1d70:	03800001 	orreq	r0, r0, #1
    1d74:	e12fff1e 	bx	lr
    1d78:	e3510801 	cmp	r1, #65536	; 0x10000
    1d7c:	21a01821 	lsrcs	r1, r1, #16
    1d80:	23a02010 	movcs	r2, #16
    1d84:	33a02000 	movcc	r2, #0
    1d88:	e3510c01 	cmp	r1, #256	; 0x100
    1d8c:	21a01421 	lsrcs	r1, r1, #8
    1d90:	22822008 	addcs	r2, r2, #8
    1d94:	e3510010 	cmp	r1, #16
    1d98:	21a01221 	lsrcs	r1, r1, #4
    1d9c:	22822004 	addcs	r2, r2, #4
    1da0:	e3510004 	cmp	r1, #4
    1da4:	82822003 	addhi	r2, r2, #3
    1da8:	908220a1 	addls	r2, r2, r1, lsr #1
    1dac:	e35c0000 	cmp	r12, #0
    1db0:	e1a00233 	lsr	r0, r3, r2
    1db4:	42600000 	rsbmi	r0, r0, #0
    1db8:	e12fff1e 	bx	lr
    1dbc:	e3500000 	cmp	r0, #0
    1dc0:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
    1dc4:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
    1dc8:	ea000007 	b	1dec <__aeabi_idiv0>

00001dcc <__aeabi_idivmod>:
    1dcc:	e3510000 	cmp	r1, #0
    1dd0:	0afffff9 	beq	1dbc <.divsi3_skip_div0_test+0x110>
    1dd4:	e92d4003 	push	{r0, r1, lr}
    1dd8:	ebffffb3 	bl	1cac <.divsi3_skip_div0_test>
    1ddc:	e8bd4006 	pop	{r1, r2, lr}
    1de0:	e0030092 	mul	r3, r2, r0
    1de4:	e0411003 	sub	r1, r1, r3
    1de8:	e12fff1e 	bx	lr

00001dec <__aeabi_idiv0>:
    1dec:	e12fff1e 	bx	lr

00001df0 <__aeabi_drsub>:
    1df0:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
    1df4:	ea000000 	b	1dfc <__adddf3>

00001df8 <__aeabi_dsub>:
    1df8:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

00001dfc <__adddf3>:
    1dfc:	e92d4030 	push	{r4, r5, lr}
    1e00:	e1a04081 	lsl	r4, r1, #1
    1e04:	e1a05083 	lsl	r5, r3, #1
    1e08:	e1340005 	teq	r4, r5
    1e0c:	01300002 	teqeq	r0, r2
    1e10:	1194c000 	orrsne	r12, r4, r0
    1e14:	1195c002 	orrsne	r12, r5, r2
    1e18:	11f0cac4 	mvnsne	r12, r4, asr #21
    1e1c:	11f0cac5 	mvnsne	r12, r5, asr #21
    1e20:	0a00008c 	beq	2058 <__adddf3+0x25c>
    1e24:	e1a04aa4 	lsr	r4, r4, #21
    1e28:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
    1e2c:	b2655000 	rsblt	r5, r5, #0
    1e30:	da000006 	ble	1e50 <__adddf3+0x54>
    1e34:	e0844005 	add	r4, r4, r5
    1e38:	e0202002 	eor	r2, r0, r2
    1e3c:	e0213003 	eor	r3, r1, r3
    1e40:	e0220000 	eor	r0, r2, r0
    1e44:	e0231001 	eor	r1, r3, r1
    1e48:	e0202002 	eor	r2, r0, r2
    1e4c:	e0213003 	eor	r3, r1, r3
    1e50:	e3550036 	cmp	r5, #54	; 0x36
    1e54:	88bd4030 	pophi	{r4, r5, lr}
    1e58:	812fff1e 	bxhi	lr
    1e5c:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    1e60:	e1a01601 	lsl	r1, r1, #12
    1e64:	e3a0c601 	mov	r12, #1048576	; 0x100000
    1e68:	e18c1621 	orr	r1, r12, r1, lsr #12
    1e6c:	0a000001 	beq	1e78 <__adddf3+0x7c>
    1e70:	e2700000 	rsbs	r0, r0, #0
    1e74:	e2e11000 	rsc	r1, r1, #0
    1e78:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    1e7c:	e1a03603 	lsl	r3, r3, #12
    1e80:	e18c3623 	orr	r3, r12, r3, lsr #12
    1e84:	0a000001 	beq	1e90 <__adddf3+0x94>
    1e88:	e2722000 	rsbs	r2, r2, #0
    1e8c:	e2e33000 	rsc	r3, r3, #0
    1e90:	e1340005 	teq	r4, r5
    1e94:	0a000069 	beq	2040 <__adddf3+0x244>
    1e98:	e2444001 	sub	r4, r4, #1
    1e9c:	e275e020 	rsbs	lr, r5, #32
    1ea0:	ba000005 	blt	1ebc <__adddf3+0xc0>
    1ea4:	e1a0ce12 	lsl	r12, r2, lr
    1ea8:	e0900532 	adds	r0, r0, r2, lsr r5
    1eac:	e2a11000 	adc	r1, r1, #0
    1eb0:	e0900e13 	adds	r0, r0, r3, lsl lr
    1eb4:	e0b11553 	adcs	r1, r1, r3, asr r5
    1eb8:	ea000006 	b	1ed8 <__adddf3+0xdc>
    1ebc:	e2455020 	sub	r5, r5, #32
    1ec0:	e28ee020 	add	lr, lr, #32
    1ec4:	e3520001 	cmp	r2, #1
    1ec8:	e1a0ce13 	lsl	r12, r3, lr
    1ecc:	238cc002 	orrcs	r12, r12, #2
    1ed0:	e0900553 	adds	r0, r0, r3, asr r5
    1ed4:	e0b11fc3 	adcs	r1, r1, r3, asr #31
    1ed8:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    1edc:	5a000002 	bpl	1eec <__adddf3+0xf0>
    1ee0:	e27cc000 	rsbs	r12, r12, #0
    1ee4:	e2f00000 	rscs	r0, r0, #0
    1ee8:	e2e11000 	rsc	r1, r1, #0
    1eec:	e3510601 	cmp	r1, #1048576	; 0x100000
    1ef0:	3a00000f 	bcc	1f34 <__adddf3+0x138>
    1ef4:	e3510602 	cmp	r1, #2097152	; 0x200000
    1ef8:	3a000006 	bcc	1f18 <__adddf3+0x11c>
    1efc:	e1b010a1 	lsrs	r1, r1, #1
    1f00:	e1b00060 	rrxs	r0, r0
    1f04:	e1a0c06c 	rrx	r12, r12
    1f08:	e2844001 	add	r4, r4, #1
    1f0c:	e1a02a84 	lsl	r2, r4, #21
    1f10:	e3720501 	cmn	r2, #4194304	; 0x400000
    1f14:	2a00006b 	bcs	20c8 <__adddf3+0x2cc>
    1f18:	e35c0102 	cmp	r12, #-2147483648	; 0x80000000
    1f1c:	01b0c0a0 	lsrseq	r12, r0, #1
    1f20:	e2b00000 	adcs	r0, r0, #0
    1f24:	e0a11a04 	adc	r1, r1, r4, lsl #20
    1f28:	e1811005 	orr	r1, r1, r5
    1f2c:	e8bd4030 	pop	{r4, r5, lr}
    1f30:	e12fff1e 	bx	lr
    1f34:	e1b0c08c 	lsls	r12, r12, #1
    1f38:	e0b00000 	adcs	r0, r0, r0
    1f3c:	e0a11001 	adc	r1, r1, r1
    1f40:	e3110601 	tst	r1, #1048576	; 0x100000
    1f44:	e2444001 	sub	r4, r4, #1
    1f48:	1afffff2 	bne	1f18 <__adddf3+0x11c>
    1f4c:	e3310000 	teq	r1, #0
    1f50:	13a03014 	movne	r3, #20
    1f54:	03a03034 	moveq	r3, #52	; 0x34
    1f58:	01a01000 	moveq	r1, r0
    1f5c:	03a00000 	moveq	r0, #0
    1f60:	e1a02001 	mov	r2, r1
    1f64:	e3520801 	cmp	r2, #65536	; 0x10000
    1f68:	21a02822 	lsrcs	r2, r2, #16
    1f6c:	22433010 	subcs	r3, r3, #16
    1f70:	e3520c01 	cmp	r2, #256	; 0x100
    1f74:	21a02422 	lsrcs	r2, r2, #8
    1f78:	22433008 	subcs	r3, r3, #8
    1f7c:	e3520010 	cmp	r2, #16
    1f80:	21a02222 	lsrcs	r2, r2, #4
    1f84:	22433004 	subcs	r3, r3, #4
    1f88:	e3520004 	cmp	r2, #4
    1f8c:	22433002 	subcs	r3, r3, #2
    1f90:	304330a2 	subcc	r3, r3, r2, lsr #1
    1f94:	e04331a2 	sub	r3, r3, r2, lsr #3
    1f98:	e2532020 	subs	r2, r3, #32
    1f9c:	aa000007 	bge	1fc0 <__adddf3+0x1c4>
    1fa0:	e292200c 	adds	r2, r2, #12
    1fa4:	da000004 	ble	1fbc <__adddf3+0x1c0>
    1fa8:	e282c014 	add	r12, r2, #20
    1fac:	e262200c 	rsb	r2, r2, #12
    1fb0:	e1a00c11 	lsl	r0, r1, r12
    1fb4:	e1a01231 	lsr	r1, r1, r2
    1fb8:	ea000004 	b	1fd0 <__adddf3+0x1d4>
    1fbc:	e2822014 	add	r2, r2, #20
    1fc0:	d262c020 	rsble	r12, r2, #32
    1fc4:	e1a01211 	lsl	r1, r1, r2
    1fc8:	d1811c30 	orrle	r1, r1, r0, lsr r12
    1fcc:	d1a00210 	lslle	r0, r0, r2
    1fd0:	e0544003 	subs	r4, r4, r3
    1fd4:	a0811a04 	addge	r1, r1, r4, lsl #20
    1fd8:	a1811005 	orrge	r1, r1, r5
    1fdc:	a8bd4030 	popge	{r4, r5, lr}
    1fe0:	a12fff1e 	bxge	lr
    1fe4:	e1e04004 	mvn	r4, r4
    1fe8:	e254401f 	subs	r4, r4, #31
    1fec:	aa00000f 	bge	2030 <__adddf3+0x234>
    1ff0:	e294400c 	adds	r4, r4, #12
    1ff4:	ca000006 	bgt	2014 <__adddf3+0x218>
    1ff8:	e2844014 	add	r4, r4, #20
    1ffc:	e2642020 	rsb	r2, r4, #32
    2000:	e1a00430 	lsr	r0, r0, r4
    2004:	e1800211 	orr	r0, r0, r1, lsl r2
    2008:	e1851431 	orr	r1, r5, r1, lsr r4
    200c:	e8bd4030 	pop	{r4, r5, lr}
    2010:	e12fff1e 	bx	lr
    2014:	e264400c 	rsb	r4, r4, #12
    2018:	e2642020 	rsb	r2, r4, #32
    201c:	e1a00230 	lsr	r0, r0, r2
    2020:	e1800411 	orr	r0, r0, r1, lsl r4
    2024:	e1a01005 	mov	r1, r5
    2028:	e8bd4030 	pop	{r4, r5, lr}
    202c:	e12fff1e 	bx	lr
    2030:	e1a00431 	lsr	r0, r1, r4
    2034:	e1a01005 	mov	r1, r5
    2038:	e8bd4030 	pop	{r4, r5, lr}
    203c:	e12fff1e 	bx	lr
    2040:	e3340000 	teq	r4, #0
    2044:	e2233601 	eor	r3, r3, #1048576	; 0x100000
    2048:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
    204c:	02844001 	addeq	r4, r4, #1
    2050:	12455001 	subne	r5, r5, #1
    2054:	eaffff8f 	b	1e98 <__adddf3+0x9c>
    2058:	e1f0cac4 	mvns	r12, r4, asr #21
    205c:	11f0cac5 	mvnsne	r12, r5, asr #21
    2060:	0a00001d 	beq	20dc <__adddf3+0x2e0>
    2064:	e1340005 	teq	r4, r5
    2068:	01300002 	teqeq	r0, r2
    206c:	0a000004 	beq	2084 <__adddf3+0x288>
    2070:	e194c000 	orrs	r12, r4, r0
    2074:	01a01003 	moveq	r1, r3
    2078:	01a00002 	moveq	r0, r2
    207c:	e8bd4030 	pop	{r4, r5, lr}
    2080:	e12fff1e 	bx	lr
    2084:	e1310003 	teq	r1, r3
    2088:	13a01000 	movne	r1, #0
    208c:	13a00000 	movne	r0, #0
    2090:	18bd4030 	popne	{r4, r5, lr}
    2094:	112fff1e 	bxne	lr
    2098:	e1b0caa4 	lsrs	r12, r4, #21
    209c:	1a000004 	bne	20b4 <__adddf3+0x2b8>
    20a0:	e1b00080 	lsls	r0, r0, #1
    20a4:	e0b11001 	adcs	r1, r1, r1
    20a8:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
    20ac:	e8bd4030 	pop	{r4, r5, lr}
    20b0:	e12fff1e 	bx	lr
    20b4:	e2944501 	adds	r4, r4, #4194304	; 0x400000
    20b8:	32811601 	addcc	r1, r1, #1048576	; 0x100000
    20bc:	38bd4030 	popcc	{r4, r5, lr}
    20c0:	312fff1e 	bxcc	lr
    20c4:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    20c8:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
    20cc:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    20d0:	e3a00000 	mov	r0, #0
    20d4:	e8bd4030 	pop	{r4, r5, lr}
    20d8:	e12fff1e 	bx	lr
    20dc:	e1f0cac4 	mvns	r12, r4, asr #21
    20e0:	11a01003 	movne	r1, r3
    20e4:	11a00002 	movne	r0, r2
    20e8:	01f0cac5 	mvnseq	r12, r5, asr #21
    20ec:	11a03001 	movne	r3, r1
    20f0:	11a02000 	movne	r2, r0
    20f4:	e1904601 	orrs	r4, r0, r1, lsl #12
    20f8:	01925603 	orrseq	r5, r2, r3, lsl #12
    20fc:	01310003 	teqeq	r1, r3
    2100:	13811702 	orrne	r1, r1, #524288	; 0x80000
    2104:	e8bd4030 	pop	{r4, r5, lr}
    2108:	e12fff1e 	bx	lr

0000210c <__aeabi_ui2d>:
    210c:	e3300000 	teq	r0, #0
    2110:	03a01000 	moveq	r1, #0
    2114:	012fff1e 	bxeq	lr
    2118:	e92d4030 	push	{r4, r5, lr}
    211c:	e3a04b01 	mov	r4, #1024	; 0x400
    2120:	e2844032 	add	r4, r4, #50	; 0x32
    2124:	e3a05000 	mov	r5, #0
    2128:	e3a01000 	mov	r1, #0
    212c:	eaffff86 	b	1f4c <__adddf3+0x150>

00002130 <__aeabi_i2d>:
    2130:	e3300000 	teq	r0, #0
    2134:	03a01000 	moveq	r1, #0
    2138:	012fff1e 	bxeq	lr
    213c:	e92d4030 	push	{r4, r5, lr}
    2140:	e3a04b01 	mov	r4, #1024	; 0x400
    2144:	e2844032 	add	r4, r4, #50	; 0x32
    2148:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
    214c:	42600000 	rsbmi	r0, r0, #0
    2150:	e3a01000 	mov	r1, #0
    2154:	eaffff7c 	b	1f4c <__adddf3+0x150>

00002158 <__aeabi_f2d>:
    2158:	e1b02080 	lsls	r2, r0, #1
    215c:	e1a011c2 	asr	r1, r2, #3
    2160:	e1a01061 	rrx	r1, r1
    2164:	e1a00e02 	lsl	r0, r2, #28
    2168:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
    216c:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    2170:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
    2174:	112fff1e 	bxne	lr
    2178:	e3320000 	teq	r2, #0
    217c:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    2180:	012fff1e 	bxeq	lr
    2184:	e92d4030 	push	{r4, r5, lr}
    2188:	e3a04d0e 	mov	r4, #896	; 0x380
    218c:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    2190:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    2194:	eaffff6c 	b	1f4c <__adddf3+0x150>

00002198 <__aeabi_ul2d>:
    2198:	e1902001 	orrs	r2, r0, r1
    219c:	012fff1e 	bxeq	lr
    21a0:	e92d4030 	push	{r4, r5, lr}
    21a4:	e3a05000 	mov	r5, #0
    21a8:	ea000006 	b	21c8 <__aeabi_l2d+0x1c>

000021ac <__aeabi_l2d>:
    21ac:	e1902001 	orrs	r2, r0, r1
    21b0:	012fff1e 	bxeq	lr
    21b4:	e92d4030 	push	{r4, r5, lr}
    21b8:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
    21bc:	5a000001 	bpl	21c8 <__aeabi_l2d+0x1c>
    21c0:	e2700000 	rsbs	r0, r0, #0
    21c4:	e2e11000 	rsc	r1, r1, #0
    21c8:	e3a04b01 	mov	r4, #1024	; 0x400
    21cc:	e2844032 	add	r4, r4, #50	; 0x32
    21d0:	e1b0cb21 	lsrs	r12, r1, #22
    21d4:	0affff44 	beq	1eec <__adddf3+0xf0>
    21d8:	e3a02003 	mov	r2, #3
    21dc:	e1b0c1ac 	lsrs	r12, r12, #3
    21e0:	12822003 	addne	r2, r2, #3
    21e4:	e1b0c1ac 	lsrs	r12, r12, #3
    21e8:	12822003 	addne	r2, r2, #3
    21ec:	e08221ac 	add	r2, r2, r12, lsr #3
    21f0:	e2623020 	rsb	r3, r2, #32
    21f4:	e1a0c310 	lsl	r12, r0, r3
    21f8:	e1a00230 	lsr	r0, r0, r2
    21fc:	e1800311 	orr	r0, r0, r1, lsl r3
    2200:	e1a01231 	lsr	r1, r1, r2
    2204:	e0844002 	add	r4, r4, r2
    2208:	eaffff37 	b	1eec <__adddf3+0xf0>

0000220c <__aeabi_dmul>:
    220c:	e92d4070 	push	{r4, r5, r6, lr}
    2210:	e3a0c0ff 	mov	r12, #255	; 0xff
    2214:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    2218:	e01c4a21 	ands	r4, r12, r1, lsr #20
    221c:	101c5a23 	andsne	r5, r12, r3, lsr #20
    2220:	1134000c 	teqne	r4, r12
    2224:	1135000c 	teqne	r5, r12
    2228:	0b000075 	bleq	2404 <__aeabi_dmul+0x1f8>
    222c:	e0844005 	add	r4, r4, r5
    2230:	e0216003 	eor	r6, r1, r3
    2234:	e1c11a8c 	bic	r1, r1, r12, lsl #21
    2238:	e1c33a8c 	bic	r3, r3, r12, lsl #21
    223c:	e1905601 	orrs	r5, r0, r1, lsl #12
    2240:	11925603 	orrsne	r5, r2, r3, lsl #12
    2244:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    2248:	e3833601 	orr	r3, r3, #1048576	; 0x100000
    224c:	0a00001d 	beq	22c8 <__aeabi_dmul+0xbc>
    2250:	e08ec290 	umull	r12, lr, r0, r2
    2254:	e3a05000 	mov	r5, #0
    2258:	e0a5e291 	umlal	lr, r5, r1, r2
    225c:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
    2260:	e0a5e390 	umlal	lr, r5, r0, r3
    2264:	e3a06000 	mov	r6, #0
    2268:	e0a65391 	umlal	r5, r6, r1, r3
    226c:	e33c0000 	teq	r12, #0
    2270:	138ee001 	orrne	lr, lr, #1
    2274:	e24440ff 	sub	r4, r4, #255	; 0xff
    2278:	e3560c02 	cmp	r6, #512	; 0x200
    227c:	e2c44c03 	sbc	r4, r4, #768	; 0x300
    2280:	2a000002 	bcs	2290 <__aeabi_dmul+0x84>
    2284:	e1b0e08e 	lsls	lr, lr, #1
    2288:	e0b55005 	adcs	r5, r5, r5
    228c:	e0a66006 	adc	r6, r6, r6
    2290:	e1821586 	orr	r1, r2, r6, lsl #11
    2294:	e1811aa5 	orr	r1, r1, r5, lsr #21
    2298:	e1a00585 	lsl	r0, r5, #11
    229c:	e1800aae 	orr	r0, r0, lr, lsr #21
    22a0:	e1a0e58e 	lsl	lr, lr, #11
    22a4:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    22a8:	835c0c07 	cmphi	r12, #1792	; 0x700
    22ac:	8a000011 	bhi	22f8 <__aeabi_dmul+0xec>
    22b0:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
    22b4:	01b0e0a0 	lsrseq	lr, r0, #1
    22b8:	e2b00000 	adcs	r0, r0, #0
    22bc:	e0a11a04 	adc	r1, r1, r4, lsl #20
    22c0:	e8bd4070 	pop	{r4, r5, r6, lr}
    22c4:	e12fff1e 	bx	lr
    22c8:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
    22cc:	e1861001 	orr	r1, r6, r1
    22d0:	e1800002 	orr	r0, r0, r2
    22d4:	e0211003 	eor	r1, r1, r3
    22d8:	e05440ac 	subs	r4, r4, r12, lsr #1
    22dc:	c074500c 	rsbsgt	r5, r4, r12
    22e0:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    22e4:	c8bd4070 	popgt	{r4, r5, r6, lr}
    22e8:	c12fff1e 	bxgt	lr
    22ec:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    22f0:	e3a0e000 	mov	lr, #0
    22f4:	e2544001 	subs	r4, r4, #1
    22f8:	ca00005d 	bgt	2474 <__aeabi_dmul+0x268>
    22fc:	e3740036 	cmn	r4, #54	; 0x36
    2300:	d3a00000 	movle	r0, #0
    2304:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
    2308:	d8bd4070 	pople	{r4, r5, r6, lr}
    230c:	d12fff1e 	bxle	lr
    2310:	e2644000 	rsb	r4, r4, #0
    2314:	e2544020 	subs	r4, r4, #32
    2318:	aa00001a 	bge	2388 <__aeabi_dmul+0x17c>
    231c:	e294400c 	adds	r4, r4, #12
    2320:	ca00000c 	bgt	2358 <__aeabi_dmul+0x14c>
    2324:	e2844014 	add	r4, r4, #20
    2328:	e2645020 	rsb	r5, r4, #32
    232c:	e1a03510 	lsl	r3, r0, r5
    2330:	e1a00430 	lsr	r0, r0, r4
    2334:	e1800511 	orr	r0, r0, r1, lsl r5
    2338:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
    233c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    2340:	e0900fa3 	adds	r0, r0, r3, lsr #31
    2344:	e0a21431 	adc	r1, r2, r1, lsr r4
    2348:	e19ee083 	orrs	lr, lr, r3, lsl #1
    234c:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    2350:	e8bd4070 	pop	{r4, r5, r6, lr}
    2354:	e12fff1e 	bx	lr
    2358:	e264400c 	rsb	r4, r4, #12
    235c:	e2645020 	rsb	r5, r4, #32
    2360:	e1a03410 	lsl	r3, r0, r4
    2364:	e1a00530 	lsr	r0, r0, r5
    2368:	e1800411 	orr	r0, r0, r1, lsl r4
    236c:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    2370:	e0900fa3 	adds	r0, r0, r3, lsr #31
    2374:	e2a11000 	adc	r1, r1, #0
    2378:	e19ee083 	orrs	lr, lr, r3, lsl #1
    237c:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    2380:	e8bd4070 	pop	{r4, r5, r6, lr}
    2384:	e12fff1e 	bx	lr
    2388:	e2645020 	rsb	r5, r4, #32
    238c:	e18ee510 	orr	lr, lr, r0, lsl r5
    2390:	e1a03430 	lsr	r3, r0, r4
    2394:	e1833511 	orr	r3, r3, r1, lsl r5
    2398:	e1a00431 	lsr	r0, r1, r4
    239c:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    23a0:	e1c00431 	bic	r0, r0, r1, lsr r4
    23a4:	e0800fa3 	add	r0, r0, r3, lsr #31
    23a8:	e19ee083 	orrs	lr, lr, r3, lsl #1
    23ac:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    23b0:	e8bd4070 	pop	{r4, r5, r6, lr}
    23b4:	e12fff1e 	bx	lr
    23b8:	e3340000 	teq	r4, #0
    23bc:	1a000008 	bne	23e4 <__aeabi_dmul+0x1d8>
    23c0:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
    23c4:	e1b00080 	lsls	r0, r0, #1
    23c8:	e0a11001 	adc	r1, r1, r1
    23cc:	e3110601 	tst	r1, #1048576	; 0x100000
    23d0:	02444001 	subeq	r4, r4, #1
    23d4:	0afffffa 	beq	23c4 <__aeabi_dmul+0x1b8>
    23d8:	e1811006 	orr	r1, r1, r6
    23dc:	e3350000 	teq	r5, #0
    23e0:	112fff1e 	bxne	lr
    23e4:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
    23e8:	e1b02082 	lsls	r2, r2, #1
    23ec:	e0a33003 	adc	r3, r3, r3
    23f0:	e3130601 	tst	r3, #1048576	; 0x100000
    23f4:	02455001 	subeq	r5, r5, #1
    23f8:	0afffffa 	beq	23e8 <__aeabi_dmul+0x1dc>
    23fc:	e1833006 	orr	r3, r3, r6
    2400:	e12fff1e 	bx	lr
    2404:	e134000c 	teq	r4, r12
    2408:	e00c5a23 	and	r5, r12, r3, lsr #20
    240c:	1135000c 	teqne	r5, r12
    2410:	0a000007 	beq	2434 <__aeabi_dmul+0x228>
    2414:	e1906081 	orrs	r6, r0, r1, lsl #1
    2418:	11926083 	orrsne	r6, r2, r3, lsl #1
    241c:	1affffe5 	bne	23b8 <__aeabi_dmul+0x1ac>
    2420:	e0211003 	eor	r1, r1, r3
    2424:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    2428:	e3a00000 	mov	r0, #0
    242c:	e8bd4070 	pop	{r4, r5, r6, lr}
    2430:	e12fff1e 	bx	lr
    2434:	e1906081 	orrs	r6, r0, r1, lsl #1
    2438:	01a00002 	moveq	r0, r2
    243c:	01a01003 	moveq	r1, r3
    2440:	11926083 	orrsne	r6, r2, r3, lsl #1
    2444:	0a000010 	beq	248c <__aeabi_dmul+0x280>
    2448:	e134000c 	teq	r4, r12
    244c:	1a000001 	bne	2458 <__aeabi_dmul+0x24c>
    2450:	e1906601 	orrs	r6, r0, r1, lsl #12
    2454:	1a00000c 	bne	248c <__aeabi_dmul+0x280>
    2458:	e135000c 	teq	r5, r12
    245c:	1a000003 	bne	2470 <__aeabi_dmul+0x264>
    2460:	e1926603 	orrs	r6, r2, r3, lsl #12
    2464:	11a00002 	movne	r0, r2
    2468:	11a01003 	movne	r1, r3
    246c:	1a000006 	bne	248c <__aeabi_dmul+0x280>
    2470:	e0211003 	eor	r1, r1, r3
    2474:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    2478:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    247c:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    2480:	e3a00000 	mov	r0, #0
    2484:	e8bd4070 	pop	{r4, r5, r6, lr}
    2488:	e12fff1e 	bx	lr
    248c:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    2490:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
    2494:	e8bd4070 	pop	{r4, r5, r6, lr}
    2498:	e12fff1e 	bx	lr

0000249c <__aeabi_ddiv>:
    249c:	e92d4070 	push	{r4, r5, r6, lr}
    24a0:	e3a0c0ff 	mov	r12, #255	; 0xff
    24a4:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    24a8:	e01c4a21 	ands	r4, r12, r1, lsr #20
    24ac:	101c5a23 	andsne	r5, r12, r3, lsr #20
    24b0:	1134000c 	teqne	r4, r12
    24b4:	1135000c 	teqne	r5, r12
    24b8:	0b00005e 	bleq	2638 <__aeabi_ddiv+0x19c>
    24bc:	e0444005 	sub	r4, r4, r5
    24c0:	e021e003 	eor	lr, r1, r3
    24c4:	e1925603 	orrs	r5, r2, r3, lsl #12
    24c8:	e1a01601 	lsl	r1, r1, #12
    24cc:	0a00004c 	beq	2604 <__aeabi_ddiv+0x168>
    24d0:	e1a03603 	lsl	r3, r3, #12
    24d4:	e3a05201 	mov	r5, #268435456	; 0x10000000
    24d8:	e1853223 	orr	r3, r5, r3, lsr #4
    24dc:	e1833c22 	orr	r3, r3, r2, lsr #24
    24e0:	e1a02402 	lsl	r2, r2, #8
    24e4:	e1855221 	orr	r5, r5, r1, lsr #4
    24e8:	e1855c20 	orr	r5, r5, r0, lsr #24
    24ec:	e1a06400 	lsl	r6, r0, #8
    24f0:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
    24f4:	e1550003 	cmp	r5, r3
    24f8:	01560002 	cmpeq	r6, r2
    24fc:	e2a440fd 	adc	r4, r4, #253	; 0xfd
    2500:	e2844c03 	add	r4, r4, #768	; 0x300
    2504:	2a000001 	bcs	2510 <__aeabi_ddiv+0x74>
    2508:	e1b030a3 	lsrs	r3, r3, #1
    250c:	e1a02062 	rrx	r2, r2
    2510:	e0566002 	subs	r6, r6, r2
    2514:	e0c55003 	sbc	r5, r5, r3
    2518:	e1b030a3 	lsrs	r3, r3, #1
    251c:	e1a02062 	rrx	r2, r2
    2520:	e3a00601 	mov	r0, #1048576	; 0x100000
    2524:	e3a0c702 	mov	r12, #524288	; 0x80000
    2528:	e056e002 	subs	lr, r6, r2
    252c:	e0d5e003 	sbcs	lr, r5, r3
    2530:	20466002 	subcs	r6, r6, r2
    2534:	21a0500e 	movcs	r5, lr
    2538:	2180000c 	orrcs	r0, r0, r12
    253c:	e1b030a3 	lsrs	r3, r3, #1
    2540:	e1a02062 	rrx	r2, r2
    2544:	e056e002 	subs	lr, r6, r2
    2548:	e0d5e003 	sbcs	lr, r5, r3
    254c:	20466002 	subcs	r6, r6, r2
    2550:	21a0500e 	movcs	r5, lr
    2554:	218000ac 	orrcs	r0, r0, r12, lsr #1
    2558:	e1b030a3 	lsrs	r3, r3, #1
    255c:	e1a02062 	rrx	r2, r2
    2560:	e056e002 	subs	lr, r6, r2
    2564:	e0d5e003 	sbcs	lr, r5, r3
    2568:	20466002 	subcs	r6, r6, r2
    256c:	21a0500e 	movcs	r5, lr
    2570:	2180012c 	orrcs	r0, r0, r12, lsr #2
    2574:	e1b030a3 	lsrs	r3, r3, #1
    2578:	e1a02062 	rrx	r2, r2
    257c:	e056e002 	subs	lr, r6, r2
    2580:	e0d5e003 	sbcs	lr, r5, r3
    2584:	20466002 	subcs	r6, r6, r2
    2588:	21a0500e 	movcs	r5, lr
    258c:	218001ac 	orrcs	r0, r0, r12, lsr #3
    2590:	e195e006 	orrs	lr, r5, r6
    2594:	0a00000d 	beq	25d0 <__aeabi_ddiv+0x134>
    2598:	e1a05205 	lsl	r5, r5, #4
    259c:	e1855e26 	orr	r5, r5, r6, lsr #28
    25a0:	e1a06206 	lsl	r6, r6, #4
    25a4:	e1a03183 	lsl	r3, r3, #3
    25a8:	e1833ea2 	orr	r3, r3, r2, lsr #29
    25ac:	e1a02182 	lsl	r2, r2, #3
    25b0:	e1b0c22c 	lsrs	r12, r12, #4
    25b4:	1affffdb 	bne	2528 <__aeabi_ddiv+0x8c>
    25b8:	e3110601 	tst	r1, #1048576	; 0x100000
    25bc:	1a000006 	bne	25dc <__aeabi_ddiv+0x140>
    25c0:	e1811000 	orr	r1, r1, r0
    25c4:	e3a00000 	mov	r0, #0
    25c8:	e3a0c102 	mov	r12, #-2147483648	; 0x80000000
    25cc:	eaffffd5 	b	2528 <__aeabi_ddiv+0x8c>
    25d0:	e3110601 	tst	r1, #1048576	; 0x100000
    25d4:	01811000 	orreq	r1, r1, r0
    25d8:	03a00000 	moveq	r0, #0
    25dc:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    25e0:	835c0c07 	cmphi	r12, #1792	; 0x700
    25e4:	8affff43 	bhi	22f8 <__aeabi_dmul+0xec>
    25e8:	e055c003 	subs	r12, r5, r3
    25ec:	0056c002 	subseq	r12, r6, r2
    25f0:	01b0c0a0 	lsrseq	r12, r0, #1
    25f4:	e2b00000 	adcs	r0, r0, #0
    25f8:	e0a11a04 	adc	r1, r1, r4, lsl #20
    25fc:	e8bd4070 	pop	{r4, r5, r6, lr}
    2600:	e12fff1e 	bx	lr
    2604:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
    2608:	e18e1621 	orr	r1, lr, r1, lsr #12
    260c:	e09440ac 	adds	r4, r4, r12, lsr #1
    2610:	c074500c 	rsbsgt	r5, r4, r12
    2614:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    2618:	c8bd4070 	popgt	{r4, r5, r6, lr}
    261c:	c12fff1e 	bxgt	lr
    2620:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    2624:	e3a0e000 	mov	lr, #0
    2628:	e2544001 	subs	r4, r4, #1
    262c:	eaffff31 	b	22f8 <__aeabi_dmul+0xec>
    2630:	e185e006 	orr	lr, r5, r6
    2634:	eaffff2f 	b	22f8 <__aeabi_dmul+0xec>
    2638:	e00c5a23 	and	r5, r12, r3, lsr #20
    263c:	e134000c 	teq	r4, r12
    2640:	0135000c 	teqeq	r5, r12
    2644:	0affff90 	beq	248c <__aeabi_dmul+0x280>
    2648:	e134000c 	teq	r4, r12
    264c:	1a000006 	bne	266c <__aeabi_ddiv+0x1d0>
    2650:	e1904601 	orrs	r4, r0, r1, lsl #12
    2654:	1affff8c 	bne	248c <__aeabi_dmul+0x280>
    2658:	e135000c 	teq	r5, r12
    265c:	1affff83 	bne	2470 <__aeabi_dmul+0x264>
    2660:	e1a00002 	mov	r0, r2
    2664:	e1a01003 	mov	r1, r3
    2668:	eaffff87 	b	248c <__aeabi_dmul+0x280>
    266c:	e135000c 	teq	r5, r12
    2670:	1a000004 	bne	2688 <__aeabi_ddiv+0x1ec>
    2674:	e1925603 	orrs	r5, r2, r3, lsl #12
    2678:	0affff68 	beq	2420 <__aeabi_dmul+0x214>
    267c:	e1a00002 	mov	r0, r2
    2680:	e1a01003 	mov	r1, r3
    2684:	eaffff80 	b	248c <__aeabi_dmul+0x280>
    2688:	e1906081 	orrs	r6, r0, r1, lsl #1
    268c:	11926083 	orrsne	r6, r2, r3, lsl #1
    2690:	1affff48 	bne	23b8 <__aeabi_dmul+0x1ac>
    2694:	e1904081 	orrs	r4, r0, r1, lsl #1
    2698:	1affff74 	bne	2470 <__aeabi_dmul+0x264>
    269c:	e1925083 	orrs	r5, r2, r3, lsl #1
    26a0:	1affff5e 	bne	2420 <__aeabi_dmul+0x214>
    26a4:	eaffff78 	b	248c <__aeabi_dmul+0x280>

000026a8 <__aeabi_d2iz>:
    26a8:	e1a02081 	lsl	r2, r1, #1
    26ac:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    26b0:	2a00000c 	bcs	26e8 <__aeabi_d2iz+0x40>
    26b4:	5a000009 	bpl	26e0 <__aeabi_d2iz+0x38>
    26b8:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    26bc:	e0532ac2 	subs	r2, r3, r2, asr #21
    26c0:	9a00000a 	bls	26f0 <__aeabi_d2iz+0x48>
    26c4:	e1a03581 	lsl	r3, r1, #11
    26c8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    26cc:	e1833aa0 	orr	r3, r3, r0, lsr #21
    26d0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    26d4:	e1a00233 	lsr	r0, r3, r2
    26d8:	12600000 	rsbne	r0, r0, #0
    26dc:	e12fff1e 	bx	lr
    26e0:	e3a00000 	mov	r0, #0
    26e4:	e12fff1e 	bx	lr
    26e8:	e1900601 	orrs	r0, r0, r1, lsl #12
    26ec:	1a000002 	bne	26fc <__aeabi_d2iz+0x54>
    26f0:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
    26f4:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    26f8:	e12fff1e 	bx	lr
    26fc:	e3a00000 	mov	r0, #0
    2700:	e12fff1e 	bx	lr

00002704 <atexit>:
    2704:	e1a01000 	mov	r1, r0
    2708:	e3a00000 	mov	r0, #0
    270c:	e92d4008 	push	{r3, lr}
    2710:	e1a02000 	mov	r2, r0
    2714:	e1a03000 	mov	r3, r0
    2718:	eb0001f7 	bl	2efc <__register_exitproc>
    271c:	e8bd4008 	pop	{r3, lr}
    2720:	e12fff1e 	bx	lr

00002724 <exit>:
    2724:	e92d4008 	push	{r3, lr}
    2728:	e3a01000 	mov	r1, #0
    272c:	e1a04000 	mov	r4, r0
    2730:	eb00022e 	bl	2ff0 <__call_exitprocs>
    2734:	e59f3018 	ldr	r3, [pc, #24]	; 2754 <exit+0x30>
    2738:	e5930000 	ldr	r0, [r3]
    273c:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
    2740:	e3530000 	cmp	r3, #0
    2744:	11a0e00f 	movne	lr, pc
    2748:	112fff13 	bxne	r3
    274c:	e1a00004 	mov	r0, r4
    2750:	eb0003f3 	bl	3724 <_exit>
    2754:	00003858 	.word	0x00003858

00002758 <malloc>:
    2758:	e92d4008 	push	{r3, lr}
    275c:	e59f3010 	ldr	r3, [pc, #16]	; 2774 <malloc+0x1c>
    2760:	e1a01000 	mov	r1, r0
    2764:	e5930000 	ldr	r0, [r3]
    2768:	eb00000a 	bl	2798 <_malloc_r>
    276c:	e8bd4008 	pop	{r3, lr}
    2770:	e12fff1e 	bx	lr
    2774:	00032730 	.word	0x00032730

00002778 <free>:
    2778:	e92d4008 	push	{r3, lr}
    277c:	e59f3010 	ldr	r3, [pc, #16]	; 2794 <free+0x1c>
    2780:	e1a01000 	mov	r1, r0
    2784:	e5930000 	ldr	r0, [r3]
    2788:	eb0002d0 	bl	32d0 <_free_r>
    278c:	e8bd4008 	pop	{r3, lr}
    2790:	e12fff1e 	bx	lr
    2794:	00032730 	.word	0x00032730

00002798 <_malloc_r>:
    2798:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    279c:	e281500b 	add	r5, r1, #11
    27a0:	e3550016 	cmp	r5, #22
    27a4:	83c55007 	bichi	r5, r5, #7
    27a8:	81a03fa5 	lsrhi	r3, r5, #31
    27ac:	93a03000 	movls	r3, #0
    27b0:	93a05010 	movls	r5, #16
    27b4:	e1550001 	cmp	r5, r1
    27b8:	21a01003 	movcs	r1, r3
    27bc:	33831001 	orrcc	r1, r3, #1
    27c0:	e3510000 	cmp	r1, #0
    27c4:	13a0300c 	movne	r3, #12
    27c8:	e24dd00c 	sub	sp, sp, #12
    27cc:	e1a06000 	mov	r6, r0
    27d0:	15803000 	strne	r3, [r0]
    27d4:	13a04000 	movne	r4, #0
    27d8:	1a000015 	bne	2834 <_malloc_r+0x9c>
    27dc:	eb0001b4 	bl	2eb4 <__malloc_lock>
    27e0:	e3550f7e 	cmp	r5, #504	; 0x1f8
    27e4:	2a000016 	bcs	2844 <_malloc_r+0xac>
    27e8:	e59f76b8 	ldr	r7, [pc, #1720]	; 2ea8 <_malloc_r+0x710>
    27ec:	e1a0e1a5 	lsr	lr, r5, #3
    27f0:	e087318e 	add	r3, r7, lr, lsl #3
    27f4:	e593400c 	ldr	r4, [r3, #12]
    27f8:	e1540003 	cmp	r4, r3
    27fc:	0a00014b 	beq	2d30 <_malloc_r+0x598>
    2800:	e5943004 	ldr	r3, [r4, #4]
    2804:	e3c33003 	bic	r3, r3, #3
    2808:	e0843003 	add	r3, r4, r3
    280c:	e5930004 	ldr	r0, [r3, #4]
    2810:	e2841008 	add	r1, r4, #8
    2814:	e8910006 	ldm	r1, {r1, r2}
    2818:	e3800001 	orr	r0, r0, #1
    281c:	e5830004 	str	r0, [r3, #4]
    2820:	e581200c 	str	r2, [r1, #12]
    2824:	e5821008 	str	r1, [r2, #8]
    2828:	e1a00006 	mov	r0, r6
    282c:	eb0001a1 	bl	2eb8 <__malloc_unlock>
    2830:	e2844008 	add	r4, r4, #8
    2834:	e1a00004 	mov	r0, r4
    2838:	e28dd00c 	add	sp, sp, #12
    283c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2840:	e12fff1e 	bx	lr
    2844:	e1b0e4a5 	lsrs	lr, r5, #9
    2848:	01a0e1a5 	lsreq	lr, r5, #3
    284c:	01a0108e 	lsleq	r1, lr, #1
    2850:	1a000061 	bne	29dc <_malloc_r+0x244>
    2854:	e59f764c 	ldr	r7, [pc, #1612]	; 2ea8 <_malloc_r+0x710>
    2858:	e0871101 	add	r1, r7, r1, lsl #2
    285c:	e591400c 	ldr	r4, [r1, #12]
    2860:	e1510004 	cmp	r1, r4
    2864:	1a000005 	bne	2880 <_malloc_r+0xe8>
    2868:	ea00000a 	b	2898 <_malloc_r+0x100>
    286c:	e3530000 	cmp	r3, #0
    2870:	aa0000d7 	bge	2bd4 <_malloc_r+0x43c>
    2874:	e594400c 	ldr	r4, [r4, #12]
    2878:	e1510004 	cmp	r1, r4
    287c:	0a000005 	beq	2898 <_malloc_r+0x100>
    2880:	e5942004 	ldr	r2, [r4, #4]
    2884:	e3c22003 	bic	r2, r2, #3
    2888:	e0653002 	rsb	r3, r5, r2
    288c:	e353000f 	cmp	r3, #15
    2890:	dafffff5 	ble	286c <_malloc_r+0xd4>
    2894:	e24ee001 	sub	lr, lr, #1
    2898:	e28ee001 	add	lr, lr, #1
    289c:	e59f3604 	ldr	r3, [pc, #1540]	; 2ea8 <_malloc_r+0x710>
    28a0:	e5974010 	ldr	r4, [r7, #16]
    28a4:	e2838008 	add	r8, r3, #8
    28a8:	e1540008 	cmp	r4, r8
    28ac:	05931004 	ldreq	r1, [r3, #4]
    28b0:	0a000016 	beq	2910 <_malloc_r+0x178>
    28b4:	e5942004 	ldr	r2, [r4, #4]
    28b8:	e3c22003 	bic	r2, r2, #3
    28bc:	e0651002 	rsb	r1, r5, r2
    28c0:	e351000f 	cmp	r1, #15
    28c4:	ca0000f7 	bgt	2ca8 <_malloc_r+0x510>
    28c8:	e3510000 	cmp	r1, #0
    28cc:	e5838014 	str	r8, [r3, #20]
    28d0:	e5838010 	str	r8, [r3, #16]
    28d4:	aa000046 	bge	29f4 <_malloc_r+0x25c>
    28d8:	e3520c02 	cmp	r2, #512	; 0x200
    28dc:	2a0000d2 	bcs	2c2c <_malloc_r+0x494>
    28e0:	e5930004 	ldr	r0, [r3, #4]
    28e4:	e1a021a2 	lsr	r2, r2, #3
    28e8:	e1a01142 	asr	r1, r2, #2
    28ec:	e3a0c001 	mov	r12, #1
    28f0:	e180111c 	orr	r1, r0, r12, lsl r1
    28f4:	e0832182 	add	r2, r3, r2, lsl #3
    28f8:	e5920008 	ldr	r0, [r2, #8]
    28fc:	e584200c 	str	r2, [r4, #12]
    2900:	e5840008 	str	r0, [r4, #8]
    2904:	e5831004 	str	r1, [r3, #4]
    2908:	e5824008 	str	r4, [r2, #8]
    290c:	e580400c 	str	r4, [r0, #12]
    2910:	e1a0014e 	asr	r0, lr, #2
    2914:	e3a03001 	mov	r3, #1
    2918:	e1a00013 	lsl	r0, r3, r0
    291c:	e1500001 	cmp	r0, r1
    2920:	8a00003b 	bhi	2a14 <_malloc_r+0x27c>
    2924:	e1110000 	tst	r1, r0
    2928:	1a000008 	bne	2950 <_malloc_r+0x1b8>
    292c:	e1a00310 	lsl	r0, r0, r3
    2930:	e3cee003 	bic	lr, lr, #3
    2934:	e1110000 	tst	r1, r0
    2938:	e28ee004 	add	lr, lr, #4
    293c:	1a000003 	bne	2950 <_malloc_r+0x1b8>
    2940:	e1a00080 	lsl	r0, r0, #1
    2944:	e1110000 	tst	r1, r0
    2948:	e28ee004 	add	lr, lr, #4
    294c:	0afffffb 	beq	2940 <_malloc_r+0x1a8>
    2950:	e087a18e 	add	r10, r7, lr, lsl #3
    2954:	e1a0c00a 	mov	r12, r10
    2958:	e1a0400e 	mov	r4, lr
    295c:	e59c300c 	ldr	r3, [r12, #12]
    2960:	e15c0003 	cmp	r12, r3
    2964:	1a000005 	bne	2980 <_malloc_r+0x1e8>
    2968:	ea0000db 	b	2cdc <_malloc_r+0x544>
    296c:	e3520000 	cmp	r2, #0
    2970:	aa0000f4 	bge	2d48 <_malloc_r+0x5b0>
    2974:	e593300c 	ldr	r3, [r3, #12]
    2978:	e15c0003 	cmp	r12, r3
    297c:	0a0000d6 	beq	2cdc <_malloc_r+0x544>
    2980:	e5931004 	ldr	r1, [r3, #4]
    2984:	e3c11003 	bic	r1, r1, #3
    2988:	e0652001 	rsb	r2, r5, r1
    298c:	e352000f 	cmp	r2, #15
    2990:	dafffff5 	ble	296c <_malloc_r+0x1d4>
    2994:	e1a04003 	mov	r4, r3
    2998:	e593000c 	ldr	r0, [r3, #12]
    299c:	e5b4c008 	ldr	r12, [r4, #8]!
    29a0:	e0831005 	add	r1, r3, r5
    29a4:	e382e001 	orr	lr, r2, #1
    29a8:	e3855001 	orr	r5, r5, #1
    29ac:	e58c000c 	str	r0, [r12, #12]
    29b0:	e580c008 	str	r12, [r0, #8]
    29b4:	e5835004 	str	r5, [r3, #4]
    29b8:	e5871014 	str	r1, [r7, #20]
    29bc:	e5871010 	str	r1, [r7, #16]
    29c0:	e581800c 	str	r8, [r1, #12]
    29c4:	e5818008 	str	r8, [r1, #8]
    29c8:	e581e004 	str	lr, [r1, #4]
    29cc:	e7812002 	str	r2, [r1, r2]
    29d0:	e1a00006 	mov	r0, r6
    29d4:	eb000137 	bl	2eb8 <__malloc_unlock>
    29d8:	eaffff95 	b	2834 <_malloc_r+0x9c>
    29dc:	e35e0004 	cmp	lr, #4
    29e0:	8a000087 	bhi	2c04 <_malloc_r+0x46c>
    29e4:	e1a0e325 	lsr	lr, r5, #6
    29e8:	e28ee038 	add	lr, lr, #56	; 0x38
    29ec:	e1a0108e 	lsl	r1, lr, #1
    29f0:	eaffff97 	b	2854 <_malloc_r+0xbc>
    29f4:	e0842002 	add	r2, r4, r2
    29f8:	e5923004 	ldr	r3, [r2, #4]
    29fc:	e3833001 	orr	r3, r3, #1
    2a00:	e5823004 	str	r3, [r2, #4]
    2a04:	e1a00006 	mov	r0, r6
    2a08:	eb00012a 	bl	2eb8 <__malloc_unlock>
    2a0c:	e2844008 	add	r4, r4, #8
    2a10:	eaffff87 	b	2834 <_malloc_r+0x9c>
    2a14:	e5974008 	ldr	r4, [r7, #8]
    2a18:	e594a004 	ldr	r10, [r4, #4]
    2a1c:	e3caa003 	bic	r10, r10, #3
    2a20:	e155000a 	cmp	r5, r10
    2a24:	8a000002 	bhi	2a34 <_malloc_r+0x29c>
    2a28:	e065300a 	rsb	r3, r5, r10
    2a2c:	e353000f 	cmp	r3, #15
    2a30:	ca00005d 	bgt	2bac <_malloc_r+0x414>
    2a34:	e59f9470 	ldr	r9, [pc, #1136]	; 2eac <_malloc_r+0x714>
    2a38:	e5973408 	ldr	r3, [r7, #1032]	; 0x408
    2a3c:	e599b000 	ldr	r11, [r9]
    2a40:	e3730001 	cmn	r3, #1
    2a44:	e085b00b 	add	r11, r5, r11
    2a48:	128bba01 	addne	r11, r11, #4096	; 0x1000
    2a4c:	128bb00f 	addne	r11, r11, #15
    2a50:	13cbbeff 	bicne	r11, r11, #4080	; 0xff0
    2a54:	028bb010 	addeq	r11, r11, #16
    2a58:	13cbb00f 	bicne	r11, r11, #15
    2a5c:	e084200a 	add	r2, r4, r10
    2a60:	e1a00006 	mov	r0, r6
    2a64:	e1a0100b 	mov	r1, r11
    2a68:	e58d2004 	str	r2, [sp, #4]
    2a6c:	eb000112 	bl	2ebc <_sbrk_r>
    2a70:	e3700001 	cmn	r0, #1
    2a74:	e1a08000 	mov	r8, r0
    2a78:	e59d2004 	ldr	r2, [sp, #4]
    2a7c:	0a0000e2 	beq	2e0c <_malloc_r+0x674>
    2a80:	e1520000 	cmp	r2, r0
    2a84:	8a0000bf 	bhi	2d88 <_malloc_r+0x5f0>
    2a88:	e5993004 	ldr	r3, [r9, #4]
    2a8c:	e1520008 	cmp	r2, r8
    2a90:	e08b3003 	add	r3, r11, r3
    2a94:	e5893004 	str	r3, [r9, #4]
    2a98:	0a0000df 	beq	2e1c <_malloc_r+0x684>
    2a9c:	e5971408 	ldr	r1, [r7, #1032]	; 0x408
    2aa0:	e3710001 	cmn	r1, #1
    2aa4:	10622008 	rsbne	r2, r2, r8
    2aa8:	059f33f8 	ldreq	r3, [pc, #1016]	; 2ea8 <_malloc_r+0x710>
    2aac:	10833002 	addne	r3, r3, r2
    2ab0:	05838408 	streq	r8, [r3, #1032]	; 0x408
    2ab4:	15893004 	strne	r3, [r9, #4]
    2ab8:	e2183007 	ands	r3, r8, #7
    2abc:	12632008 	rsbne	r2, r3, #8
    2ac0:	10888002 	addne	r8, r8, r2
    2ac4:	12633a01 	rsbne	r3, r3, #4096	; 0x1000
    2ac8:	12832008 	addne	r2, r3, #8
    2acc:	e088300b 	add	r3, r8, r11
    2ad0:	03a02a01 	moveq	r2, #4096	; 0x1000
    2ad4:	e1a03a03 	lsl	r3, r3, #20
    2ad8:	e042ba23 	sub	r11, r2, r3, lsr #20
    2adc:	e1a0100b 	mov	r1, r11
    2ae0:	e1a00006 	mov	r0, r6
    2ae4:	eb0000f4 	bl	2ebc <_sbrk_r>
    2ae8:	e3700001 	cmn	r0, #1
    2aec:	10682000 	rsbne	r2, r8, r0
    2af0:	e5993004 	ldr	r3, [r9, #4]
    2af4:	108b2002 	addne	r2, r11, r2
    2af8:	03a0b000 	moveq	r11, #0
    2afc:	13822001 	orrne	r2, r2, #1
    2b00:	03a02001 	moveq	r2, #1
    2b04:	e08b3003 	add	r3, r11, r3
    2b08:	e1540007 	cmp	r4, r7
    2b0c:	e5893004 	str	r3, [r9, #4]
    2b10:	e5878008 	str	r8, [r7, #8]
    2b14:	e5882004 	str	r2, [r8, #4]
    2b18:	0a00000d 	beq	2b54 <_malloc_r+0x3bc>
    2b1c:	e35a000f 	cmp	r10, #15
    2b20:	9a0000ac 	bls	2dd8 <_malloc_r+0x640>
    2b24:	e594c004 	ldr	r12, [r4, #4]
    2b28:	e24a200c 	sub	r2, r10, #12
    2b2c:	e3c22007 	bic	r2, r2, #7
    2b30:	e20cc001 	and	r12, r12, #1
    2b34:	e0841002 	add	r1, r4, r2
    2b38:	e3a00005 	mov	r0, #5
    2b3c:	e182c00c 	orr	r12, r2, r12
    2b40:	e352000f 	cmp	r2, #15
    2b44:	e584c004 	str	r12, [r4, #4]
    2b48:	e5810004 	str	r0, [r1, #4]
    2b4c:	e5810008 	str	r0, [r1, #8]
    2b50:	8a0000b8 	bhi	2e38 <_malloc_r+0x6a0>
    2b54:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
    2b58:	e1530002 	cmp	r3, r2
    2b5c:	859f2348 	ldrhi	r2, [pc, #840]	; 2eac <_malloc_r+0x714>
    2b60:	8582302c 	strhi	r3, [r2, #44]	; 0x2c
    2b64:	e5992030 	ldr	r2, [r9, #48]	; 0x30
    2b68:	e5974008 	ldr	r4, [r7, #8]
    2b6c:	e1530002 	cmp	r3, r2
    2b70:	95943004 	ldrls	r3, [r4, #4]
    2b74:	85942004 	ldrhi	r2, [r4, #4]
    2b78:	859f132c 	ldrhi	r1, [pc, #812]	; 2eac <_malloc_r+0x714>
    2b7c:	93c33003 	bicls	r3, r3, #3
    2b80:	85813030 	strhi	r3, [r1, #48]	; 0x30
    2b84:	83c23003 	bichi	r3, r2, #3
    2b88:	e1550003 	cmp	r5, r3
    2b8c:	e0653003 	rsb	r3, r5, r3
    2b90:	8a000001 	bhi	2b9c <_malloc_r+0x404>
    2b94:	e353000f 	cmp	r3, #15
    2b98:	ca000003 	bgt	2bac <_malloc_r+0x414>
    2b9c:	e1a00006 	mov	r0, r6
    2ba0:	eb0000c4 	bl	2eb8 <__malloc_unlock>
    2ba4:	e3a04000 	mov	r4, #0
    2ba8:	eaffff21 	b	2834 <_malloc_r+0x9c>
    2bac:	e0842005 	add	r2, r4, r5
    2bb0:	e3833001 	orr	r3, r3, #1
    2bb4:	e3855001 	orr	r5, r5, #1
    2bb8:	e5845004 	str	r5, [r4, #4]
    2bbc:	e1a00006 	mov	r0, r6
    2bc0:	e5823004 	str	r3, [r2, #4]
    2bc4:	e5872008 	str	r2, [r7, #8]
    2bc8:	e2844008 	add	r4, r4, #8
    2bcc:	eb0000b9 	bl	2eb8 <__malloc_unlock>
    2bd0:	eaffff17 	b	2834 <_malloc_r+0x9c>
    2bd4:	e0842002 	add	r2, r4, r2
    2bd8:	e5920004 	ldr	r0, [r2, #4]
    2bdc:	e2841008 	add	r1, r4, #8
    2be0:	e891000a 	ldm	r1, {r1, r3}
    2be4:	e3800001 	orr	r0, r0, #1
    2be8:	e5820004 	str	r0, [r2, #4]
    2bec:	e581300c 	str	r3, [r1, #12]
    2bf0:	e5831008 	str	r1, [r3, #8]
    2bf4:	e1a00006 	mov	r0, r6
    2bf8:	eb0000ae 	bl	2eb8 <__malloc_unlock>
    2bfc:	e2844008 	add	r4, r4, #8
    2c00:	eaffff0b 	b	2834 <_malloc_r+0x9c>
    2c04:	e35e0014 	cmp	lr, #20
    2c08:	928ee05b 	addls	lr, lr, #91	; 0x5b
    2c0c:	91a0108e 	lslls	r1, lr, #1
    2c10:	9affff0f 	bls	2854 <_malloc_r+0xbc>
    2c14:	e35e0054 	cmp	lr, #84	; 0x54
    2c18:	8a000061 	bhi	2da4 <_malloc_r+0x60c>
    2c1c:	e1a0e625 	lsr	lr, r5, #12
    2c20:	e28ee06e 	add	lr, lr, #110	; 0x6e
    2c24:	e1a0108e 	lsl	r1, lr, #1
    2c28:	eaffff09 	b	2854 <_malloc_r+0xbc>
    2c2c:	e1a034a2 	lsr	r3, r2, #9
    2c30:	e3530004 	cmp	r3, #4
    2c34:	9a00004f 	bls	2d78 <_malloc_r+0x5e0>
    2c38:	e3530014 	cmp	r3, #20
    2c3c:	9283a05b 	addls	r10, r3, #91	; 0x5b
    2c40:	91a0008a 	lslls	r0, r10, #1
    2c44:	9a000004 	bls	2c5c <_malloc_r+0x4c4>
    2c48:	e3530054 	cmp	r3, #84	; 0x54
    2c4c:	8a00007f 	bhi	2e50 <_malloc_r+0x6b8>
    2c50:	e1a0a622 	lsr	r10, r2, #12
    2c54:	e28aa06e 	add	r10, r10, #110	; 0x6e
    2c58:	e1a0008a 	lsl	r0, r10, #1
    2c5c:	e0870100 	add	r0, r7, r0, lsl #2
    2c60:	e5903008 	ldr	r3, [r0, #8]
    2c64:	e1530000 	cmp	r3, r0
    2c68:	e59fc238 	ldr	r12, [pc, #568]	; 2ea8 <_malloc_r+0x710>
    2c6c:	0a000052 	beq	2dbc <_malloc_r+0x624>
    2c70:	e5931004 	ldr	r1, [r3, #4]
    2c74:	e3c11003 	bic	r1, r1, #3
    2c78:	e1520001 	cmp	r2, r1
    2c7c:	2a000002 	bcs	2c8c <_malloc_r+0x4f4>
    2c80:	e5933008 	ldr	r3, [r3, #8]
    2c84:	e1500003 	cmp	r0, r3
    2c88:	1afffff8 	bne	2c70 <_malloc_r+0x4d8>
    2c8c:	e593200c 	ldr	r2, [r3, #12]
    2c90:	e5971004 	ldr	r1, [r7, #4]
    2c94:	e584200c 	str	r2, [r4, #12]
    2c98:	e5843008 	str	r3, [r4, #8]
    2c9c:	e583400c 	str	r4, [r3, #12]
    2ca0:	e5824008 	str	r4, [r2, #8]
    2ca4:	eaffff19 	b	2910 <_malloc_r+0x178>
    2ca8:	e0842005 	add	r2, r4, r5
    2cac:	e3810001 	orr	r0, r1, #1
    2cb0:	e3855001 	orr	r5, r5, #1
    2cb4:	e5845004 	str	r5, [r4, #4]
    2cb8:	e5832014 	str	r2, [r3, #20]
    2cbc:	e5832010 	str	r2, [r3, #16]
    2cc0:	e582800c 	str	r8, [r2, #12]
    2cc4:	e9820101 	stmib	r2, {r0, r8}
    2cc8:	e7821001 	str	r1, [r2, r1]
    2ccc:	e1a00006 	mov	r0, r6
    2cd0:	eb000078 	bl	2eb8 <__malloc_unlock>
    2cd4:	e2844008 	add	r4, r4, #8
    2cd8:	eafffed5 	b	2834 <_malloc_r+0x9c>
    2cdc:	e2844001 	add	r4, r4, #1
    2ce0:	e3140003 	tst	r4, #3
    2ce4:	e28cc008 	add	r12, r12, #8
    2ce8:	1affff1b 	bne	295c <_malloc_r+0x1c4>
    2cec:	e31e0003 	tst	lr, #3
    2cf0:	e24a3008 	sub	r3, r10, #8
    2cf4:	0a000062 	beq	2e84 <_malloc_r+0x6ec>
    2cf8:	e59aa000 	ldr	r10, [r10]
    2cfc:	e15a0003 	cmp	r10, r3
    2d00:	e24ee001 	sub	lr, lr, #1
    2d04:	0afffff8 	beq	2cec <_malloc_r+0x554>
    2d08:	e5973004 	ldr	r3, [r7, #4]
    2d0c:	e1a00080 	lsl	r0, r0, #1
    2d10:	e1500003 	cmp	r0, r3
    2d14:	8affff3e 	bhi	2a14 <_malloc_r+0x27c>
    2d18:	e3500000 	cmp	r0, #0
    2d1c:	0affff3c 	beq	2a14 <_malloc_r+0x27c>
    2d20:	e1130000 	tst	r3, r0
    2d24:	0a00005a 	beq	2e94 <_malloc_r+0x6fc>
    2d28:	e1a0e004 	mov	lr, r4
    2d2c:	eaffff07 	b	2950 <_malloc_r+0x1b8>
    2d30:	e2843008 	add	r3, r4, #8
    2d34:	e5944014 	ldr	r4, [r4, #20]
    2d38:	e1530004 	cmp	r3, r4
    2d3c:	028ee002 	addeq	lr, lr, #2
    2d40:	0afffed5 	beq	289c <_malloc_r+0x104>
    2d44:	eafffead 	b	2800 <_malloc_r+0x68>
    2d48:	e0831001 	add	r1, r3, r1
    2d4c:	e5910004 	ldr	r0, [r1, #4]
    2d50:	e1a04003 	mov	r4, r3
    2d54:	e5b42008 	ldr	r2, [r4, #8]!
    2d58:	e593300c 	ldr	r3, [r3, #12]
    2d5c:	e3800001 	orr	r0, r0, #1
    2d60:	e5810004 	str	r0, [r1, #4]
    2d64:	e582300c 	str	r3, [r2, #12]
    2d68:	e5832008 	str	r2, [r3, #8]
    2d6c:	e1a00006 	mov	r0, r6
    2d70:	eb000050 	bl	2eb8 <__malloc_unlock>
    2d74:	eafffeae 	b	2834 <_malloc_r+0x9c>
    2d78:	e1a0a322 	lsr	r10, r2, #6
    2d7c:	e28aa038 	add	r10, r10, #56	; 0x38
    2d80:	e1a0008a 	lsl	r0, r10, #1
    2d84:	eaffffb4 	b	2c5c <_malloc_r+0x4c4>
    2d88:	e1540007 	cmp	r4, r7
    2d8c:	0affff3d 	beq	2a88 <_malloc_r+0x2f0>
    2d90:	e59f3110 	ldr	r3, [pc, #272]	; 2ea8 <_malloc_r+0x710>
    2d94:	e5934008 	ldr	r4, [r3, #8]
    2d98:	e5943004 	ldr	r3, [r4, #4]
    2d9c:	e3c33003 	bic	r3, r3, #3
    2da0:	eaffff78 	b	2b88 <_malloc_r+0x3f0>
    2da4:	e35e0f55 	cmp	lr, #340	; 0x154
    2da8:	8a00000f 	bhi	2dec <_malloc_r+0x654>
    2dac:	e1a0e7a5 	lsr	lr, r5, #15
    2db0:	e28ee077 	add	lr, lr, #119	; 0x77
    2db4:	e1a0108e 	lsl	r1, lr, #1
    2db8:	eafffea5 	b	2854 <_malloc_r+0xbc>
    2dbc:	e59c2004 	ldr	r2, [r12, #4]
    2dc0:	e1a0a14a 	asr	r10, r10, #2
    2dc4:	e3a01001 	mov	r1, #1
    2dc8:	e1821a11 	orr	r1, r2, r1, lsl r10
    2dcc:	e1a02003 	mov	r2, r3
    2dd0:	e58c1004 	str	r1, [r12, #4]
    2dd4:	eaffffae 	b	2c94 <_malloc_r+0x4fc>
    2dd8:	e3a03001 	mov	r3, #1
    2ddc:	e5883004 	str	r3, [r8, #4]
    2de0:	e1a04008 	mov	r4, r8
    2de4:	e3a03000 	mov	r3, #0
    2de8:	eaffff66 	b	2b88 <_malloc_r+0x3f0>
    2dec:	e59f30bc 	ldr	r3, [pc, #188]	; 2eb0 <_malloc_r+0x718>
    2df0:	e15e0003 	cmp	lr, r3
    2df4:	91a0e925 	lsrls	lr, r5, #18
    2df8:	928ee07c 	addls	lr, lr, #124	; 0x7c
    2dfc:	91a0108e 	lslls	r1, lr, #1
    2e00:	83a010fc 	movhi	r1, #252	; 0xfc
    2e04:	83a0e07e 	movhi	lr, #126	; 0x7e
    2e08:	eafffe91 	b	2854 <_malloc_r+0xbc>
    2e0c:	e5974008 	ldr	r4, [r7, #8]
    2e10:	e5943004 	ldr	r3, [r4, #4]
    2e14:	e3c33003 	bic	r3, r3, #3
    2e18:	eaffff5a 	b	2b88 <_malloc_r+0x3f0>
    2e1c:	e1b01a02 	lsls	r1, r2, #20
    2e20:	1affff1d 	bne	2a9c <_malloc_r+0x304>
    2e24:	e5972008 	ldr	r2, [r7, #8]
    2e28:	e08b100a 	add	r1, r11, r10
    2e2c:	e3811001 	orr	r1, r1, #1
    2e30:	e5821004 	str	r1, [r2, #4]
    2e34:	eaffff46 	b	2b54 <_malloc_r+0x3bc>
    2e38:	e1a00006 	mov	r0, r6
    2e3c:	e2841008 	add	r1, r4, #8
    2e40:	eb000122 	bl	32d0 <_free_r>
    2e44:	e59f3060 	ldr	r3, [pc, #96]	; 2eac <_malloc_r+0x714>
    2e48:	e5933004 	ldr	r3, [r3, #4]
    2e4c:	eaffff40 	b	2b54 <_malloc_r+0x3bc>
    2e50:	e3530f55 	cmp	r3, #340	; 0x154
    2e54:	91a0a7a2 	lsrls	r10, r2, #15
    2e58:	928aa077 	addls	r10, r10, #119	; 0x77
    2e5c:	91a0008a 	lslls	r0, r10, #1
    2e60:	9affff7d 	bls	2c5c <_malloc_r+0x4c4>
    2e64:	e59f1044 	ldr	r1, [pc, #68]	; 2eb0 <_malloc_r+0x718>
    2e68:	e1530001 	cmp	r3, r1
    2e6c:	91a0a922 	lsrls	r10, r2, #18
    2e70:	928aa07c 	addls	r10, r10, #124	; 0x7c
    2e74:	91a0008a 	lslls	r0, r10, #1
    2e78:	83a000fc 	movhi	r0, #252	; 0xfc
    2e7c:	83a0a07e 	movhi	r10, #126	; 0x7e
    2e80:	eaffff75 	b	2c5c <_malloc_r+0x4c4>
    2e84:	e5973004 	ldr	r3, [r7, #4]
    2e88:	e1c33000 	bic	r3, r3, r0
    2e8c:	e5873004 	str	r3, [r7, #4]
    2e90:	eaffff9d 	b	2d0c <_malloc_r+0x574>
    2e94:	e1a00080 	lsl	r0, r0, #1
    2e98:	e1130000 	tst	r3, r0
    2e9c:	e2844004 	add	r4, r4, #4
    2ea0:	1affffa0 	bne	2d28 <_malloc_r+0x590>
    2ea4:	eafffffa 	b	2e94 <_malloc_r+0x6fc>
    2ea8:	00032b60 	.word	0x00032b60
    2eac:	001a9f94 	.word	0x001a9f94
    2eb0:	00000554 	.word	0x00000554

00002eb4 <__malloc_lock>:
    2eb4:	e12fff1e 	bx	lr

00002eb8 <__malloc_unlock>:
    2eb8:	e12fff1e 	bx	lr

00002ebc <_sbrk_r>:
    2ebc:	e92d4038 	push	{r3, r4, r5, lr}
    2ec0:	e59f4030 	ldr	r4, [pc, #48]	; 2ef8 <_sbrk_r+0x3c>
    2ec4:	e3a03000 	mov	r3, #0
    2ec8:	e1a05000 	mov	r5, r0
    2ecc:	e1a00001 	mov	r0, r1
    2ed0:	e5843000 	str	r3, [r4]
    2ed4:	eb000218 	bl	373c <_sbrk>
    2ed8:	e3700001 	cmn	r0, #1
    2edc:	0a000001 	beq	2ee8 <_sbrk_r+0x2c>
    2ee0:	e8bd4038 	pop	{r3, r4, r5, lr}
    2ee4:	e12fff1e 	bx	lr
    2ee8:	e5943000 	ldr	r3, [r4]
    2eec:	e3530000 	cmp	r3, #0
    2ef0:	15853000 	strne	r3, [r5]
    2ef4:	eafffff9 	b	2ee0 <_sbrk_r+0x24>
    2ef8:	001a9fc8 	.word	0x001a9fc8

00002efc <__register_exitproc>:
    2efc:	e59fc0e4 	ldr	r12, [pc, #228]	; 2fe8 <__register_exitproc+0xec>
    2f00:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    2f04:	e59c4000 	ldr	r4, [r12]
    2f08:	e594c148 	ldr	r12, [r4, #328]	; 0x148
    2f0c:	e35c0000 	cmp	r12, #0
    2f10:	0284cf53 	addeq	r12, r4, #332	; 0x14c
    2f14:	e59c5004 	ldr	r5, [r12, #4]
    2f18:	0584c148 	streq	r12, [r4, #328]	; 0x148
    2f1c:	e355001f 	cmp	r5, #31
    2f20:	e24dd010 	sub	sp, sp, #16
    2f24:	e1a06000 	mov	r6, r0
    2f28:	da000015 	ble	2f84 <__register_exitproc+0x88>
    2f2c:	e59f00b8 	ldr	r0, [pc, #184]	; 2fec <__register_exitproc+0xf0>
    2f30:	e3500000 	cmp	r0, #0
    2f34:	1a000001 	bne	2f40 <__register_exitproc+0x44>
    2f38:	e3e00000 	mvn	r0, #0
    2f3c:	ea000018 	b	2fa4 <__register_exitproc+0xa8>
    2f40:	e3a00e19 	mov	r0, #400	; 0x190
    2f44:	e58d100c 	str	r1, [sp, #12]
    2f48:	e58d2008 	str	r2, [sp, #8]
    2f4c:	e58d3004 	str	r3, [sp, #4]
    2f50:	ebfffe00 	bl	2758 <malloc>
    2f54:	e250c000 	subs	r12, r0, #0
    2f58:	e59d100c 	ldr	r1, [sp, #12]
    2f5c:	e59d2008 	ldr	r2, [sp, #8]
    2f60:	e59d3004 	ldr	r3, [sp, #4]
    2f64:	0afffff3 	beq	2f38 <__register_exitproc+0x3c>
    2f68:	e5945148 	ldr	r5, [r4, #328]	; 0x148
    2f6c:	e3a00000 	mov	r0, #0
    2f70:	e58c0004 	str	r0, [r12, #4]
    2f74:	e58c5000 	str	r5, [r12]
    2f78:	e584c148 	str	r12, [r4, #328]	; 0x148
    2f7c:	e58c0188 	str	r0, [r12, #392]	; 0x188
    2f80:	e58c018c 	str	r0, [r12, #396]	; 0x18c
    2f84:	e3560000 	cmp	r6, #0
    2f88:	e59c4004 	ldr	r4, [r12, #4]
    2f8c:	1a000007 	bne	2fb0 <__register_exitproc+0xb4>
    2f90:	e2843002 	add	r3, r4, #2
    2f94:	e2844001 	add	r4, r4, #1
    2f98:	e78c1103 	str	r1, [r12, r3, lsl #2]
    2f9c:	e58c4004 	str	r4, [r12, #4]
    2fa0:	e3a00000 	mov	r0, #0
    2fa4:	e28dd010 	add	sp, sp, #16
    2fa8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    2fac:	e12fff1e 	bx	lr
    2fb0:	e3a00001 	mov	r0, #1
    2fb4:	e1a00410 	lsl	r0, r0, r4
    2fb8:	e08c8104 	add	r8, r12, r4, lsl #2
    2fbc:	e3560002 	cmp	r6, #2
    2fc0:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
    2fc4:	e5883108 	str	r3, [r8, #264]	; 0x108
    2fc8:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
    2fcc:	e1877000 	orr	r7, r7, r0
    2fd0:	01830000 	orreq	r0, r3, r0
    2fd4:	e1a05008 	mov	r5, r8
    2fd8:	e5882088 	str	r2, [r8, #136]	; 0x88
    2fdc:	e58c7188 	str	r7, [r12, #392]	; 0x188
    2fe0:	058c018c 	streq	r0, [r12, #396]	; 0x18c
    2fe4:	eaffffe9 	b	2f90 <__register_exitproc+0x94>
    2fe8:	00003858 	.word	0x00003858
    2fec:	00002758 	.word	0x00002758

00002ff0 <__call_exitprocs>:
    2ff0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2ff4:	e59f3168 	ldr	r3, [pc, #360]	; 3164 <__call_exitprocs+0x174>
    2ff8:	e5933000 	ldr	r3, [r3]
    2ffc:	e24dd014 	sub	sp, sp, #20
    3000:	e58d3004 	str	r3, [sp, #4]
    3004:	e2833f52 	add	r3, r3, #328	; 0x148
    3008:	e58d0008 	str	r0, [sp, #8]
    300c:	e58d300c 	str	r3, [sp, #12]
    3010:	e1a07001 	mov	r7, r1
    3014:	e3a08001 	mov	r8, #1
    3018:	e59d3004 	ldr	r3, [sp, #4]
    301c:	e5936148 	ldr	r6, [r3, #328]	; 0x148
    3020:	e3560000 	cmp	r6, #0
    3024:	e59db00c 	ldr	r11, [sp, #12]
    3028:	0a000033 	beq	30fc <__call_exitprocs+0x10c>
    302c:	e5965004 	ldr	r5, [r6, #4]
    3030:	e2554001 	subs	r4, r5, #1
    3034:	5286a088 	addpl	r10, r6, #136	; 0x88
    3038:	5285501f 	addpl	r5, r5, #31
    303c:	508a5105 	addpl	r5, r10, r5, lsl #2
    3040:	5a000007 	bpl	3064 <__call_exitprocs+0x74>
    3044:	ea000029 	b	30f0 <__call_exitprocs+0x100>
    3048:	e5953000 	ldr	r3, [r5]
    304c:	e1530007 	cmp	r3, r7
    3050:	0a000005 	beq	306c <__call_exitprocs+0x7c>
    3054:	e2444001 	sub	r4, r4, #1
    3058:	e3740001 	cmn	r4, #1
    305c:	e2455004 	sub	r5, r5, #4
    3060:	0a000022 	beq	30f0 <__call_exitprocs+0x100>
    3064:	e3570000 	cmp	r7, #0
    3068:	1afffff6 	bne	3048 <__call_exitprocs+0x58>
    306c:	e5963004 	ldr	r3, [r6, #4]
    3070:	e06a2005 	rsb	r2, r10, r5
    3074:	e2433001 	sub	r3, r3, #1
    3078:	e0862002 	add	r2, r6, r2
    307c:	e1530004 	cmp	r3, r4
    3080:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
    3084:	13a01000 	movne	r1, #0
    3088:	05864004 	streq	r4, [r6, #4]
    308c:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
    3090:	e3530000 	cmp	r3, #0
    3094:	0affffee 	beq	3054 <__call_exitprocs+0x64>
    3098:	e1a02418 	lsl	r2, r8, r4
    309c:	e5961188 	ldr	r1, [r6, #392]	; 0x188
    30a0:	e1120001 	tst	r2, r1
    30a4:	e5969004 	ldr	r9, [r6, #4]
    30a8:	0a000016 	beq	3108 <__call_exitprocs+0x118>
    30ac:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
    30b0:	e1120001 	tst	r2, r1
    30b4:	1a000016 	bne	3114 <__call_exitprocs+0x124>
    30b8:	e59d0008 	ldr	r0, [sp, #8]
    30bc:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
    30c0:	e1a0e00f 	mov	lr, pc
    30c4:	e12fff13 	bx	r3
    30c8:	e5963004 	ldr	r3, [r6, #4]
    30cc:	e1530009 	cmp	r3, r9
    30d0:	1affffd0 	bne	3018 <__call_exitprocs+0x28>
    30d4:	e59b3000 	ldr	r3, [r11]
    30d8:	e1530006 	cmp	r3, r6
    30dc:	1affffcd 	bne	3018 <__call_exitprocs+0x28>
    30e0:	e2444001 	sub	r4, r4, #1
    30e4:	e3740001 	cmn	r4, #1
    30e8:	e2455004 	sub	r5, r5, #4
    30ec:	1affffdc 	bne	3064 <__call_exitprocs+0x74>
    30f0:	e59f1070 	ldr	r1, [pc, #112]	; 3168 <__call_exitprocs+0x178>
    30f4:	e3510000 	cmp	r1, #0
    30f8:	1a000009 	bne	3124 <__call_exitprocs+0x134>
    30fc:	e28dd014 	add	sp, sp, #20
    3100:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3104:	e12fff1e 	bx	lr
    3108:	e1a0e00f 	mov	lr, pc
    310c:	e12fff13 	bx	r3
    3110:	eaffffec 	b	30c8 <__call_exitprocs+0xd8>
    3114:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
    3118:	e1a0e00f 	mov	lr, pc
    311c:	e12fff13 	bx	r3
    3120:	eaffffe8 	b	30c8 <__call_exitprocs+0xd8>
    3124:	e5963004 	ldr	r3, [r6, #4]
    3128:	e3530000 	cmp	r3, #0
    312c:	e5963000 	ldr	r3, [r6]
    3130:	1a000008 	bne	3158 <__call_exitprocs+0x168>
    3134:	e3530000 	cmp	r3, #0
    3138:	0a000006 	beq	3158 <__call_exitprocs+0x168>
    313c:	e1a00006 	mov	r0, r6
    3140:	e58b3000 	str	r3, [r11]
    3144:	ebfffd8b 	bl	2778 <free>
    3148:	e59b6000 	ldr	r6, [r11]
    314c:	e3560000 	cmp	r6, #0
    3150:	1affffb5 	bne	302c <__call_exitprocs+0x3c>
    3154:	eaffffe8 	b	30fc <__call_exitprocs+0x10c>
    3158:	e1a0b006 	mov	r11, r6
    315c:	e1a06003 	mov	r6, r3
    3160:	eafffff9 	b	314c <__call_exitprocs+0x15c>
    3164:	00003858 	.word	0x00003858
    3168:	00002778 	.word	0x00002778

0000316c <register_fini>:
    316c:	e92d4008 	push	{r3, lr}
    3170:	e59f3010 	ldr	r3, [pc, #16]	; 3188 <register_fini+0x1c>
    3174:	e3530000 	cmp	r3, #0
    3178:	159f000c 	ldrne	r0, [pc, #12]	; 318c <register_fini+0x20>
    317c:	1bfffd60 	blne	2704 <atexit>
    3180:	e8bd4008 	pop	{r3, lr}
    3184:	e12fff1e 	bx	lr
    3188:	00003880 	.word	0x00003880
    318c:	00003190 	.word	0x00003190

00003190 <__libc_fini_array>:
    3190:	e92d4038 	push	{r3, r4, r5, lr}
    3194:	e59f5030 	ldr	r5, [pc, #48]	; 31cc <__libc_fini_array+0x3c>
    3198:	e59f4030 	ldr	r4, [pc, #48]	; 31d0 <__libc_fini_array+0x40>
    319c:	e0654004 	rsb	r4, r5, r4
    31a0:	e1b04144 	asrs	r4, r4, #2
    31a4:	10855104 	addne	r5, r5, r4, lsl #2
    31a8:	0a000004 	beq	31c0 <__libc_fini_array+0x30>
    31ac:	e5353004 	ldr	r3, [r5, #-4]!
    31b0:	e1a0e00f 	mov	lr, pc
    31b4:	e12fff13 	bx	r3
    31b8:	e2544001 	subs	r4, r4, #1
    31bc:	1afffffa 	bne	31ac <__libc_fini_array+0x1c>
    31c0:	eb0001ae 	bl	3880 <__libc_fini>
    31c4:	e8bd4038 	pop	{r3, r4, r5, lr}
    31c8:	e12fff1e 	bx	lr
    31cc:	00003898 	.word	0x00003898
    31d0:	0000389c 	.word	0x0000389c

000031d4 <_malloc_trim_r>:
    31d4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    31d8:	e59f50e4 	ldr	r5, [pc, #228]	; 32c4 <_malloc_trim_r+0xf0>
    31dc:	e1a07001 	mov	r7, r1
    31e0:	e1a04000 	mov	r4, r0
    31e4:	ebffff32 	bl	2eb4 <__malloc_lock>
    31e8:	e5953008 	ldr	r3, [r5, #8]
    31ec:	e5936004 	ldr	r6, [r3, #4]
    31f0:	e3c66003 	bic	r6, r6, #3
    31f4:	e2863efe 	add	r3, r6, #4064	; 0xfe0
    31f8:	e283300f 	add	r3, r3, #15
    31fc:	e0677003 	rsb	r7, r7, r3
    3200:	e1a07627 	lsr	r7, r7, #12
    3204:	e2477001 	sub	r7, r7, #1
    3208:	e1a07607 	lsl	r7, r7, #12
    320c:	e3570a01 	cmp	r7, #4096	; 0x1000
    3210:	ba000006 	blt	3230 <_malloc_trim_r+0x5c>
    3214:	e1a00004 	mov	r0, r4
    3218:	e3a01000 	mov	r1, #0
    321c:	ebffff26 	bl	2ebc <_sbrk_r>
    3220:	e5953008 	ldr	r3, [r5, #8]
    3224:	e0833006 	add	r3, r3, r6
    3228:	e1500003 	cmp	r0, r3
    322c:	0a000004 	beq	3244 <_malloc_trim_r+0x70>
    3230:	e1a00004 	mov	r0, r4
    3234:	ebffff1f 	bl	2eb8 <__malloc_unlock>
    3238:	e3a00000 	mov	r0, #0
    323c:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    3240:	e12fff1e 	bx	lr
    3244:	e1a00004 	mov	r0, r4
    3248:	e2671000 	rsb	r1, r7, #0
    324c:	ebffff1a 	bl	2ebc <_sbrk_r>
    3250:	e3700001 	cmn	r0, #1
    3254:	0a00000b 	beq	3288 <_malloc_trim_r+0xb4>
    3258:	e59f3068 	ldr	r3, [pc, #104]	; 32c8 <_malloc_trim_r+0xf4>
    325c:	e5952008 	ldr	r2, [r5, #8]
    3260:	e5931000 	ldr	r1, [r3]
    3264:	e0676006 	rsb	r6, r7, r6
    3268:	e3866001 	orr	r6, r6, #1
    326c:	e0677001 	rsb	r7, r7, r1
    3270:	e1a00004 	mov	r0, r4
    3274:	e5826004 	str	r6, [r2, #4]
    3278:	e5837000 	str	r7, [r3]
    327c:	ebffff0d 	bl	2eb8 <__malloc_unlock>
    3280:	e3a00001 	mov	r0, #1
    3284:	eaffffec 	b	323c <_malloc_trim_r+0x68>
    3288:	e1a00004 	mov	r0, r4
    328c:	e3a01000 	mov	r1, #0
    3290:	ebffff09 	bl	2ebc <_sbrk_r>
    3294:	e5953008 	ldr	r3, [r5, #8]
    3298:	e0632000 	rsb	r2, r3, r0
    329c:	e352000f 	cmp	r2, #15
    32a0:	daffffe2 	ble	3230 <_malloc_trim_r+0x5c>
    32a4:	e59f1020 	ldr	r1, [pc, #32]	; 32cc <_malloc_trim_r+0xf8>
    32a8:	e5911000 	ldr	r1, [r1]
    32ac:	e0610000 	rsb	r0, r1, r0
    32b0:	e59f1010 	ldr	r1, [pc, #16]	; 32c8 <_malloc_trim_r+0xf4>
    32b4:	e3822001 	orr	r2, r2, #1
    32b8:	e5810000 	str	r0, [r1]
    32bc:	e5832004 	str	r2, [r3, #4]
    32c0:	eaffffda 	b	3230 <_malloc_trim_r+0x5c>
    32c4:	00032b60 	.word	0x00032b60
    32c8:	001a9f98 	.word	0x001a9f98
    32cc:	00032f68 	.word	0x00032f68

000032d0 <_free_r>:
    32d0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    32d4:	e2514000 	subs	r4, r1, #0
    32d8:	e1a06000 	mov	r6, r0
    32dc:	0a000046 	beq	33fc <_free_r+0x12c>
    32e0:	ebfffef3 	bl	2eb4 <__malloc_lock>
    32e4:	e514e004 	ldr	lr, [r4, #-4]
    32e8:	e59f1238 	ldr	r1, [pc, #568]	; 3528 <_free_r+0x258>
    32ec:	e244c008 	sub	r12, r4, #8
    32f0:	e3ce3001 	bic	r3, lr, #1
    32f4:	e08c2003 	add	r2, r12, r3
    32f8:	e5910008 	ldr	r0, [r1, #8]
    32fc:	e5925004 	ldr	r5, [r2, #4]
    3300:	e1500002 	cmp	r0, r2
    3304:	e3c55003 	bic	r5, r5, #3
    3308:	0a00004a 	beq	3438 <_free_r+0x168>
    330c:	e21ee001 	ands	lr, lr, #1
    3310:	e5825004 	str	r5, [r2, #4]
    3314:	13a0e000 	movne	lr, #0
    3318:	1a000009 	bne	3344 <_free_r+0x74>
    331c:	e5144008 	ldr	r4, [r4, #-8]
    3320:	e064c00c 	rsb	r12, r4, r12
    3324:	e59c0008 	ldr	r0, [r12, #8]
    3328:	e2817008 	add	r7, r1, #8
    332c:	e1500007 	cmp	r0, r7
    3330:	e0833004 	add	r3, r3, r4
    3334:	159c400c 	ldrne	r4, [r12, #12]
    3338:	1580400c 	strne	r4, [r0, #12]
    333c:	15840008 	strne	r0, [r4, #8]
    3340:	03a0e001 	moveq	lr, #1
    3344:	e0820005 	add	r0, r2, r5
    3348:	e5900004 	ldr	r0, [r0, #4]
    334c:	e3100001 	tst	r0, #1
    3350:	1a000009 	bne	337c <_free_r+0xac>
    3354:	e35e0000 	cmp	lr, #0
    3358:	e5920008 	ldr	r0, [r2, #8]
    335c:	e0833005 	add	r3, r3, r5
    3360:	1a000002 	bne	3370 <_free_r+0xa0>
    3364:	e59f41c0 	ldr	r4, [pc, #448]	; 352c <_free_r+0x25c>
    3368:	e1500004 	cmp	r0, r4
    336c:	0a000047 	beq	3490 <_free_r+0x1c0>
    3370:	e592200c 	ldr	r2, [r2, #12]
    3374:	e580200c 	str	r2, [r0, #12]
    3378:	e5820008 	str	r0, [r2, #8]
    337c:	e3832001 	orr	r2, r3, #1
    3380:	e35e0000 	cmp	lr, #0
    3384:	e58c2004 	str	r2, [r12, #4]
    3388:	e78c3003 	str	r3, [r12, r3]
    338c:	1a000018 	bne	33f4 <_free_r+0x124>
    3390:	e3530c02 	cmp	r3, #512	; 0x200
    3394:	3a00001a 	bcc	3404 <_free_r+0x134>
    3398:	e1a024a3 	lsr	r2, r3, #9
    339c:	e3520004 	cmp	r2, #4
    33a0:	8a000042 	bhi	34b0 <_free_r+0x1e0>
    33a4:	e1a0e323 	lsr	lr, r3, #6
    33a8:	e28ee038 	add	lr, lr, #56	; 0x38
    33ac:	e1a0008e 	lsl	r0, lr, #1
    33b0:	e0810100 	add	r0, r1, r0, lsl #2
    33b4:	e5902008 	ldr	r2, [r0, #8]
    33b8:	e1520000 	cmp	r2, r0
    33bc:	e59f1164 	ldr	r1, [pc, #356]	; 3528 <_free_r+0x258>
    33c0:	0a000044 	beq	34d8 <_free_r+0x208>
    33c4:	e5921004 	ldr	r1, [r2, #4]
    33c8:	e3c11003 	bic	r1, r1, #3
    33cc:	e1530001 	cmp	r3, r1
    33d0:	2a000002 	bcs	33e0 <_free_r+0x110>
    33d4:	e5922008 	ldr	r2, [r2, #8]
    33d8:	e1500002 	cmp	r0, r2
    33dc:	1afffff8 	bne	33c4 <_free_r+0xf4>
    33e0:	e592300c 	ldr	r3, [r2, #12]
    33e4:	e58c300c 	str	r3, [r12, #12]
    33e8:	e58c2008 	str	r2, [r12, #8]
    33ec:	e582c00c 	str	r12, [r2, #12]
    33f0:	e583c008 	str	r12, [r3, #8]
    33f4:	e1a00006 	mov	r0, r6
    33f8:	ebfffeae 	bl	2eb8 <__malloc_unlock>
    33fc:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    3400:	e12fff1e 	bx	lr
    3404:	e5912004 	ldr	r2, [r1, #4]
    3408:	e1a031a3 	lsr	r3, r3, #3
    340c:	e1a00143 	asr	r0, r3, #2
    3410:	e3a0e001 	mov	lr, #1
    3414:	e182001e 	orr	r0, r2, lr, lsl r0
    3418:	e0813183 	add	r3, r1, r3, lsl #3
    341c:	e5932008 	ldr	r2, [r3, #8]
    3420:	e58c300c 	str	r3, [r12, #12]
    3424:	e58c2008 	str	r2, [r12, #8]
    3428:	e5810004 	str	r0, [r1, #4]
    342c:	e583c008 	str	r12, [r3, #8]
    3430:	e582c00c 	str	r12, [r2, #12]
    3434:	eaffffee 	b	33f4 <_free_r+0x124>
    3438:	e31e0001 	tst	lr, #1
    343c:	e0853003 	add	r3, r5, r3
    3440:	1a000006 	bne	3460 <_free_r+0x190>
    3444:	e5142008 	ldr	r2, [r4, #-8]
    3448:	e062c00c 	rsb	r12, r2, r12
    344c:	e59c000c 	ldr	r0, [r12, #12]
    3450:	e59ce008 	ldr	lr, [r12, #8]
    3454:	e58e000c 	str	r0, [lr, #12]
    3458:	e580e008 	str	lr, [r0, #8]
    345c:	e0833002 	add	r3, r3, r2
    3460:	e59f20c8 	ldr	r2, [pc, #200]	; 3530 <_free_r+0x260>
    3464:	e5920000 	ldr	r0, [r2]
    3468:	e3832001 	orr	r2, r3, #1
    346c:	e1530000 	cmp	r3, r0
    3470:	e58c2004 	str	r2, [r12, #4]
    3474:	e581c008 	str	r12, [r1, #8]
    3478:	3affffdd 	bcc	33f4 <_free_r+0x124>
    347c:	e59f30b0 	ldr	r3, [pc, #176]	; 3534 <_free_r+0x264>
    3480:	e1a00006 	mov	r0, r6
    3484:	e5931000 	ldr	r1, [r3]
    3488:	ebffff51 	bl	31d4 <_malloc_trim_r>
    348c:	eaffffd8 	b	33f4 <_free_r+0x124>
    3490:	e3832001 	orr	r2, r3, #1
    3494:	e581c014 	str	r12, [r1, #20]
    3498:	e581c010 	str	r12, [r1, #16]
    349c:	e58c000c 	str	r0, [r12, #12]
    34a0:	e58c0008 	str	r0, [r12, #8]
    34a4:	e58c2004 	str	r2, [r12, #4]
    34a8:	e78c3003 	str	r3, [r12, r3]
    34ac:	eaffffd0 	b	33f4 <_free_r+0x124>
    34b0:	e3520014 	cmp	r2, #20
    34b4:	9282e05b 	addls	lr, r2, #91	; 0x5b
    34b8:	91a0008e 	lslls	r0, lr, #1
    34bc:	9affffbb 	bls	33b0 <_free_r+0xe0>
    34c0:	e3520054 	cmp	r2, #84	; 0x54
    34c4:	8a00000a 	bhi	34f4 <_free_r+0x224>
    34c8:	e1a0e623 	lsr	lr, r3, #12
    34cc:	e28ee06e 	add	lr, lr, #110	; 0x6e
    34d0:	e1a0008e 	lsl	r0, lr, #1
    34d4:	eaffffb5 	b	33b0 <_free_r+0xe0>
    34d8:	e5913004 	ldr	r3, [r1, #4]
    34dc:	e1a0e14e 	asr	lr, lr, #2
    34e0:	e3a00001 	mov	r0, #1
    34e4:	e1830e10 	orr	r0, r3, r0, lsl lr
    34e8:	e1a03002 	mov	r3, r2
    34ec:	e5810004 	str	r0, [r1, #4]
    34f0:	eaffffbb 	b	33e4 <_free_r+0x114>
    34f4:	e3520f55 	cmp	r2, #340	; 0x154
    34f8:	91a0e7a3 	lsrls	lr, r3, #15
    34fc:	928ee077 	addls	lr, lr, #119	; 0x77
    3500:	91a0008e 	lslls	r0, lr, #1
    3504:	9affffa9 	bls	33b0 <_free_r+0xe0>
    3508:	e59f0028 	ldr	r0, [pc, #40]	; 3538 <_free_r+0x268>
    350c:	e1520000 	cmp	r2, r0
    3510:	91a0e923 	lsrls	lr, r3, #18
    3514:	928ee07c 	addls	lr, lr, #124	; 0x7c
    3518:	91a0008e 	lslls	r0, lr, #1
    351c:	83a000fc 	movhi	r0, #252	; 0xfc
    3520:	83a0e07e 	movhi	lr, #126	; 0x7e
    3524:	eaffffa1 	b	33b0 <_free_r+0xe0>
    3528:	00032b60 	.word	0x00032b60
    352c:	00032b68 	.word	0x00032b68
    3530:	00032f6c 	.word	0x00032f6c
    3534:	001a9f94 	.word	0x001a9f94
    3538:	00000554 	.word	0x00000554

0000353c <cleanup_glue>:
    353c:	e92d4038 	push	{r3, r4, r5, lr}
    3540:	e1a04001 	mov	r4, r1
    3544:	e5911000 	ldr	r1, [r1]
    3548:	e3510000 	cmp	r1, #0
    354c:	e1a05000 	mov	r5, r0
    3550:	1bfffff9 	blne	353c <cleanup_glue>
    3554:	e1a00005 	mov	r0, r5
    3558:	e1a01004 	mov	r1, r4
    355c:	ebffff5b 	bl	32d0 <_free_r>
    3560:	e8bd4038 	pop	{r3, r4, r5, lr}
    3564:	e12fff1e 	bx	lr

00003568 <_reclaim_reent>:
    3568:	e59f30f0 	ldr	r3, [pc, #240]	; 3660 <_reclaim_reent+0xf8>
    356c:	e5933000 	ldr	r3, [r3]
    3570:	e1500003 	cmp	r0, r3
    3574:	e92d4070 	push	{r4, r5, r6, lr}
    3578:	e1a05000 	mov	r5, r0
    357c:	0a00002b 	beq	3630 <_reclaim_reent+0xc8>
    3580:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
    3584:	e3520000 	cmp	r2, #0
    3588:	0a000011 	beq	35d4 <_reclaim_reent+0x6c>
    358c:	e3a03000 	mov	r3, #0
    3590:	e1a06003 	mov	r6, r3
    3594:	e7921103 	ldr	r1, [r2, r3, lsl #2]
    3598:	e3510000 	cmp	r1, #0
    359c:	0a000005 	beq	35b8 <_reclaim_reent+0x50>
    35a0:	e5914000 	ldr	r4, [r1]
    35a4:	e1a00005 	mov	r0, r5
    35a8:	ebffff48 	bl	32d0 <_free_r>
    35ac:	e2541000 	subs	r1, r4, #0
    35b0:	1afffffa 	bne	35a0 <_reclaim_reent+0x38>
    35b4:	e595204c 	ldr	r2, [r5, #76]	; 0x4c
    35b8:	e2866001 	add	r6, r6, #1
    35bc:	e3560020 	cmp	r6, #32
    35c0:	e1a03006 	mov	r3, r6
    35c4:	1afffff2 	bne	3594 <_reclaim_reent+0x2c>
    35c8:	e1a00005 	mov	r0, r5
    35cc:	e1a01002 	mov	r1, r2
    35d0:	ebffff3e 	bl	32d0 <_free_r>
    35d4:	e5951040 	ldr	r1, [r5, #64]	; 0x40
    35d8:	e3510000 	cmp	r1, #0
    35dc:	11a00005 	movne	r0, r5
    35e0:	1bffff3a 	blne	32d0 <_free_r>
    35e4:	e5951148 	ldr	r1, [r5, #328]	; 0x148
    35e8:	e3510000 	cmp	r1, #0
    35ec:	0a000008 	beq	3614 <_reclaim_reent+0xac>
    35f0:	e2856f53 	add	r6, r5, #332	; 0x14c
    35f4:	e1510006 	cmp	r1, r6
    35f8:	0a000005 	beq	3614 <_reclaim_reent+0xac>
    35fc:	e5914000 	ldr	r4, [r1]
    3600:	e1a00005 	mov	r0, r5
    3604:	ebffff31 	bl	32d0 <_free_r>
    3608:	e1560004 	cmp	r6, r4
    360c:	e1a01004 	mov	r1, r4
    3610:	1afffff9 	bne	35fc <_reclaim_reent+0x94>
    3614:	e5951054 	ldr	r1, [r5, #84]	; 0x54
    3618:	e3510000 	cmp	r1, #0
    361c:	11a00005 	movne	r0, r5
    3620:	1bffff2a 	blne	32d0 <_free_r>
    3624:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    3628:	e3530000 	cmp	r3, #0
    362c:	1a000001 	bne	3638 <_reclaim_reent+0xd0>
    3630:	e8bd4070 	pop	{r4, r5, r6, lr}
    3634:	e12fff1e 	bx	lr
    3638:	e1a00005 	mov	r0, r5
    363c:	e595c03c 	ldr	r12, [r5, #60]	; 0x3c
    3640:	e1a0e00f 	mov	lr, pc
    3644:	e12fff1c 	bx	r12
    3648:	e59512e0 	ldr	r1, [r5, #736]	; 0x2e0
    364c:	e3510000 	cmp	r1, #0
    3650:	0afffff6 	beq	3630 <_reclaim_reent+0xc8>
    3654:	e1a00005 	mov	r0, r5
    3658:	e8bd4070 	pop	{r4, r5, r6, lr}
    365c:	eaffffb6 	b	353c <cleanup_glue>
    3660:	00032730 	.word	0x00032730

00003664 <_wrapup_reent>:
    3664:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    3668:	e2507000 	subs	r7, r0, #0
    366c:	059f3060 	ldreq	r3, [pc, #96]	; 36d4 <_wrapup_reent+0x70>
    3670:	05937000 	ldreq	r7, [r3]
    3674:	e5976148 	ldr	r6, [r7, #328]	; 0x148
    3678:	e3560000 	cmp	r6, #0
    367c:	0a00000d 	beq	36b8 <_wrapup_reent+0x54>
    3680:	e5965004 	ldr	r5, [r6, #4]
    3684:	e2554001 	subs	r4, r5, #1
    3688:	52855002 	addpl	r5, r5, #2
    368c:	50865105 	addpl	r5, r6, r5, lsl #2
    3690:	4a000005 	bmi	36ac <_wrapup_reent+0x48>
    3694:	e5353004 	ldr	r3, [r5, #-4]!
    3698:	e2444001 	sub	r4, r4, #1
    369c:	e1a0e00f 	mov	lr, pc
    36a0:	e12fff13 	bx	r3
    36a4:	e3740001 	cmn	r4, #1
    36a8:	1afffff9 	bne	3694 <_wrapup_reent+0x30>
    36ac:	e5966000 	ldr	r6, [r6]
    36b0:	e3560000 	cmp	r6, #0
    36b4:	1afffff1 	bne	3680 <_wrapup_reent+0x1c>
    36b8:	e597303c 	ldr	r3, [r7, #60]	; 0x3c
    36bc:	e3530000 	cmp	r3, #0
    36c0:	11a00007 	movne	r0, r7
    36c4:	11a0e00f 	movne	lr, pc
    36c8:	112fff13 	bxne	r3
    36cc:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    36d0:	e12fff1e 	bx	lr
    36d4:	00032730 	.word	0x00032730

000036d8 <__cs3_premain>:
    36d8:	e92d4008 	push	{r3, lr}
    36dc:	eb000037 	bl	37c0 <__libc_init_array>
    36e0:	e59f3030 	ldr	r3, [pc, #48]	; 3718 <__cs3_premain+0x40>
    36e4:	e3530000 	cmp	r3, #0
    36e8:	15930000 	ldrne	r0, [r3]
    36ec:	01a00003 	moveq	r0, r3
    36f0:	e59f3024 	ldr	r3, [pc, #36]	; 371c <__cs3_premain+0x44>
    36f4:	e3530000 	cmp	r3, #0
    36f8:	15931000 	ldrne	r1, [r3]
    36fc:	01a01003 	moveq	r1, r3
    3700:	e3a02000 	mov	r2, #0
    3704:	ebfff3ad 	bl	5c0 <main>
    3708:	e59f3010 	ldr	r3, [pc, #16]	; 3720 <__cs3_premain+0x48>
    370c:	e3530000 	cmp	r3, #0
    3710:	1bfffc03 	blne	2724 <exit>
    3714:	eafffffe 	b	3714 <__cs3_premain+0x3c>
	...
    3720:	00002724 	.word	0x00002724

00003724 <_exit>:
    3724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    3728:	e3a00018 	mov	r0, #24
    372c:	e59f1004 	ldr	r1, [pc, #4]	; 3738 <_exit+0x14>
    3730:	ef123456 	svc	0x00123456
    3734:	eafffffe 	b	3734 <_exit+0x10>
    3738:	00020026 	.word	0x00020026

0000373c <_sbrk>:
    373c:	e92d4008 	push	{r3, lr}
    3740:	e59f305c 	ldr	r3, [pc, #92]	; 37a4 <_sbrk+0x68>
    3744:	e59f105c 	ldr	r1, [pc, #92]	; 37a8 <_sbrk+0x6c>
    3748:	e5932000 	ldr	r2, [r3]
    374c:	e5913000 	ldr	r3, [r1]
    3750:	e3520000 	cmp	r2, #0
    3754:	e0830000 	add	r0, r3, r0
    3758:	0a000002 	beq	3768 <_sbrk+0x2c>
    375c:	e0602002 	rsb	r2, r0, r2
    3760:	e3520000 	cmp	r2, #0
    3764:	ba000009 	blt	3790 <_sbrk+0x54>
    3768:	e04d2003 	sub	r2, sp, r3
    376c:	e3520000 	cmp	r2, #0
    3770:	ba000002 	blt	3780 <_sbrk+0x44>
    3774:	e04d2000 	sub	r2, sp, r0
    3778:	e35200ff 	cmp	r2, #255	; 0xff
    377c:	da000003 	ble	3790 <_sbrk+0x54>
    3780:	e5810000 	str	r0, [r1]
    3784:	e1a00003 	mov	r0, r3
    3788:	e8bd4008 	pop	{r3, lr}
    378c:	e12fff1e 	bx	lr
    3790:	eb000006 	bl	37b0 <__errno>
    3794:	e3a0300c 	mov	r3, #12
    3798:	e5803000 	str	r3, [r0]
    379c:	e3e03000 	mvn	r3, #0
    37a0:	eafffff7 	b	3784 <_sbrk+0x48>
    37a4:	00032f70 	.word	0x00032f70
    37a8:	00032f74 	.word	0x00032f74

000037ac <__cs3_isr_interrupt>:
    37ac:	eafffffe 	b	37ac <__cs3_isr_interrupt>

000037b0 <__errno>:
    37b0:	e59f3004 	ldr	r3, [pc, #4]	; 37bc <__errno+0xc>
    37b4:	e5930000 	ldr	r0, [r3]
    37b8:	e12fff1e 	bx	lr
    37bc:	00032730 	.word	0x00032730

000037c0 <__libc_init_array>:
    37c0:	e92d4070 	push	{r4, r5, r6, lr}
    37c4:	e59f506c 	ldr	r5, [pc, #108]	; 3838 <__libc_init_array+0x78>
    37c8:	e59f606c 	ldr	r6, [pc, #108]	; 383c <__libc_init_array+0x7c>
    37cc:	e0656006 	rsb	r6, r5, r6
    37d0:	e1b06146 	asrs	r6, r6, #2
    37d4:	12455004 	subne	r5, r5, #4
    37d8:	13a04000 	movne	r4, #0
    37dc:	0a000005 	beq	37f8 <__libc_init_array+0x38>
    37e0:	e5b53004 	ldr	r3, [r5, #4]!
    37e4:	e2844001 	add	r4, r4, #1
    37e8:	e1a0e00f 	mov	lr, pc
    37ec:	e12fff13 	bx	r3
    37f0:	e1560004 	cmp	r6, r4
    37f4:	1afffff9 	bne	37e0 <__libc_init_array+0x20>
    37f8:	e59f5040 	ldr	r5, [pc, #64]	; 3840 <__libc_init_array+0x80>
    37fc:	e59f6040 	ldr	r6, [pc, #64]	; 3844 <__libc_init_array+0x84>
    3800:	e0656006 	rsb	r6, r5, r6
    3804:	eb000015 	bl	3860 <_init>
    3808:	e1b06146 	asrs	r6, r6, #2
    380c:	12455004 	subne	r5, r5, #4
    3810:	13a04000 	movne	r4, #0
    3814:	0a000005 	beq	3830 <__libc_init_array+0x70>
    3818:	e5b53004 	ldr	r3, [r5, #4]!
    381c:	e2844001 	add	r4, r4, #1
    3820:	e1a0e00f 	mov	lr, pc
    3824:	e12fff13 	bx	r3
    3828:	e1560004 	cmp	r6, r4
    382c:	1afffff9 	bne	3818 <__libc_init_array+0x58>
    3830:	e8bd4070 	pop	{r4, r5, r6, lr}
    3834:	e12fff1e 	bx	lr
    3838:	00003878 	.word	0x00003878
    383c:	00003878 	.word	0x00003878
    3840:	00003878 	.word	0x00003878
    3844:	00003880 	.word	0x00003880

Disassembly of section .rodata:

0000384c <_global_impure_ptr-0xc>:
    384c:	000000c7 	.word	0x000000c7
    3850:	000000c8 	.word	0x000000c8
    3854:	000000c9 	.word	0x000000c9

00003858 <_global_impure_ptr>:
    3858:	00032738 00000043                       8'..C...

00003860 <_init>:
    3860:	e1a0c00d 	mov	r12, sp
    3864:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    3868:	e24cb004 	sub	r11, r12, #4
    386c:	e24bd028 	sub	sp, r11, #40	; 0x28
    3870:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    3874:	e12fff1e 	bx	lr

00003878 <__init_array_start>:
    3878:	0000316c 	.word	0x0000316c

0000387c <__frame_dummy_init_array_entry>:
    387c:	00000208                                ....

00003880 <__libc_fini>:
    3880:	e1a0c00d 	mov	r12, sp
    3884:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    3888:	e24cb004 	sub	r11, r12, #4
    388c:	e24bd028 	sub	sp, r11, #40	; 0x28
    3890:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    3894:	e12fff1e 	bx	lr

00003898 <__fini_array_start>:
    3898:	000001c4 	.word	0x000001c4

0000389c <__cs3_regions>:
    389c:	00000000 	.word	0x00000000
    38a0:	00000040 	.word	0x00000040
    38a4:	00000040 	.word	0x00000040
    38a8:	00032f38 	.word	0x00032f38
    38ac:	00177058 	.word	0x00177058
