            .text
            .equ HEX0_3_BASE, 0xFF200020
            .equ HEX4_5_BASE, 0xFF200030
            .global HEX_clear_ASM
            .global HEX_flood_ASM
            .global HEX_write_ASM
			MOV R4, #1	//bit identifier
			MOV R2, #6	//loop counter
			LDR R5, =Value //Points to Value address

HEX_clear_ASM:
			MOV		R3, #0x00
			PUSH	(R4, R2, LR)
			BL		Flag
			POP		(R4, R2, LR)
            BX      LR                  

HEX_flood_ASM:
            MOV     R3, #0x7F
			PUSH	(R4, R2, LR)
			BL		Flag
			POP		(R4, R2, LR)
            BX      LR     
            
HEX_write_ASM:
            LDR     R5, =Value
			LDRB    R3, [R5, R3]       
			PUSH	(R4, R2, LR)      
            BL      Flag	          
            POP		(R4, R2, LR)	
            BX      LR                 			

HEX_write_ASM_unsafe:
			
            
            
            

Flag:		PUSH	(LR)
			TST 	R0, R4
			BXLNE 	Identify
			LSL 	R4, R1, #1
			SUBS	R2, R2, #1
			BEQ		DONE
			B		Flag

Done		POP		(LR)
			BX		LR			

Identify:	CMP		#6, R2
			BEQ		Hex0
			CMP		#5, R2
			BEQ		Hex1
			CMP		#4, R2
			BEQ		Hex2
			CMP		#3, R2
			BEQ		Hex3
			CMP		#2, R2
			BEQ		Hex4
			CMP		#1, R2
			BEQ		Hex5
			BX		LR

Hex0:		STRB	R3, [HEX0_3_BASE]
			BX		LR

Hex1:		STRB	R3, [HEX0_3_BASE, #1]
			BX		LR

Hex2:		STRB	R3, [HEX0_3_BASE, #2]
			BX		LR

Hex3:		STRB	R3, [HEX0_3_BASE, #3]
			BX		LR

Hex4:		STRB	R3, [HEX4_5_BASE]
			BX		LR

Hex5:		STRB	R3, [HEX4_5_BASE, #1]
			BX		LR

Value:		.byte   0x3F                // '0'
            .byte   0x06                // '1'
            .byte   0x5B                // '2'
            .byte   0x4F                // '3'
            .byte   0x66                // '4'
            .byte   0x6D                // '5'
            .byte   0x7D                // '6'
            .byte   0x07                // '7'
            .byte   0x7F                // '8'
            .byte   0x67                // '9'
            .byte   0x77                // 'A'
            .byte   0x7F                // 'B'
            .byte   0x39                // 'C'
            .byte   0x3F                // 'D'
            .byte   0x79                // 'E'
            .byte   0x71                // 'F'


			.end